2025-06-10  Whamcloud
       * version 2.15.7
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-553.53.1.el8  (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         4.18.0-477.27.1.el8  (RHEL8.8)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-570.17.1.el9  (RHEL9.6)
         5.14.0-503.40.1.el9  (RHEL9.5)
         5.14.0-427.42.1.el9  (RHEL9.4)
         5.14.0-362.24.1.el9  (RHEL9.3)
         4.18.0-553.53.1.el8  (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
         5.15.0-88            (Ubuntu 22.04)
         5.4.0-110            (Ubuntu 20.04)
         6.4.0-150600.23.50   (SLES15 SP6)
         5.14.21-150500.55.65 (SLES15 SP5)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.14.0-70.30.1.el9   (RHEL9.0)
         5.14.0-162.23.1.el9  (RHEL9.1)
         5.14.0-284.30.1.el9  (RHEL9.2)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         5.14.21-150400.24.100 (SLES15 SP4)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.47.2-wc1 or newer
       * Recommended ZFS version: 2.3.2
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

2024-11-27  Whamcloud
       * version 2.15.6
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-553.27.1.el8  (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         4.18.0-477.27.1.el8  (RHEL8.8)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-503.14.1.el9  (RHEL9.5)
         5.14.0-427.42.1.el9  (RHEL9.4)
         5.14.0-362.24.1.el9  (RHEL9.3)
         4.18.0-553.27.1.el8  (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
         5.15.0-88            (Ubuntu 22.04)
         5.4.0-110            (Ubuntu 20.04)
         5.14.21-150500.55.65 (SLES15 SP5)
         5.14.21-150400.24.100 (SLES15 SP4)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.14.0-70.30.1.el9   (RHEL9.0)
         5.14.0-162.23.1.el9  (RHEL9.1)
         5.14.0-284.30.1.el9  (RHEL9.2)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.47.1-wc1 or newer
       * Recommended ZFS version: 2.1.15
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

06-28-2024 Whamcloud
       * version 2.15.5
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-553.5.1.el8   (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-427.20.1.el9  (RHEL9.4)
         5.14.0-362.24.1.el9  (RHEL9.3)
         4.18.0-553.5.1.el8   (RHEL8.10)
         4.18.0-513.24.1.el8  (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
         5.4.0-37             (Ubuntu 20.04)
         5.14.21-150500.55.65 (SLES15 SP5)
         5.14.21-150400.24.28 (SLES15 SP4)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.14.0-70.30.1.el9   (RHEL9.0)
         5.14.0-162.23.1.el9  (RHEL9.1)
         5.14.0-284.30.1.el9  (RHEL9.2)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.47.0-wc6 or newer
       * Recommended ZFS version: 2.1.15
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

12-22-2023 Whamcloud
       * version 2.15.4
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-513.9.1.el8   (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-362.13.1.el9  (RHEL9.3)
         5.14.0-284.30.1.el9  (RHEL9.2)
         4.18.0-513.9.1.el8   (RHEL8.9)
         4.18.0-477.27.1.el8  (RHEL8.8)
         5.4.0-37             (Ubuntu 20.04)
         5.14.21-150500.55.39 (SLES15 SP5)
         5.14.21-150400.24.28 (SLES15 SP4)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.14.0-70.30.1.el9   (RHEL9.0)
         5.14.0-162.23.1.el9  (RHEL9.1)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.47.0-wc5 or newer
       * Recommended ZFS version: 2.1.11
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

'06-19-2023 Whamcloud
       * version 2.15.3
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-477.10.1.el8  (RHEL8.8)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-284.11.1.el9  (RHEL9.2)
         5.14.0-162.23.1.el9  (RHEL9.1)
         4.18.0-477.10.1.el8  (RHEL8.8)
         5.4.0-37             (Ubuntu 20.04)
         5.14.21-150400.24.28 (SLES15 SP4)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.88.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.14.0-70.30.1.el9   (RHEL9.0)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.47.0-wc1 or newer
       * Recommended ZFS version: 2.1.11
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

01-11-2023 Whamcloud
       * version 2.15.2
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-425.3.1.el8   (RHEL8.7)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.80.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         5.14.0-70.30.1.el9   (RHEL9.0)
         4.18.0-425.3.1.el8   (RHEL8.7)
         5.4.0-37             (Ubuntu 20.04)
         5.14.21-150400.24.28 (SLES15 SP4)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.80.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.23.1.el8  (RHEL8.5)
         4.18.0-372.32.1.el8  (RHEL8.6)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         5.3.18-150300.59.93  (SLES15 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.46.5.wc1 or newer
       * Recommended ZFS version: 2.1.5
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

08-10-2022 Whamcloud
       * version 2.15.1
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-372.9.1.el8   (RHEL8.6)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.71.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.2.1.el8   (RHEL8.5)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         4.18.0-372.9.1.el8   (RHEL8.6)
         5.4.0-37             (Ubuntu 20.04)
         5.3.18-59.27         (SLES15 SP3)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.71.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.2.1.el8   (RHEL8.5)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.46.2.wc5 or newer
       * Recommended ZFS version: 2.1.2
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

06-16-2022 Whamcloud
       * version 2.15.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         4.18.0-372.9.1.el8   (RHEL8.6)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.49.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.2.1.el8   (RHEL8.5)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
         vanilla linux 5.4.21  (ZFS + ldiskfs)
         vanilla linux 5.4.136  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         4.18.0-372.9.1.el8   (RHEL8.6)
         5.4.0-37             (Ubuntu 20.04)
         5.3.18-59.27         (SLES15 SP3)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.49.1.el7 (RHEL7.9)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.22.1.el8  (RHEL8.3)
         4.18.0-305.25.1.el8  (RHEL8.4)
         4.18.0-348.2.1.el8   (RHEL8.5)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.91       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.96         (SLES15 SP2)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-48            (Ubuntu 18.04)
         5.8.0-53             (Ubuntu 20.04.2 HWE)
         5.11.0-31            (Ubuntu 20.04.3 HWE)
         5.11.0               (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.46.2.wc5 or newer
       * Recommended ZFS version: 2.1.2
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

02-20-2021 Whamcloud
       * version 2.14.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.6.1.el7  (RHEL7.9)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.1.1.el8   (RHEL8.3)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         4.15.0-32            (Ubuntu 18.04)
         5.4.0-48             (Ubuntu 20.04)
         vanilla linux 5.4.0  (ZFS + ldiskfs)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary kernels built and tested during release cycle:
         3.10.0-1062.18.1.el7 (RHEL7.7)
         3.10.0-1127.19.1.el7 (RHEL7.8)
         3.10.0-1160.6.1.el7  (RHEL7.9)
         4.12.14-95.48        (SLES12 SP4)
         4.12.14-122.20       (SLES12 SP5)
         4.12.14-197.75       (SLES15 SP1)
         5.3.18-24.24         (SLES15 SP2)
         4.15.0-48            (Ubuntu 18.04)
       * Other clients known to build on these kernels at some point (others may also work):
         3.10.0-862.14.4.el7  (RHEL7.5)
         3.10.0-957.27.2.el7  (RHEL7.6)
         4.14.0-49.13.1.el7a  (RHEL7.5)
         4.14.0-115.2.2.el7a  (RHEL7.6)
         4.18.0-80.11.2.el8   (RHEL8.0)
         4.18.0-147.8.1.el8   (RHEL8.1)
         4.18.0-193.28.1.el8  (RHEL8.2)
         4.18.0-240.1.1.el8   (RHEL8.3)
         4.4.120-92.70        (SLES12 SP2)
         4.4.180-94.100       (SLES12 SP3)
         4.4.0-131            (Ubuntu 16.04)
         5.4.0-37             (Ubuntu 20.04)
         5.4.0                (vanilla kernel.org)
       * Recommended e2fsprogs version: 1.45.6.wc5 or newer
       * Recommended ZFS version: 2.0.0
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

11-20-2019 Whamcloud
       * version 2.13.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server primary kernels built and tested during release cycle:
         3.10.0-1062.1.1.el7 (RHEL7.7)
       * Other server kernels known to build and work at some point (others may also work):
         3.10.0-862.14.4.el7 (RHEL7.5)
         3.10.0-957.27.2.el7 (RHEL7.6)
         4.18.0-80.7.1.el8   (RHEL8.0)
         4.4.120-92.70       (SLES12 SP2)
         4.4.180-94.100      (SLES12 SP3)
         4.4.0-131           (Ubuntu 16.04)
         4.15.0-32           (Ubuntu 18.04)
         vanilla linux 4.6.7 (ZFS only)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client primary unpatched kernels built and tested during release cycle:
         3.10.0-1062.1.1.el7 (RHEL7.7)
         4.12.14-95.29       (SLES12 SP4)
         4.15.0-48           (Ubuntu 18.04)
       * Other clients known to build on unpatched kernels at some point (others may also work):
         3.10.0-862.14.4.el7 (RHEL7.5)
         3.10.0-957.27.2.el7 (RHEL7.6)
         4.14.0-49.13.1.el7a (RHEL7.5)
         4.14.0-115.2.2.el7a (RHEL7.6)
         4.18.0-80.7.1.el8   (RHEL8.0)
         4.4.120-92.70       (SLES12 SP2)
         4.4.180-94.100      (SLES12 SP3)
         4.4.0-131           (Ubuntu 16.04)
         vanilla linux 4.15.0 (ZFS only)
       * Recommended e2fsprogs version: 1.45.2.wc1 or newer
       * Recommended ZFS / SPL version: 0.7.13
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option
       * Note for Ubuntu 14.04.5:
         The 4.4.0 series is the HWE Kernel derived from 16.04 (Xenial).
         See: https://wiki.ubuntu.com/Kernel/LTSEnablementStack

--------------------------------------------------------------------------------

12-21-2018 Whamcloud
       * version 2.12.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on the following kernels (others may also work):
         2.6.32-696.18.7.el6 (RHEL6.9)
         3.10.0-862.14.4.el7 (RHEL7.5)
         3.10.0-957.el7      (RHEL7.6)
         4.4.120-92.70       (SLES12 SP2)
         4.4.162-94.69       (SLES12 SP3)
         4.4.0-131           (Ubuntu 16.04)
         4.15.0-32           (Ubuntu 18.04)
         vanilla linux 4.6.7 (ZFS only)
       * ldiskfs needs an ldiskfs patch series for that kernel, ZFS does not
       * Client known to build on unpatched kernels (others may also work):
         2.6.32-696.18.7.el6 (RHEL6.9)
         2.6.32-754.6.3.el6  (RHEL6.10)
         3.10.0-862.14.4.el7 (RHEL7.5)
         3.10.0-957.el7	     (RHEL7.6)
         4.14.0-49.13.1.el7a (RHEL7.5)
         4.14.0-115.2.2.el7a (RHEL7.6)
         4.4.120-92.70       (SLES12 SP2)
         4.4.162-94.69       (SLES12 SP3)
         4.4.0-131           (Ubuntu 16.04)
         4.15.0-32           (Ubuntu 18.04)
         vanilla linux 4.15.0 (ZFS only)
       * Recommended e2fsprogs version: 1.44.3.wc1 or newer
       * Recommended ZFS / SPL version: 0.7.9
       * Tested with ZFS / SPL version: 0.7.9
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option
       * Note for Ubuntu 14.04.5:
         The 4.4.0 series is the HWE Kernel derived from 16.04 (Xenial).
         See: https://wiki.ubuntu.com/Kernel/LTSEnablementStack

--------------------------------------------------------------------------------

2018-04-03 Intel Corporation
       * version 2.11.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.15.1.el6 (RHEL6.8)
         2.6.32-696.18.7.el6 (RHEL6.9)
         3.10.0-693.21.1.el7 (RHEL7.4)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-107         (SLES11 SP4)
         3.12.74-60.64.40    (SLES12 SP1)
         4.4.114-92.64       (SLES12 SP2)
         4.4.114-94.11       (SLES12 SP3)
         3.13.0-101          (Ubuntu 14.04, ZFS only)
         4.4.0-85.108        (Ubuntu 14.04.5 LTS)
         4.4.0-116           (Ubuntu 16.04)
         vanilla linux 4.6.7 (ZFS only)
       * Client known to build on unpatched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.15.1.el6 (RHEL6.8)
         2.6.32-696.18.7.el6 (RHEL6.9)
         3.10.0-693.21.1.el7 (RHEL7.4)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-107         (SLES11 SP4)
         3.12.74-60.64.40    (SLES12 SP1)
         4.4.114-92.64       (SLES12 SP2)
         4.4.114-94.11       (SLES12 SP3)
         3.13.0-101          (Ubuntu 14.04)
         4.4.0-85.108        (Ubuntu 14.04.5 LTS)
         4.4.0-116           (Ubuntu 16.04)
         vanilla linux 4.6.7
       * Recommended e2fsprogs version: 1.42.13.wc6 or newer
       * Recommended ZFS / SPL version: 0.7.6
       * Tested with ZFS / SPL version: 0.7.6
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option
       * Note for Ubuntu 14.04.5:
         The 4.4.0 series is the HWE Kernel derived from 16.04 (Xenial).
         See: https://wiki.ubuntu.com/Kernel/LTSEnablementStack

--------------------------------------------------------------------------------

2017-07-05 Intel Corporation
       * version 2.10.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.15.1.el6 (RHEL6.8)
         2.6.32-696.3.1.el6  (RHEL6.9)
         3.10.0-514.21.1.el7 (RHEL7.3)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-100         (SLES11 SP4)
         3.12.74-60.64.40    (SLES12 SP1)
         4.4.59-92.17        (SLES12 SP2)
         vanilla linux 4.6.7 (ZFS only)
       * Client known to build on unpatched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.15.1.el6 (RHEL6.8)
         2.6.32-696.3.1.el6  (RHEL6.9)
         3.10.0-514.21.1.el7 (RHEL7.3)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-100         (SLES11 SP4)
         3.12.74-60.64.40    (SLES12 SP1)
         4.4.59-92.17        (SLES12 SP2)
         vanilla linux 4.6.7
       * Recommended e2fsprogs version: 1.42.13.wc4 or newer
       * Recommended ZFS / SPL version: 0.6.5.9
       * Tested with ZFS / SPL version: 0.6.5.9
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

12-07-2016 Intel Corporation
       * version 2.9.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.11.1.el6 (RHEL6.8)
         3.10.0-514.el7      (RHEL7.3)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-80          (SLES11 SP4)
         3.12.62-60.64.8     (SLES12 SP1)
         vanilla linux 4.5.7 (ZFS only)
       * Client known to build on unpatched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.26.1.el6 (RHEL6.7)
         2.6.32-642.11.1.el6 (RHEL6.8)
         3.10.0-514.el7      (RHEL7.3)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-80          (SLES11 SP4)
         3.12.62-60.64.8     (SLES12 SP1)
         vanilla linux 4.5.7
       * Recommended e2fsprogs version: 1.42.13.wc5 or newer
       * Recommended ZFS / SPL version: 0.6.5.8
       * Tested with ZFS / SPL version: 0.6.5.8
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

02-29-2016 Intel Corporation
       * version 2.8.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.12.1.el6 (RHEL6.7)
         3.10.0-327.3.1.el7  (RHEL7.2)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-68          (SLES11 SP4)
         vanilla linux 4.2.1 (ZFS only)
       * Client known to build on unpatched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.30.3.el6 (RHEL6.6)
         2.6.32-573.12.1.el6 (RHEL6.7)
         3.10.0-327.3.1.el7  (RHEL7.2)
         3.0.101-0.47.71     (SLES11 SP3)
         3.0.101-68          (SLES11 SP4)
         3.12.39-47          (SLES12)
         vanilla linux 4.2.1
       * Recommended e2fsprogs version: 1.42.13.wc4 or newer
       * Recommended ZFS / SPL version: 0.6.4.2
       * Tested with ZFS / SPL version: 0.6.4.2
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

03-10-2015 Intel Corporation
       * version 2.7.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.8.1.el6  (RHEL6.6)
         3.0.101-0.46        (SLES11 SP3)
       * Client known to build on unpatched kernels:
         2.6.32-431.29.2.el6 (RHEL6.5)
         2.6.32-504.8.1.el6  (RHEL6.6)
         3.10.0-123.20.1.el7 (RHEL7)
         3.0.101-0.46        (SLES11 SP3)
       * Recommended e2fsprogs version: 1.42.9.wc1 or newer
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

Severity   : enhancement
Jira       : LU-6050
Description: control OST-index in IDIF via  ROCOMPAT flag.
Details    : Introduce new flag OBD_ROCOMPAT_IDX_IN_IDIF that is stored in the
	     last_rcvd file. For new formatted OST device, it will be auto set;
	     for the case of upgrading from old OST device, you can enable it
	     via the lproc interface osd-ldiskfs.index_in_idif. With such flag
	     enabled, for new created OST-object, its IDIF-in-LMA will contain
	     the OST-index; for the existing OST-object, the OSD will convert
	     old format IDIF as new format IDIF with OST-index stored in the
	     LMA EA when accessing such OST-object or via OI scrub. Once such
	     flag is enabled, it cannot be reverted back, so the system cannot
	     be downgraded to the orignal incompatible version.

--------------------------------------------------------------------------------

07-30-2014 Intel Corporation
       * version 2.6.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
         for currently supported client and server kernel versions.
       * Server known to build on patched kernels:
         2.6.32-431.20.3.el6 (RHEL6.5)
         3.0.101-0.31        (SLES11 SP3)
       * Client known to build on unpatched kernels:
         2.6.32-431.20.3.el6 (RHEL6.5)
         3.0.101-0.31        (SLES11 SP3)
         3.6.10-4.fc18       (FC18)
         3.10                (kernel.org)
       * Recommended e2fsprogs version: 1.42.9.wc1 or newer
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

10-31-2013 Intel Corporation
       * version 2.5.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
       * Server builds for kernels:
         2.6.32-358.18.1.el6  (RHEL6.4)
       * Client builds for unpatched kernels:
         2.6.32-358.18.1.el6  (RHEL6.4)
         3.0.92-0.8           (SLES11 SP3)
         3.6.10-4.fc18        (FC18)
       * Recommended e2fsprogs version: 1.42.7.wc2 or newer
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

05-30-2013 Intel Corporation
       * version 2.4.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
       * Server builds for kernels:
         2.6.32-358.6.2.el6  (RHEL6.4)
       * Client builds for unpatched kernels:
         2.6.32-358.6.2.el6  (RHEL6.4)
         3.0.74-0.6.6        (SLES11 SP2)
         3.6.10-2.fc17       (FC17)
       * Recommended e2fsprogs version: 1.42.7.wc1 or newer
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

--------------------------------------------------------------------------------

9-30-2012 Whamcloud, Inc.
       * version 2.3.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
       * Server support for kernels:
	 2.6.32-279.5.1.el6 (RHEL6)
       * Client support for unpatched kernels:
	 2.6.32-279.5.1.el6  (RHEL6)
         2.6.27.19-5         (SLES11)
         2.6.18-238.19.1.el5 (RHEL5)
         2.6.16.60-0.69.1    (SLES10)
       * Recommended e2fsprogs version: 1.41.90.wc4
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

Severity   : enhancement
Jira       : LU-1754
Description: Update RHEL6.3 kernel to 2.6.32-279.5.1.el6.

Severity   : enhancement
Jira       : LU-1477
Description: Update RHEL6.3 kernel to 2.6.32-279.2.1.el6.

Severity   : enhancement
Jira       : LU-1424
Description: Update RHEL6.2 kernel to 2.6.32-220.17.1.el6

Severity   : enhancement
Jira       : LU-1358
Description: Update RHEL6.2 kernel to 2.6.32-220.13.1.el6

Severity   : enhancement
Jira       : LU-1241
Description: Update RHEL6.2 kernel to 2.6.32-220.7.1.el6

--------------------------------------------------------------------------------

04-30-2012 Whamcloud, Inc.
       * version 2.2.0
       * See https://wiki.whamcloud.com/display/PUB/Lustre+Support+Matrix
       * Server support for kernels:
         2.6.32-220.4.2.el6  (RHEL6)
       * Client support for unpatched kernels:
         2.6.32-220.4.2.el6  (RHEL6)
         2.6.27.19-5         (SLES11)
         2.6.18-238.19.1.el5 (RHEL5)
         2.6.16.60-0.69.1    (SLES10)
       * Recommended e2fsprogs version: 1.41.90.wc4
       * NFS export disabled when stack size < 8192 (32-bit Lustre clients),
         since the NFSv4 export of Lustre filesystem with 4K stack may cause a
         stack overflow. For more information, please refer to bugzilla 17630.
       * NFSv4 reexport to 32-bit NFS client nodes requires Lustre client on
         the re-exporting nodes to be mounted with "32bitapi" mount option

Severity   : enhancement
Jira       : LU-1120
Description: Update RHEL6.2 kernel to 2.6.32-220.4.2.el6

Severity   : enhancement
Jira       : LU-1054
Description: Update RHEL6.2 kernel to 2.6.32-220.4.1.el6

Severity   : enhancement
Jira       : LU-751
Description: Update RHEL6.2 kernel to 2.6.32-220.el6

Severity   : enhancement
Jira       : LU-624
Description: Update RHEL6.1 kernel to 2.6.32-131.17.1.el6

--------------------------------------------------------------------------------

09-30-2011 Whamcloud, Inc.
       * version 2.1.0
       * Server support for kernels:
         2.6.18-238.19.1.el5 (RHEL5)
         2.6.32-131.6.1.el6 (RHEL6)
       * Client support for unpatched kernels:
         (see http://wiki.lustre.org/index.php?title=Patchless_Client)
         2.6.18-238.19.1.el5 (RHEL5)
         2.6.32-131.6.1.el6 (RHEL6)
         2.6.29.4-167.fc11  (FC11)
         2.6.16.60-0.69.1 (SLES10)
         2.6.27.19-5      (SLES11)
       * Recommended e2fsprogs version: 1.41.90.wc3
       * NFS export disabled when stack size < 8192. Since the NFSv4 export of
         Lustre filesystem with 4K stack may cause a stack overflow. For more
         information, please refer to bugzilla 17630.
       * NFSv4 reexport requires Lustre client on the re-exporting nodes to be
         mounted with "32bitapi" mount option

Severity   : enhancement
Description: Update RHEL6.1 kernel to 2.6.32-131.6.1.el6

Severity   : enhancement
Description: Update RHEL5.6 kernel to 2.6.18-238.19.1.el5

Severity   : enhancement
Description: Update RHEL5.6 kernel to 2.6.18-238.9.1.el5

Severity   : normal
Frequency  : only with SLES10
Bugzilla   : 20744
Description: Use OFED "KMP" provided by Novell
Details    : SLES10 SP3 ships with OFED in a separate "KMP" package.
	     Lustre is now built against this package. That means you need to
	     install the ofed-kmp package from Novell for the patchless client.
	     Note that the ofed-kmp that Novell ships may not exactly match the
	     kernel version but should still be compatible.

Severity   : enhancement
Bugzilla   : 22514
Description: Update RHEL5.5 kernel to 2.6.18-194.17.1.el5
	     Update OEL5.5  kernel to 2.6.18-194.17.1.0.1.el5.

--------------------------------------------------------------------------------

2010-07-15  Oracle, Inc.
       * version 2.0.0
       * Server support for kernels:
         2.6.18-164.11.1.el5 (RHEL 5)
         2.6.18-164.11.1.0.1.el5 (OEL 5)
       * Client support for unpatched kernels:
	 (see http://wiki.lustre.org/index.php?title=Patchless_Client)
         2.6.18-164.11.1.el5 (RHEL 5),
         2.6.18-164.11.1.0.1.el5 (OEL 5)
         2.6.16.60-0.42.8 (SLES 10),
         2.6.27.19-5 (SLES11)
	 2.6.29.4-167.fc11 (FC11)
       * Recommended e2fsprogs version: 1.41.10-sun2

Severity   : enhancement
Bugzilla   : 22481
Description: Distribute lfs_migrate script with lustre
Details    : The lfs_migrate mentioned in the manual is now included in the
             lustre tree in lustre/scripts and will distributed in lustre RPMs.

Severity   : enhancement
Bugzilla   : 15253
Description: Failover nid list added to import proc file.

Severity   : enhancement
Bugzilla   : 22864
Description: "som_preview" mount option required to use SOM
Details    : The clients will need to use som_preview mount option
             in order to use SOM. 

Bugzilla   : 22850
Description: Lustre does not do 1MB IOs to HW RAID
Details    : Bump MAX_PHYS/HW_SEGMENTS and SG_ALL to 256 in the RHEL5 kernel.

Severity   : enhancement
Bugzilla   : 22194
Description: lfs quota output is not very convenient for awk/sed-parsing
Details    : Some positions in lfs quota output table could be empty or
	     non-empty which made it hard to parse it with scripts, now
	     a dash is put instead of space where there is not supposed
	     to be any data.

Severity   : normal
Bugzilla   : 22787
Description: Update to OFED 1.5.1
Details    : OFED 1.5.1 will be  used in environments that don't use
	     vendor supplied OFED.

Severity   : normal
Bugzilla   : 22455
Description: Remove lnet. prefix from lctl params display
Details    : Also renamed lnet.memused to lnet_memused to
	     avoid name conflict.

Severity   : normal
Bugzilla   : 15253
Description: Use conf_param -d to remove permanant settings.

Severity   : normal
Bugzilla   : 22455
Description: Add list_param -R
Details    : lctl list_param now supports recursive mode.

Severity   : normal
Bugzilla   : 21829, 22312
Description: Fix llobdstat.
Details    : 1. Now updating the write_bytes counter
	     2. Port script fixes from 1.8.

Severity   : normal
Bugzilla   : 20433
Description: decrease the usage of memory on clients.
Details    : 1. On clients, recycle dentries and inodes unused.
	     2. Delete the code related to ll_deathrow(att 6215 in bug 1443). It
	        is useless now.

Severity   : normal
Bugzilla   : 21829
Description: llobdstat fix and enhancement
Details    : add a counter to set a limit to how many samples will be returned
	     fix a wildcard in the path to limit to obdfilter stats only

Severity   : normal
Bugzilla   : 21259
Description: lfs check only allowed for root
Details    : Code cleanups and added a regresion test of non-root use of
	     lfs check.

Severity   : normal
Bugzilla   : 21879
Description: MDS Oopses in ptlrpc_dispatch_difficult_reply()/__list_add()
Details    : Fix hr->hr_index overload.

Severity   : normal
Bugzilla   : 19742
Description: Fix FIEMAP functionality.

Severity   : normal
Bugzilla   : 19808
Description: FC11 patchless client support added

Severity   : normal
Bugzilla   : 21632
Description: Update RHEL5.4 kernel to 2.6.18-164.11.1.el5 and
	     OEL5.4 kernel to 2.6.18-164.11.1.0.1.el5.

Severity   : normal
Bugzilla   : 20057
Description: New acc-sm script and various test-framework enhancments.

Severity   : normal
Bugzilla   : 15962
Description: Previously landed patch was reverted.

Severity   : normal
Bugzilla   : 20758
Description: Update SLES10 kernel to 2.6.16.60-0.42.8 (patchless)

Severity   : normal
Bugzilla   : 19673
Description: Add ldiskfs maxdirsize mount option.

Severity   : normal
Bugzilla   : 20301
Description: Fix mkfs.lustre support for 16TB LUNs.

Severity   : normal
Bugzilla   : 21564
Description: Print mmp_check_interval
Details    : print mmp_check_interval and make it possible to abort
	     mount operation in case it takes too long.

Severity   : normal
Bugzilla   : 21547
Description: Add cascading_rw to lustre mpi tests.

Severity   : normal
Bugzilla   : 19964
Description: Store SOM data in EA.
Details    : Also several SOM related cleanups.

Severity   : normal
Bugzilla   : 20098
Description: Add refcount to md_open_data

Severity   : normal
Bugzilla   : 20607
Description: Use refcount on lov_request_set to prevent memory corruption.

Severity   : normal
Bugzilla   : 15692
Description: Statahead: use parent dir's i_mutex for synchronization.

Severity   : normal
Bugzilla   : 21571
Description: loadgen improvements.

Severity   : normal
Bugzilla   : 16186
Description: Enable peer health detection in ksocklnd and ko2iblnd.

Severity   : normal
Bugzilla   : 17545
Description: Control DCACHE_LUSTRE_INVALID flag with MDS_INODE_LOOKCUP lock

Severity   : normal
Bugzilla   : 21591
Description: Fix race on obd_devcie:md_stats

Severity   : normal
Bugzilla   : 21600
Description: Fix SLES 11 client builds.
Details    : Resolved uninitalized pointer gcc warnings.

Severity   : normal
Bugzilla   : 21259
Description: Allow non-root access for "lfs check".
Details    : Added a check in obd_class_ioctl() for OBD_IOC_PING_TARGET.

Severity   : normal
Bugzilla   : 21513
Description: Clear imp_force_reconnect correctly in ptlrpc_connect_interpret()

Severity   : enhancement
Bugzilla   : 20773
Description: Update kernel to RHEL5.4 2.6.18-164.6.1.el5 and
	     OEL5 2.6.18-164.6.1.0.1.el5(Both in-kernel OFED enabled).

Severity   : normal
Bugzilla   : 21049
Description: Sanity test_27p fails.
Details    : OBD_FAIL_OST_ENOSPC has been moved to filter_statfs().
             Sanity tests 27 were cleaned up and improved.

Severity   : normal$
Bugzilla   : 18631
Description: Unify req format on client/servers
Details    : Use new req_capsule API [almost] everywhere instead of old PTLRPC
             buffers and swabbers approach..

Severity   : normal
Frequency  : cleanup
Bugzilla   : 19200
Description: drop join file stuff.

Severity   : enhancement
Bugzilla   : 14250
Description: Add 2.6.27 and SLES11 (patchless client) support

Severity   : normal
Bugzilla   : 20302
Description: Fix in ptlrpc_expire_one_request() to print the signed time
	     difference.

Severity   : enhancement
Bugzilla   : 16312
Description: Build kernels (RHEL5, OEL5 and SLES10/11) using the vendor's own
             kernel spec file.

Severity   : enhancement
Bugzilla   : 19662
Description: Remove set_info(KEY_UNLINKED) from MDS/OSC

Severity   : enhancement
Bugzilla   : 19526
Description: correctly handle big reply message.
Details    : send LNet event if reply is bigger than buffer and adjust this buffer
             correctly.

Severity   : normal
Bugzilla   : 19917
Description: Drop unnecessary __GFP_NOMEMALLOC flag from filter_get_page()

Severity   : enhancement
Bugzilla   : 20539
Description: Add support for OEL5.

Severity   : normal
Bugzilla   : 20482
Description: Conf-sanity.sh 50g test - deactivated OST should not cause a panic.

Severity   : enhancement
Bugzilla   : 21452
Description: "weak-modules" support
Details    : Implement "weak-modules" support which enables kernel modules
	     to be used with any kernel that implements the same kABI.  In
	     order to achieve this modules are now installed in
	     /lib/modules/$(uname -r)/updates/kernel on all distributions.

Severity   : normal
Bugzilla   : 18674
Description: client could not reconnect to OST because of an active request.
Details    : The client now retries to reconnect to the same server, if a
	     connect request failed with EBUSY or -EAGAIN. Test case 35b
	     conf-sanity.sh has been created.

Severity   : normal
Bugzilla   : 19557
Description: Don't allow make backward step on assignin osc next id.
Details    : race between allocation next id and ll_sync thread can be cause
             of set wrong osc next id and can be kill valid ost objects.

Severity   : normal
Bugzilla   : 20533
Description: Changes in raid5-large-io-rhel5.patch to calculate sectors properly

Severity   : normal
Bugzilla   : 20533
Description: Increase the default BLK_DEF_MAX_SECTORS value for RHEL5 and SLES11

Severity   : normal
Bugzilla   : 20482
Description: Error handling in osc_statfs_interpret() has been improved.
Details    : Check in osc_statfs_interpret() for EBADR.

Severity   : normal
Bugzilla   : 20482
Description: Do not send statfs() requests to OSTs disabled by administrator.
Details    : Check in lov_prep_statfs_set() for non-NULL ltd_exp.

Severity   : enhancement
Bugzilla   : 20200
Description: Added sanity-quota test to for lfs(1) to work with numeric uid/gid.

Severity   : enhancement
Bugzilla   : 20400
Description: Update kernel to RHEL5 2.6.18-128.7.1.el5.

Severity   : enhancement
Bugzilla   : 20200
Description: Enhancement for lfs(1) command to use numeric uid/gid.

Severity   : normal
Bugzilla   : 14951
Description: Improved cleanup procedure for conf-sanity test_46a.

Severity   : normal
Bugzilla   : 18674
Description: Do not start bulk transfer, if client tried to reconnect.
Details    : Do not start bulk transfer, if client tried to reconnect,
	     but failed due to active rpcs. Check for exp_abort_active_req
	     has been implemented.

Severity   : normal
Bugzilla   : 19566
Description: Prevent inconsistences between linux and lustre mount structures.
Details    : Wait indefinitely in server_wait_finished() until mnt_count drops.
	     Make the sleep interruptible.

Severity   : enhancement
Bugzilla   : 19955
Description: provide server to client comms path
Details    : server to client communications path via new LDLM_SET_INFO rpc

Severity   : normal
Bugzilla   : 20008
Description: truncate starts GFP_FS allocation under transaction causing deadlock
Details    : ldiskfs_truncate calls grab_cache_page which may start page
             allocation under an open transaction. This may lead to
             calling prune_icache with consequent lustre reentrance.

Severity   : normal
Bugzilla   : 19934
Description: send correctly lsm on open replay
Details    : MDS is trust to LSM size on replay open, but client can set wrong size
             to lsm buffer.

Severity   : normal
Bugzilla   : 19854
Description: enable client interface failover
Details    : When a child reconnects from another NID, properly update export
             nid hash position and ldlm reverse import.

Severity   : enhancement
Bugzilla   : 18539
Description: Communicate OST degraded/readonly state via statfs to MDS
Details    : Flags in the statfs returned from OSTs indicate whether the
	     OST is in a degraded RAID state, or if the filesystem has
	     turned read-only after a filesystem error is detected.

Severity   : normal
Bugzilla   : 20122
Frequency  : rare
Description: don't panic if EPROTO was hit when reading symlink
Details    : correctly handling request reference in error cases.

Severity   : enhancement
Bugzilla   : 19856
Description: Add LustreNetLink, a kernel-userspace communcation path.

Severity   : enhancement
Bugzilla   : 19847
Description: Update kernel to SLES10 SP2 2.6.16.60-0.39.3.

Severity   : normal
Frequency  : rare
Bugzilla   : 18800
Description: access to llog context before init.
Details    : move handling CATALOGS file at osc layer and forbid access to llog
	     context before init.

Severity   : normal
Frequency  : rare, only when client is writing to OST on local node
Bugzilla   : 19529
Description: Avoid deadlock for local client writes
Details    : Use new OBD_BRW_MEMALLOC flag to notify OST about writes in the
	     memory freeing context. This allows OST threads to set the
	     PF_MEMALLOC flag on task structures in order to allocate memory
	     from reserved pools and complete IO.
	     Use GFP_HIGHUSER for OST allocations for non-local client writes,
	     so that the OST threads generate memory pressure and allow
	     inactive pages to be reclaimed.

Severity   : enhancement
Bugzilla   : 19846
Description: Update kernel to RHEL5.3 2.6.18-128.1.14.el5.

Severity   : normal
Frequency  : rare
Bugzilla   : 18380
Description: lock ordering violation between &cli->cl_sem and _lprocfs_lock
Details    : move ldlm namespace creation in setup phase to avoid grab
	     _lprocfs_lock with cli_sem held.

Severity   : normal
Bugzilla   : 19507
Description: Temporarily disable grant shrink.
Details    : Disable the feature for debugging.

Severity   : normal
Frequency  : only when formatting test filesystems
Bugzilla   : 18624
Description: Unable to run several mkfs.lustre on loop devices at the same time
Details    : mkfs.lustre returns error 256 on the concurrent loop devices
	     formatting. The solution is to proper handle the error.

Severity   : enhancement
Bugzilla   : 19024
Description: Update kernel to RHEL5.3 2.6.18-128.1.6.el5.

Severity   : enhancement
Bugzilla   : 19212
Description: Update kernel to SLES10 SP2 2.6.16.60-0.37.

Severity   : normal
Frequency  : rare
Bugzilla   : 19528
Description: resolve race between obd_disconnect and class_disconnect_exports
Details    : if obd_disconnect will be called to already disconnected export he
	     forget release one reference and osc module can't unloaded.

Severity   : enhancement
Bugzilla   : 18688
Description: Allow tuning service thread via /proc
Details    : For each service a new
	     /proc/fs/lustre/{service}/*/thread_{min,max,started} entry is
	     created that can be used to set min/max thread counts, and get the
	     current number of running threads.

Severity   : normal
Frequency  : rare
Bugzilla   : 18382
Descriptoin: don't return error if have partially created objects for file.
Details    : lov_update_create_set uses set->set_success as index for created
	     objects, so if some requests will be failed, they will have hole
	     at end of array and qos_shrink_lsm for allocate correct lsm.

Severity   : enhancement
Bugzilla   : 17671
Description: Update OFED support to 1.4.1

Severity   : normal
Frequency  : common
Bugzilla   : 18645
Description: Reduce small size read RPC
Details    : Set read-ahead limit for every file and only do read-ahead when
	     available read-ahead pages are bigger than 1M to avoid small size
	     read RPC.

Severity   : enhancement
Bugzilla   : 19293
Description: move AT tunable parameters for more consistent usage
Details    : add AT tunables under /proc/sys/lustre, add to conf_param parsing

Severity   : enhancement
Bugzilla   : 17974
Description: add lazystatfs mount option to allow statfs(2) to skip down OSTs
Details    : allow skip disconnected ost for send statfs request and hide error
	     in this case.

Severity   : major
Frequency  : rare
Bugzilla   : 18810
Description: fix racy locking of mballoc block bitmaps causing BUG
Details    : The locking of the mballoc buddy bitmap and the in-memory
	     block bitmap was using two different spin locks in some
	     cases.  This made it possible to incorrectly access the
	     mballoc bitmap while another process was modifying it,
	     causing a sanity assertion to fail.  While no on-disk corruption
	     was reported, there was some risk of this happening.

Severity   : normal
Frequency  : rare, on llog test 6
Bugzilla   : 16839
Descriptoin: don't allow connect to already connected import
Details    : allowing connect to already connected import is hide connecting problem.

Severity   : normal
Frequency  : rare
Bugzilla   : 18902
Descriptoin: allow kill process which wait statahead result
Details    : for some reasons 'ls' can stick in waiting result from statahead,
	     in this case need way for kill this process.

Severity   : enhancement
Bugzilla   : 18798
Description: Add state history info file, enhance import info file
Details    : Track import connection state changes in a new osc/mdc proc file;
	     add overview-type data to the osc/mdc import proc file.

Severity   : enhancement
Bugzilla   : 17536
Description: MDS create should not wait for statfs RPC while holding DLM lock.

Severity   : enhancement
Bugzilla   : 18289
Description: Update to RHEL5U3 kernel-2.6.18-128.1.1.el5.

Severity   : normal
Frequency  : normal
Bugzilla   : 12069
Descriptoin: OST grant too much space to client even there are not enough space.
Details    : Client will shrink its grant cache to OST if there are no write
	     activity over 6 mins (GRANT_SHRINK_INTERVAL), and OST will retrieve
	     this grant cache if there are already not enough avaible space
	     (left_space < total_clients * 32M).

Severity   : normal
Frequency  : start MDS on uncleanly shutdowned MDS device
Bugzilla   : 16839
Descriptoin: ll_sync thread stay in waiting mds<>ost recovery finished
Details    : stay in waiting mds<>ost recovery finished produce random bugs
	     due race between two ll_sync thread for one lov target. send
	     ACTIVATE event only if connect realy finished and import have
	     FULL state.

Severity   : normal
Frequency  : rare, connect and disconnect target at same time
Bugzilla   : 17310
Descriptoin: ASSERTION(atomic_read(&imp->imp_inflight) == 0
Details    : don't call obd_disconnect under lov_lock. this long time
	     operation and can block ptlrpcd which answer to connect request.

Severity   : normal
Frequency  : rare
Bugzilla   : 18154
Descriptoin: don't lose wakeup for imp_recovery_waitq
Details    : recover_import_no_retry or invalidate_import and import_close can
	     both sleep on imp_recovery_waitq, but we was send only one wakeup
	     to sleep queue.

Severity   : normal
Frequency  : always with long access acl
Bugzilla   : 17636
Descriptoin: mds can't pack reply with long acl.
Details    : mds don't control size of acl but they limited by reint/getattr
	     reply buffer.

Severity   : enhancement
Bugzilla   : 18061
Description: Update to SLES10 kernel-2.6.16.60-0.33.

Severity   : enhancement
Bugzilla   : 18060
Description: Update to RHEL5 kernel-2.6.18-92.1.22.el5.

Severity   : normal
Frequency  : start MDS on uncleanly shutdowned MDS device
Bugzilla   : 18049
Descriptoin: aborting recovery hang on MDS
Details    : don't throttle destroy RPCs for the MDT.

Severity   : major
Frequency  : on remount
Bugzilla   : 18018
Description: external journal device not working after the remount
Details    : clear dev_rdonly flag for external journal devices in
	     blkdev_put()

Severity   : minor
Frequency  : rare
Bugzilla   : 17802
Description: shutdown vs evict race
Details    : client_disconnect_export vs connect request race.
	     if client will evicted at this time - we start invalidate
	     thread without referece to import and import can be freed
	     at same time.

Severity   : normal
Frequency  : rare, need acl's on inode.
Bugzilla   : 16492
Description: client can't handle ost additional correctly
Details    : if ost was added after client connected to mds client can have
	     hit lnet_try_match_md ... to big messages to wide striped files.
	     in this case need teach client to handle config events about add
	     lov target and update client max ea size at that event.

Severity   : enhancement
Bugzilla   : 15699
Description: Changelogs
Details    : Changelogs are a lightweight mechanism to track filesystem
	     metadata and namespace changes.  The changelog is recorded
	     permanently on the MDTs, and is periodically "consumed" / purged
	     when records are no longer needed.

Severity   : enhancement
Bugzilla   : 15957
Description: compact fld format with extents
Details    : Store range of seq rather than every seq in FLD. Seq
	     controller update FLD rather than clients. In Case of CMD, mdt0
	     has FLD, all other metadata server act as non persistent proxy
	     for FLD queries and cache fld entries in fld cache.

Severity   : normal
Frequency  : rare
Bugzilla   : 16081
Description: don't skip ost target if they assigned to file
Details    : Drop slow OSCs if we can, but not for requested start idx.
	     This means "if OSC is slow and it is not the requested
	     start OST, then it can be skipped, otherwise skip it only
	     if it is inactive/recovering/out-of-space.

Severity   : normal
Bugzilla   : 16080
Description: more cleanup in mds_lov
Details    : not send LOV EA under replay, we can't know about they size at this
	     time. Don't allow client connect to mds before any ost connected,
	     for avoid problems with LOV EA size and returning EIO to client.

Severity   : enhancement
Bugzilla   : 11826
Description: Interoperability at server side (Disk interoperability)

Severity   : enhancement
Bugzilla   : 17201
Description: Update to RHEL5 kernel-2.6.18-92.1.17.el5.

Severity   : enhancement
Bugzilla   : 17458
Description: Update to SLES10 SP2 kernel-2.6.16.60-0.31.

Severity   : enhancement
Bugzilla   : 14166
Description: New client IO stack (CLIO).

Severity   : enhancement
Bugzilla   : 15393
Description: Commit on sharing. Eliminate inter-client dependencies between
	     uncommitted transactions by doing transaction commits.
	     Thereby clients may recovery independently.

Severity   : normal
Frequency  : Create a symlink file with a very long name
Bugzilla   : 16578
Description: ldlm_cancel_pack()) ASSERTION(max >= dlm->lock_count + count)
Details    : If there is no extra space in the request for early cancels,
             ldlm_req_handles_avail() returns 0 instead of a negative value.

Severity   : enhancement
Bugzilla   : 1819
Description: Add /proc entry for import status
Details    : The mdc, osc, and mgc import directories now have
	     an import directory that contains useful import data for debugging
	     connection problems.

Severity   : enhancement
Bugzilla   : 15966
Description: Re-disable certain /proc logging
Details    : Enable and disable client's offset_stats, extents_stats and
	     extents_stats_per_process stats logging on the fly.

Severity   : major
Frequency  : Only on FC kernels 2.6.22+
Bugzilla   : 16303
Description: oops in statahead
Details    : Do not drop reference count for the dentry from VFS when lookup,
	     VFS will do that by itself.

Severity   : enhancement
Bugzilla   : 16643
Description: Generic /proc file permissions
Details    : Set /Proc file permissions in a more generic way to enable non-
	     root users operate on some /proc files.

Severity   : major
Bugzilla   : 16561
Description: Hitting mdc_commit_close() ASSERTION
Details    : Properly handle request reference release in
	     ll_release_openhandle().

Severity   : major
Bugzilla   : 14840
Description: quota recovery deadlock during mds failover
Details    : This patch includes att18982, att18236, att18237 in bz14840.
             Slove the problems:
             1. fix osts hang when mds does failover with quotaon
             2. prevent watchdog storm when osts threads wait for the
	        recovery of mds

Severity   : normal
Bugzilla   : 15975
Frequency  : only patchless client
Description: add workaround for race between add/remove dentry from hash

Severity   : enhancement
Bugzilla   : 16845
Description: Allow OST glimpses to return PW locks

Severity   : minor
Bugzilla   : 16717
Description: LBUG when llog conf file is full
Details    : When llog bitmap is full, ENOSPC should be returned for plain log.

Severity   : normal
Bugzilla   : 16907
Description: Prevent import from entering FULL state when server in recovery

Severity   : major
Bugzilla   : 16750
Description: service mount cannot take device name with ":"
Details    : Only when device name contains ":/" will mount treat it as
	     client mount.

Severity   : normal
Bugzilla   : 15927
Frequency  : rare
Description: replace ptlrpcd with the statahead thread to interpret the async
	     statahead RPC callback

Severity   : normal
Bugzilla   : 16611
Frequency  : on recovery
Description: I/O failures after umount during fail back
Details    : if client reconnected to restarted server we need join to recovery
	     instead of find server handler is changed and process self
	     eviction with cancel all locks.

Severity   : enhancement
Bugzilla   : 16633
Description: Update to RHEL5 kernel-2.6.18-92.1.10.el5.

Severity   : enhancement
Bugzilla   : 16547
Description: Update to SLES10 SP2 kernel-2.6.16.60-0.27.

Severity   : enhancement
Bugzilla   : 16566
Description: Upcall on Lustre log has been dumped
Details    : Allow for a user mode script to be called once a Lustre log has
	     been dumped. It passes the filename of the dumped log to the
	     script, the location of the script can be specified via
	     /proc/sys/lnet/debug_log_upcall.

Severity   : minor
Bugzilla   : 16583
Frequency  : rare
Description: avoid idr_remove called for id which is not allocated.
Details    : Move assigment s_dev for clustered nfs to end of initialization,
	     to avoid problem with error handling.

Severity   : minor
Bugzilla   : 16109
Frequency  : rare
Description: avoid Already found the key in hash [CONN_UNUSED_HASH] messages
Details    : When connection is reused this not moved from CONN_UNUSED_HASH
	     into CONN_USED_HASH and this prodice warning when put connection
	     again in unused hash.


Severity   : enhancement
Bugzilla   : 15899
Description: File striping can now be set to use an arbitrary pool of OSTs.

Severity   : enhancement
Bugzilla   : 16573
Description: Export bytes_read/bytes_write count on OSC/OST.

Severity   : normal
Bugzilla   : 16237
Description: Early reply size mismatch, MGC loses connection
Details    : Apply the MGS_CONNECT_SUPPORTED mask at reconnect time so
	     the connect flags are properly negotiated.

Severity   : normal
Frequency  : often
Bugzilla   : 16125
Description: quotas are not honored with O_DIRECT
Details    : all writes with the flag O_DIRECT will use grants which leads to
	     this problem. Now using OBD_BRW_SYNC to guard this.

Severity   : normal
Bugzilla   : 15058
Description: add quota statistics
Details    : 1. sort out quota proc entries and proc code.
	     2. add quota statistics

Severity   : enhancement
Bugzilla   : 13058
Description: enable quota support for HEAD.

Severity   : normal
Bugzilla   : 16006
Description: Properly propagate oinfo flags from lov to osc for statfs
Details    : restore missing copy oi_flags to lov requests.

Severity   : enhancement
Bugzilla   : 16581
Description: Add man pages for llobdstat(8), llstat(8), plot-llstat(8),
	   : l_getgroups(8), lst(8), routerstat(8)
Details    : included man pages for llobdstat(8), llstat(8),
	   : plot-llstat(8), l_getgroups(8), lst(8), routerstat(8)

Severity   : enhancement
Bugzilla   : 16091
Description: configure's --enable-quota should check the
	   : kernel .config for CONFIG_QUOTA
Details    : configure is terminated if --enable-quota is passed but
	   : no quota support is in kernel

Severity   : normal
Bugzilla   : 13139
Description: Remove portals compatibility
Details    : Remove portals compatibility, not interoperable with releases
	     before 1.4.6

Severity   : normal
Bugzilla   : 15576
Description: Resolve device initialization race
Details    : Prevent proc handler from accessing devices added to the
	     obd_devs array but yet be intialized.

Severity   : enhancement
Bugzilla   : 15308
Description: Update to SLES10 SP2 kernel-2.6.16.60-0.23.

Severity   : enhancement
Bugzilla   : 16190
Description: Update to RHEL5 kernel-2.6.18-92.1.6.el5.

Severity   : normal
Bugzilla   : 12975
Frequency  : rare
Description: Using wrong pointer in osc_brw_prep_request
Details    : Access to array[-1] can produce panic if kernel compiled with
	     CONFIG_PAGE_ALLOC enabled

Severity   : normal
Bugzilla   : 16037
Description: Client runs out of low memory
Details    : Consider only lowmem when counting initial number of llap pages

Severity   : normal
Bugzilla   : 15625
Description: *optional* service tags registration
Details    : if the "service tags" package is installed on a Lustre node
	     When the filesystem is mounted, a local-node service tag will
	     be created.  See http://inventory.sun.com/ for more information
	     about the Service Tags asset management system.

Severity   : normal
Bugzilla   : 15825
Description: Kernel BUG tries to release flock
Details    : Lustre does not destroy flock lock before last reference goes
	     away. So always drop flock locks when client is evicted and
	     perform unlock regardless of successfulness of speaking to MDS.

Severity   : normal
Bugzilla   : 15210
Description: add refcount protection for osc callbacks, avoid panic on shutdown

Severity   : normal
Bugzilla   : 12653
Description: sanity test 65a fails if stripecount of -1 is set
Details    : handle -1 striping on filesystem in ll_dirstripe_verify

Severity   : normal
Bugzilla   : 14742
Frequency  : rare
Description: ASSERTION(CheckWriteback(page,cmd)) failed
Details    : badly clear PG_Writeback bit in ll_ap_completion can produce false
	     positive assertion.

Severity   : enhancement
Bugzilla   : 15865
Description: Update to RHEL5 kernel-2.6.18-53.1.21.el5.

Severity   : major
Bugzilla   : 15924
Description: do not process already freed flock
Details    : flock can possibly be freed by another thread before it reaches
	     to ldlm_flock_completion_ast.

Severity   : normal
Bugzilla   : 14480
Description: LBUG during stress test
Details    : Need properly lock accesses the flock deadlock detection list.

Severity   : minor
Bugzilla   : 15837
Description: oops in page fault handler
Details    : kernel page fault handler can return two special 'pages' in error
	     case, don't try dereference NOPAGE_SIGBUS and NOPAGE_OMM.

Severity   : minor
Bugzilla   : 15716
Description: timeout with invalidate import.
Details    : ptlrpcd_check call obd_zombie_impexp_cull and wait request which
	     should be handled by ptlrpcd. This produce long age waiting and
	     -ETIMEOUT ptlrpc_invalidate_import and as result LASSERT.

Severity   : enhancement
Bugzilla   : 15741
Description: Update to RHEL5 kernel-2.6.18-53.1.19.el5.

Severity   : major
Bugzilla   : 14134
Description: enable MGS and MDT services start separately
Details    : add a 'nomgs' option in mount.lustre to enable start a MDT with
	     a co-located MGS without starting the MGS, which is a complement
	     to 'nosvc' mount option.

Severity   : normal
Bugzilla   : 14835
Frequency  : after recovery
Description: precreate to many object's after del orphan.
Details    : del orphan st in oscc last_id == next_id and this triger growing
	     count of precreated objects. Set flag LOW to skip increase count
	     of precreated objects.

Severity   : normal
Bugzilla   : 15139
Frequency  : rare, on clear nid stats
Description: ASSERTION(client_stat->nid_exp_ref_count == 0)
Details    : when clean nid stats sometimes try destroy live entry,
	     and this produce panic in free.

Severity   : major
Bugzilla   : 15575
Description: Stack overflow during MDS log replay
	     ease stack pressure by using a thread dealing llog_process.

Severity   : normal
Bugzilla   : 15443
Description: wait until IO finished before start new when do lock cancel.
Details    : VM protocol want old IO finished before start new, in this case
	     need wait until PG_writeback is cleared until check dirty flag and
	     call writepages in lock cancel callback.

Severity   : enhancement
Bugzilla   : 14929
Description: using special macro for print time and cleanup in includes.

Severity   : normal
Bugzilla   : 12888
Description: mds_mfd_close() ASSERTION(rc == 0)
Details    : In mds_mfd_close(), we need protect inode's writecount change
	     within its orphan write semaphore to prevent possible races.

Severity   : minor
Bugzilla   : 14929
Description: Obsolete CURRENT_SECONDS and use cfs_time_current_sec() instead.

Severity   : minor
Bugzilla   : 14645
Frequency  : rare, on shutdown ost
Description: don't hit live lock with umount ost.
Details    : shrink_dcache_parent can be in long loop with destroy dentries,
	     use shrink_dcache_sb instead.

Severity   : minor
Bugzilla   : 14949
Description: don't panic with use echo client
Details    : echo client pass NULL as client nid pointer and this produce null
	     pointer dereference.

Severity   : normal
Bugzilla   : 15278
Description: fix build on ppc32
Details    : compile code with -m64 flag produce wrong object file for ppc32.

Severity   : normal
Bugzilla   : 12191
Description: add message levels for liblustreapi

Severity   : normal
Bugzilla   : 13380
Description: fix for occasional failure case of -ENOSPC in recovery-small tests
Details    : Move the 'good_osts' check before the 'total_bavail' check.  This
	     will result in an -EAGAIN and in the exit call path we call
	     alloc_rr() which will with increasing aggressiveness attempt to
	     aquire precreated objects on the minimum number of required OSCs.

Severity   : major
Bugzilla   : 14326
Description: Use old size assignment to avoid deadlock
Details    : Reverts the changes in bugs 2369 and bug 14138 that introduced
	     the scheduling while holding a spinlock.  We do not need locking
	     for size in ll_update_inode() because size is only updated from
	     the MDS for directories or files without objects, so there is no
	     other place to do the update, and concurrent access to such inodes
	     are protected by the inode lock.

Severity   : normal
Bugzilla   : 14746
Description: resolve "_IOWR redefined" build error on SLES10

Severity   : normal
Bugzilla   : 14763
Description: dump the memory debugging after all modules are unloaded to
	     suppress false negative in conf_sanity test 39

Severity   : enhancement
Bugzilla   : 15316
Description: build kernel-ib packages for OFED 1.3 in our release cycle

Severity   : minor
Bugzilla   : 13969
Frequency  : always
Description: fix SLES kernel versioning
Details    : the kernel version for our SLES 10 kernel did not include a "-"
	     before the "smp" at the end.  while this was not a problem in
	     general, it did mean that software trying to use the kernel
	     version to try to detect a vendor specific kernel would fail.
	     this was most evident by the OFED build scripts.

Severity   : normal
Bugzilla   : 14803
Description: Don't update lov_desc members until making sure they are valid
Details    : When updating lov_desc members via proc fs, need fix their
	     validities before doing the real update.

Severity   : normal
Bugzilla   : 15069
Description: don't put request into delay list while invalidate in flight.
Details    : ptlrpc_delay_request sometimes put in delay list while invalidate
	     import in flight. this produce timeout for invalidate and sometimes
	     can cause stale data.

Severity   : minor
Bugzilla   : 14856
Frequency  : on ppc only
Description: not convert ost objects for directory because it's not exist.
Details    : ll_dir_getstripe assume dirrectory has ost objects but this wrong.

Severity   : normal
Bugzilla   : 12652
Description: Add FMODE_EXEC file flag for SLES10 SP1 kernel.

Severity   : enhancement
Bugzilla   : 13397
Description: Update to support 2.6.22.14 vanilla kernel.

Severity   : normal
Bugzilla   : 14533
Frequency  : rare, on recovery
Description: read procfs can produce deadlock in some situation
Details    : Holding lprocfs lock which send rpc can produce block for destroy
	     obd objects and this also block reconnect with -EALREADY. This
	     isn't fix all lprocfs bugs - but make it rare.

Severity   : enhancement
Bugzilla   : 15152
Description: Update kernel to RHEL5 2.6.18-53.1.14.el5.

Severity   : major
Frequency  : frequent on X2 node
Bugzilla   : 15010
Description: mdc_set_open_replay_data LBUG
Details    : Set replay data for requests that are eligible for replay.

Severity   : normal
Bugzilla   : 14321
Description: lustre_mgs: operation 101 on unconnected MGS
Details    : When MGC is disconnected from MGS long enough, MGS will evict the
	     MGC, and late on MGC cannot successfully connect to MGS and a lot
	     of the error messages complaining that MGS is not connected.

Severity   : major
Bugzilla   : 15027
Frequency  : on network error
Description: panic with double free request if network error
Details    : mdc_finish_enqueue is finish request if any network error ocuring,
	     but it's true only for synchronus enqueue, for async enqueue
	     (via ptlrpcd) this incorrect and ptlrpcd want finish request
	     himself.

Severity   : enhancement
Bugzilla   : 11401
Description: client-side metadata stat-ahead during readdir(directory readahead)
Details    : perform client-side metadata stat-ahead when the client detects
	     readdir and sequential stat of dir entries therein

Severity   : major
Frequency  : on start mds
Bugzilla   : 14884
Description: Implement get_info(last_id) in obdfilter.

Severity   : normal
Frequency  : occasional
Bugzilla   : 13537
Description: Correctly check stale fid, not start epoch if ost not support SOM
Details    : open with flag O_CREATE need set old fid in op_fid3 because
	     op_fid2 was overwritten with new generated fid, but mds can answer
	     with one of these two fids and both is not stale.  Setattr
	     incorrectly started an epoch and assume will be called
	     done_writing, but without SOM done_writing ever being called.

Severity   : major
Frequency  : rare, depends on device drivers and load
Bugzilla   : 14529
Description: MDS or OSS nodes crash due to stack overflow
Details    : Code changes in 1.8.0 increased the stack usage of some functions.
	     In some cases, in conjunction with device drivers that use a lot
	     of stack the MDS (or possibly OSS) service threads could overflow
	     the stack.  One change which was identified to consume additional
	     stack has been reworked to avoid the extra stack usage.

Severity   : normal
Frequency  : occasional
Bugzilla   : 13730
Description: Do not fail import if osc_interpret_create gets -EAGAIN
Details    : If osc_interpret_create got -EAGAIN it immediately exits and
	     wakeup oscc_waitq.  After wakeup oscc_wait_for_objects call
	     oscc_has_objects and see OSC has no objests and call
	     oscc_internal_create to resend create request.

Severity   : enhancement
Bugzilla   : 14858
Description: Update to SLES10 SP1 latest kernel-2.6.16.54-0.2.5.

Severity   : enhancement
Bugzilla   : 14876
Description: Update to RHEL5 latest kernel-2.6.18-53.1.13.el5.

Severity   : normal
Frequency  : very rare
Bugzilla   : 3462
Description: Fix replay if there is an un-replied request and open
Details    : In some cases, older replay request will revert the
	     mcd->mcd_last_xid on MDS which is used to record the client's
	     latest sent request.

Severity   : enhancement
Bugzilla   : 14720
Description: Update to RHEL5 latest kernel-2.6.18-53.1.6.el5.

Severity   : enhancement
Bugzilla   : 14482
Description: Add rhel5 support to HEAD.

Serverity  : enhancement
Bugzilla   : 14793
Description: Update RHEL4 kernel to 2.6.9-67.0.4.

Severity   : minor
Frequency  : rare
Bugzilla   : 13196
Description: Don't allow skipping OSTs if index has been specified.
Details    : Don't allow skipping OSTs if index has been specified, make
	     locking in internal create lots better.

Severity   : normal
Bugzilla   : 12228
Description: LBUG in ptlrpc_check_set() bad phase ebc0de00
Details    : access to bitfield in structure is always rounded to long
	     and this produce problem with not atomic change any bit.

Severity   : normal
Bugzilla   : 13647
Description: Lustre make rpms failed.
Details    : Remove ldiskfs spec file to avoids rpmbuild be confused when
	     builds Lustre rpms from tarball.

Severity   : normal
Frequency  : rare on shutdown ost
Bugzilla   : 14608
Description: If llog cancel was not send before clean_exports phase, this can
	     produce deadlock in llog code.
Details    : If llog thread has last reference to obd and call class_import_put
	     this produce deadlock because llog_cleanup_commit_master wait when
	     last llog_commit_thread exited, but this never success because was
	     called from llog_commit_thread.

Severity   : normal
Bugzilla   : 9977
Description: allow userland application know is lost one of stripes.
Details    : fill lvb_blocks with error code on ost and return it to
	     application if error flag found.

Severity   : normal
Bugzilla   : 14607
Description: NULL lov_tgts causing MDS oops
Details    : more safe checks for NULL lov_tgts for avoid oops.

Severity   : enhancement
Bugzilla   : 14531
Description: Update to RHEL4 latest kernel-2.6.9-67.0.1.EL.

Severity   : normal
Bugzilla   : 13375
Descriptoin: make lov_create() will not stuck in obd_statfs_rqset()
Details    : If an OST is down the MDS will hang indefinitely in
	     obd_statfs_rqset() waiting for the statfs data. While for
	     MDS QOS usage of statfs, it should not stuck in waiting.

Severity   : enhancement
Bugzilla   : 11842
Description: remote_acl support
Details    : Support ACL-based permission check for remote user.
	     Support setfacl/getfacl for remote user with the utils
	     "lfs {l,r}{s,g}etfacl" which follow the same parameter format as
	     the system "{s,g}etfacl" utils.

Severity   : enhancement
Bugzilla   : 14288
Description: Update to RHEL4 U6 kernel-2.6.9-67.EL.

Severity   : enhancement
Bugzilla   : 14368
Description: Update to RHEL5 latest kernel-2.6.18-53.1.4.el5.

Severity   : normal
Bugzilla   : 14136
Description: make mgs_setparam() handle fsname containing dash
Details    : fsname containing a dash does not work with lctl conf_param

Severity   : enhancement
Bugzilla   : 14388
Description: Update to SLES10 SP1 latest kernel-2.6.16.54-0.2.3.

Severity   : enhancement
Bugzilla   : 14289
Description: Update to RHEL5 Update-1 kernel 2.6.18-53.el5.

Severity   : major
Bugzilla   : 14260
Frequency  : rare, at shutdown
Description: access already free / zero obd_namespace.
Details    : if client_disconnect_export was called without force flag set,
	     and exist connect request in flight, this can produce access to
	     NULL pointer (or already free pointer) when connect_interpret
	     store ocd flags in obd_namespace.

Severity   : minor
Bugzilla   : 14418
Frequency  : only at startup
Description: not alloc memory with spinlock held.
Details    : allocation memory with GFP_KERNEL can produce sleep deadlock,
	     if any spinlock held.

Severity   : enhancement
Bugzilla   : 12211
Description: make lustre randomly fail allocating memory
Details    : Make lustre randomly failed allocating memory for testing purpose.

Severity   : enhancement
Bugzilla   : 12702
Description: lost problems with lov objid file
Details    : Fixes some scability and access to not inited memory problems
	     in work with lov objdid file.

Severity   : major
Frequency  : always
Bugzilla   : 14270
Description: lfs find does not continue on file error
Details    : Continue other files processing when a file/dir is absent.

Severity   : normal
Bugzilla   : 11791
Description: Inconsistent usage of lustre_pack_reply()
Details    : Standardize the usage of lustre_pack_reply() such that it
	     always generate a CERROR on failure.

Severity   : major
Frequency  : occasional
Bugzilla   : 13917
Description: MDS hang or stay in waiting lock
Details    : If client receive lock with CBPENDING flag ldlm need send lock
	     cancel as separate rpc, to avoid situation when cancel request
	     can't processed due all i/o threads stay in wait lock.

Severity   : normal
Bugzilla   : 13969
Description: Update to RHEL5 kernel 2.6.18-8.1.15.el5.

Severity   : normal
Bugzilla   : 13874
Description: Update to SLES10 SP1 kernel 2.6.16.53-0.16

Severity   : normal
Bugzilla   : 13889
Description: Update to SLES9 kernel-2.6.5-7.287.3.

Severity   : normal
Bugzilla   : 14041
Description: Update to RHEL4 latest kernel.

Severity   : enhancement
Bugzilla   : 13690
Description: Build SLES10 patchless client fails
Details    : The configure was broken by run ./configure with
	     --with-linux-obj=.... argument for patchless client. When the
	     configure use --with-linux-obj, the LINUXINCLUDE= -Iinclude
	     can't search header adequately. Use absolute path such as
	     -I($LINUX)/include instead.

Severity   : normal
Bugzilla   : 13888
Description: interrupt oig_wait produce painc on resend.
Details    : brw_redo_request can be used for resend requests from ptlrpcd and
	     private set, and this produce situation when rq_ptlrpcd_data not
	     copyed to new allocated request and triggered LBUG on assert
	     req->rq_ptlrpcd_data != NULL. But this member used only for wakeup
	     ptlrpcd set if request is changed and can be safety changed to use
	     rq_set directly.

Severity   : normal
Bugzilla   : 13497
Description: LASSERT_{REQ,REP}SWAB macros are buggy
Details    : If SWAB_PARANOIA is disabled, the LASSERT_REQSWAB and
	     LASSERT_REPSWAB macros become no-ops, which is incorrect. Drop
	     these macros and replace them with their difinitions instead.

Severity   : normal
Bugzilla   : 13521
Description: Update kernel patches for SLES10 2.6.16.53-0.8.
Details    : Update which_patch & target file for SLES10 latest kernel.

Bugzilla   : 12411
Description: Remove client patches from SLES 10 kernel.
Details    : This causes SLES 10 clients to behave as patchless clients
	     even on a Lustre-patched (server) kernel.

Severity   : enhancement
Bugzilla   : 2262
Description: self-adjustable client's lru lists
Details    : use adaptive algorithm for managing client cached locks lru
	     lists according to current server load, other client's work
	     pattern, memory activities, etc. Both, server and client
	     side namespaces provide number of proc tunables for controlling
	     things

Severity   : enhancement
Bugzilla   : 13641
Description: light-weight GSS support
Details    : Support krb5n and krb5a mode, which keep Kerberos 5 authentication
	     and reduce performance overhead.

Severity   : enhancement
Bugzilla   : 11832
Description: Linux keyring support
Details    : Support using service of Linux keyring for Lustre GSS internal
	     context refresh/cache mechanism.

Severity   : normal
Bugzilla   : 12186
Description: Fix errors in lfs documentation
Details    : Fixes man pages

Severity   : normal
Bugzilla   : 12606
Description: don't use GFP_* in generic Lustre code.
Details    : Use cfs_alloc_* functions and CFS_* flags for code portability.

Severity   : normal
Bugzilla   : 12333
Description: obdclass is limited by single OBD_ALLOC(idarray)
Details    : replace OBD_ALLOC/OBD_FREE with OBD_VMALLOC/OBD_VFREE

Severity   : normal
Bugzilla   : 13006
Description: warnings with build patchless client with vanila 2.6.19 and up
Details    : change old ctl_table style and replace ctl_table/ctl_table_header
	     with cfs_sysctl_table_t/cfs_sysctl_table_header_t

Severity   : normal
Bugzilla   : 13177
Frequency  : Only for SLES
Description: sanity_quota fail test_1
Details    : There are multiple occurences of $TSTUSR in SLES's /etc/group
	     file, which makes TSTID[2] inunique.

Severity   : normal
Bugzilla   : 13249
Frequency  : Only for SLES9
Description: Kernel patches for SLES9 2.6.5-7.286 kernel
Details    : Update target/ChangeLog/which_patch .

Severity   : normal
Bugzilla   : 13170
Frequency  : Only for test_10 in sanity-quota.sh
Description: a bug in quota test code
Details    : checking a test flag in a wrong place

Severity   : normal
Bugzilla   : 13171
Frequency  : Only for test_13 in sanity-quota.sh
Description: a bug in quota test script
Details    : shouldn't check overfull allocated quota

Severity   : normal
Bugzilla   : 12955
Description: jbd statistics
Details    : Port older jbd statistics patch for sles10

Severity   : enhancement
Bugzilla   : 11721
Description: Add printing inode info into message about error in writepage.

Severity   : normal
Bugzilla   : 11974
Frequency  : Rare
Description: reply_lock_interpret crash due to race with it and lock cancel.
Details    : Do not replay locks that are being cancelled. Do not reference
	     locks by their address during replay, just by their handle.

Severity   : normal
Bugzilla   : 13103
Frequency  : When flocks are used.
Description: assertion failure in ldlm_cli_enquque_fini for non NULL lock.
Details    : Flock locks might destroy just granted lock if it could be merged
	     with another existing flock, this is done in completion handler,
	     so teach ldlm_cli_enquque_fini that this is a valid case for
	     flock locks.

Severity   : minor
Bugzilla   : 13276
Frequency  : rare
Description: Oops in read and write path when failing to allocate lock.
Details    : Check if lock allocation failed and return error back.

Severity   : normal
Bugzilla   : 11679
Description: lstripe command fails for valid OST index
Details    : The stripe offset is compared to lov->desc.ld_tgt_count
	     instead of lov->desc.ld_active_tgt_count.

Severity   : normal
Bugzilla   : 12584
Description: sanity.sh failed test 103
Details    : RHEL mis-interpret setfacl "-X" param, so we won't test setfacl
	     with param "-X".

Severity   : normal
Bugzilla   : 12743
Description: df doesn't work properly if diskfs blocksize != 4K
Details    : Choose biggest blocksize of OST's as the LOV's blocksize.

Severity   : normal
Bugzilla   : 12836
Description: lfs find on -1 stripe looping in lsm_lmm_verify_common()
Details    : Avoid lov_verify_lmm_common() on directory with -1 stripe count.

Severity   : enhancement
Bugzilla   : 3055
Description: Adaptive timeouts
Details    : RPC timeouts adapt to changing server load and network
	     conditions to reduce resend attempts and improve recovery time.

Severity   : normal
Bugzilla   : 12192
Description: llapi_file_create() does not allow some changes
Details    : add llapi_file_open() that allows specifying the mode and
	     open flags, and also returns an open file handle.

Severity   : normal
Bugzilla   : 11248
Description: merge and cleanup kernel patches.
Details    : Remove mnt_lustre_list in vfs_intent-2.6-rhel4.patch.

Severity   : normal
Bugzilla   : 10657
Description: Add journal checksum support.(Kernel part)
Details    : The journal checksum feature adds two new flags i.e
	     JBD2_FEATURE_INCOMPAT_ASYNC_COMMIT and
	     JBD2_FEATURE_COMPAT_CHECKSUM. JBD2_FEATURE_CHECKSUM flag
	     indicates that the commit block contains the checksum for
	     the blocks described by the descriptor blocks. Now commit
	     record can be sent to disk without waiting for descriptor
	     blocks to be written to disk. This behavior is controlled
	     using JBD2_FEATURE_ASYNC_COMMIT flag.

Severity   : minor
Bugzilla   : 12446
Description: OSS needs mutliple precreate threads
Details    : Add ability to start more than one create thread per OSS.

Severity   : normal
Bugzilla   : 13362
Description: Sanity.sh test_65k failed: setstripe should have succeeded
Details    : execute lfs setstripe on client

Severity   : major
Bugzilla   : 12223
Description: mds_obd_create error creating tmp object
Details    : When the user sets quota on root, llog will be affected and can't
	     create files and write files.

Severity   : normal
Frequency  : Always on ia64 patchless client, and possibly others.
Bugzilla   : 12826
Description: Add EXPORT_SYMBOL check for node_to_cpumask symbol.
Details    : This allows the patchless client to be loaded on architectures
	     without this export.

Severity   : normal
Bugzilla   : 13039
Description: RedHat Update kernel for RHEL5
Details    : Add the kernel config file for RHEL5.

Severity   : normal
Bugzilla   : 13039
Description: RedHat Update kernel for RHEL5
Details    : Modify the kernel config file more closer RHEL5.

Severity   : normal
Bugzilla   : 13360
Description: Build failure against Centos5 (RHEL5)
Details    : Define PAGE_SIZE when it isn't present.

Severity   : minor
Bugzilla   : 13363
Description: test_7 on sanity-quota.sh can't be used on separate machines
Details    : add facet to handle it

Severity   : normal
Bugzilla   : 13030
Description: "ll_intent_file_open()) lock enqueue: err: -13" with nfs
Details    : with NFS, the anon dentry's parent was set to itself in
	     d_alloc_anon(), so in MDS, we use rec->ur_fid1 to find the
	     corresponding dentry other than use rec->ur_name.

Severity   : enhancement
Bugzilla   : 12786
Description: lfs setstripe enhancement
Details    : Make lfs setstripe understand 'k', 'm' and 'g' for stripe size.

Severity   : normal
Bugzilla   : 12398
Description: enable data checksumming by default
Details    : enable checksum by default, allow --disable-checksum
	     configure option and "-o nochecksum" mount option.  Checksums
	     can also be disabled at runtime via $LPROC/osc/*/checksum_pages.

Severity   : normal
Bugzilla   : 11802
Description: lustre support for RHEL5
Details    : Add support for RHEL5.

Severity   : normal
Bugzilla   : 12459
Description: Client eviction due to failover config
Details    : after a connection loss, the lustre client should attempt to
	     reconnect to the last active server first before trying the
	     other potential connections.

Severity   : minor
Bugzilla   : 12588
Description: when mds and osts use different quota unit(32bit and 64bit),
	     quota will be released repeatly.
Details    : void sending multiple quota reqs to mds, which will keep the
	     status between the reqs.

Severity   : normal
Bugzilla   : 13125
Description: osts not allocated evenly to files
Details    : change the condition to increase offset_idx

Severity   : critical
Frequency  : Always for filesystems larger than 2TB on 32-bit systems.
Bugzilla   : 13547
Description: Data corruption for OSTs that are formatted larger than 2TB
	     on 32-bit servers.
Details    : When generating the bio request for lustre file writes the
	     sector number would overflow a temporary variable before being
	     used for the IO.  The data reads correctly from Lustre (which
	     will overflow in a similar manner) but other file data or
	     filesystem metadata may be corrupted in some cases.

Severity   : normal
Bugzilla   : 11230
Description: Tune the kernel for good SCSI performance.
Details    : Set the value of /sys/block/{dev}/queue/max_sectors_kb
	     to the value of /sys/block/{dev}/queue/max_hw_sectors_kb
	     in mount_lustre.

Severity   : cleanup
Bugzilla   : 13532
Description: rewrite ext2-derived code in obdclass/uuid.c
Details    : rewrite inherited code (uuid parsing code from ext2 utils)
	     from scratch preserving functionality.

Severity   : normal
Bugzilla   : 13600
Description: "lfs find -obd UUID" prints directories
Details    : "lfs find -obd UUID" will return all directory names instead
	     of just file names. It is incorrect because the directories
	     do not reside on the OSTs.

Severity   : minor
Bugzilla   : 2369
Description: use i_size_read and i_size_write in 2.6 port
Details    : replace inode->i_size access with i_size_read/write()

Severity   : normal
Frequency  : when removing large files
Bugzilla   : 13181
Description: scheduling issue during removal of large Lustre files
Details    : Don't take the BKL in fsfilt_ext3_setattr() for 2.6 kernels.
	     It causes scheduling issues when removing large files (17TB in the
	     present case).

Severity   : normal
Frequency  : only with liblustre clients on XT3
Bugzilla   : 12418
Description: evictions taking too long
Details    : allow llrd to evict clients directly on OSTs

Severity   : normal
Frequency  : only on ppc
Bugzilla   : 12234
Description: /proc/fs/lustre/devices broken on ppc
Details    : The patch as applied to 1.6.2 doesn't look correct for all arches.
	     We should make sure the type of 'index' is loff_t and then cast
	     explicitly as needed below.  Do not assign an explicitly cast
	     loff_t to an int.

Severity   : normal
Frequency  : only for rhel5
Bugzilla   : 13616
Description: Kernel patches update for RHEL5 2.6.18-8.1.10.el5.
Details    : Modify the target file & which_kernel.

Severity   : enhancement
Bugzilla   : 10786
Description: omit set fsid for export NFS
Details    : fix set/restore device id for avoid EMFILE error and mark lustre
	     fs as FS_REQUIRES_DEV for avoid problems with generate fsid.

Severity   : normal
Bugzilla   : 13304
Frequency  : Always, for kernels after 2.6.16
Description: Fix warning idr_remove called for id=.. which is not allocated.
Details    : Last kernels save old s_dev before kill super and not allow
	     to restore from callback - restore it before call kill_anon_super.

Severity   : minor
Bugzilla   : 12948
Description: buffer overruns could theoretically occur
Details    : llapi_semantic_traverse() modifies the "path" argument by
	     appending values to the end of the origin string, and a
	     overrun may occur. Adding buffer overrun check in liblustreapi.

Severity   : normal
Bugzilla   : 13334
Description: Fix error on 'ls .' at the top of the Lustre mount.
Details    : Don't revalidate dentry if it is a root dentry.

Severity   : normal
Bugzilla   : 13518
Description: Kernel patches update for RHEL4 2.6.9-55.0.6.
Details    : Modify vm-tunables-rhel4.patch.

Severity   : normal
Bugzilla   : 13452
Description: Kernel config for 2.6.18-vanilla.
Details    : Modify targets/2.6-vanilla.target.in.
	     Add config file kernel-2.6.18-2.6-vanilla-i686.config.
	     Add config file kernel-2.6.18-2.6-vanilla-i686-smp.config.
	     Add config file kernel-2.6.18-2.6-vanilla-x86_64.config.
	     Add config file kernel-2.6.18-2.6-vanilla-x86_64-smp.config.

Severity   : major
Bugzilla   : 11710
Description: improve handling recoverable errors
Details    : if request processig with error which can be recoverable on server
	     request should be resend, otherwise page released from cache and
	     marked as error.

Severity   : critical
Bugzilla   : 13751
Description: Kernel patches update for RHEL5 2.6.18-8.1.14.el5.
Details    : Modify target file & which_patch.
	     A flaw was found in the IA32 system call emulation provided
	     on AMD64 and Intel 64 platforms. An improperly validated 64-bit
	     value could be stored in the %RAX register, which could trigger an
	     out-of-bounds system call table access. An untrusted local user
	     could exploit this flaw to run code in the kernel
	     (ie a root privilege escalation). (CVE-2007-4573).

Severity   : major
Bugzilla   : 13093
Description: O_DIRECT bypasses client statistics.
Details    : When running with O_DIRECT I/O, neither the client rpc_stats nor
	     read_ahead_stats were updated. copied the stats section from
	     osc_send_oap_rpc() into async_internal().

Severity   : normal
Bugzilla   : 13454
Description: Add jbd statistics patch for RHEL5 and 2.6.18-vanilla

Severity   : minor
Bugzilla   : 13732
Description: change order of libsysio includes
Details    : '#include sysio.h' should always come before '#include xtio.h'

Severity   : normal
Bugzilla   : 11673
Description: handle "serious error: objid * already exists" more gracefully
Details    : If LAST_ID value on disk is smaller than the objects existing in
	     the O/0/d* directories, it indicates disk corruption and causes an
	     LBUG(). If the object is 0-length, then we should use the existing
	     object. This will help to avoid a full fsck in most cases.

Severity   : enhancement
Bugzilla   : 13207
Description: adapt the lustre_config script to support the upgrade case
Details    : Add "-u" option for lustre_config script to support upgrading 1.4
	     server targets to 1.6 in parallel.

Severity   : normal
Bugzilla   : 13570
Description: To avoid grant space > avaible space when the disk is almost
	     full. Without this patch you might see the error "grant XXXX >
	     available" or some LBUG about grant, when the disk is almost
	     full.
Details    : In filter_check_grant, for non_grant cache write, we should
	     check the left space by  if (*left > ungranted + bytes), instead
	     of (*left > ungranted), because only we are sure the left space
	     is enough for another "bytes", then the ungrant space should be
	     increase. In client, we should update cl_avail_grant only there
	     is OBD_MD_FLGRANT in the reply.

Severity   : critical
Bugzilla   : 13748
Description: Update RHEL 4 kernel to fix local root privilege escalation.
Details    : Update to the latest RHEL 4 kernel to fix the vulnerability
	     described in CVE-2007-4573.  This problem could allow untrusted
	     local users to gain root access.

Severity   : normal
Frequency  : when using O_DIRECT and quotas
Bugzilla   : 13930
Description: Incorrect file ownership on O_DIRECT output files
Details    : block usage reported by 'lfs quota' does not take into account
	     files that have been written with O_DIRECT.

Severity   : normal
Frequency  : always
Bugzilla   : 13976
Description: touch file failed when fs is not full
Details    : OST in recovery should not be discarded by MDS in alloc_qos(),
	     otherwise we can get ENOSP while fs is not full.

Severity   : normal
Bugzilla   : 11301
Description: parallel lock callbacks
Details    : Instead of sending blocking and completion callbacks as separated
	     requests, adding them to a set and sending in parallel.

Severity   : normal
Frequency  : only for Cray XT3
Bugzilla   : 12829/13455
Description: Changing primary group doesn't change the group lustre assigns to
	     a file
Details    : When CRAY_XT3 is defined, the fsgid supplied by the client is
	     overridden with the primary group provided by the group upcall,
	     whereas the supplied fsgid can be trusted if it is in the list of
	     supplementary groups returned by the group upcall.

Severity   : enhancement
Bugzilla   : 14398
Description: Allow masking D_WARNING, D_ERROR messages from console
Details    : Console messages can now be disabled via lnet.printk.

Severity   : normal
Bugzilla   : 14614
Description: User code with malformed file open parameter crashes client node
Details    : Before packing join_file req, all the related reference should be
	     checked carefully in case some malformed flags cause fake
	     join_file req on client.

Severity   : normal
Bugzilla   : 14225
Description: LDLM_ENQUEUE races with LDLM_CP_CALLBACK
Details    : ldlm_completion_ast() assumes that a lock is granted when the req
	     mode is equal to the granted mode. However, it should also check
	     that LDLM_FL_CP_REQD is not set.

Severity   : normal
Bugzilla   : 14360
Description: Heavy nfs access might result in deadlocks
Details    : After ELC code landed, it is now improper to enqueue any mds
	     locks under och_sem, because enqueue might want to decide to
	     cancel open locks for same inode we are holding och_sem for.

Severity   : normal
Bugzilla   : 13843
Description: Client eviction while running blogbench
Details    : A lot of unlink operations with concurrent I/O can lead to a
	     deadlock causing evictions. To address the problem, the number of
	     oustanding OST_DESTROY requests is now throttled to
	     max_rpcs_in_flight per OSC and LDLM_FL_DISCARD_DATA blocking
	     callbacks are processed in priority.

Severity   : normal
Bugzilla   : 13829
Description: enable ACLs on MDS by default
Details    : ACLs must be enabled on MDS by default.

Severity   : normal
Frequency  : PPC/PPC64 only
Bugzilla   : 14845
Description: conflicts between asm-ppc64/types.h and lustre_types.h
Details    : fix duplicated definitions between asm-ppc64/types.h and
	     lustre_types.h on PPC.

Severity   : normal
Frequency  : PPC/PPC64 only
Bugzilla   : 14844
Description: asm-ppc/segment.h does not exist
Details    : fix compile issue on PPC.

Severity   : normal
Bugzilla   : 14864
Description: better handle error messages in extents code

Severity   : normal
Frequency  : RHEL4 only
Bugzilla   : 14618
Description: mkfs is very slow on IA64/RHEL4
Details    : A performance regression has been discovered in the MPT Fusion
	     driver between versions 3.02.73rh and 3.02.99.00rh. As a
	     consequence, we have downgraded the MPT Fusion driver in the RHEL4
	     kernel from 3.02.99.00 to 3.02.73 until this problem is fixed.

Severity   : enhancement
Bugzilla   : 14729
Description: SNMP support enhancement
Details    : Adding total number of sampled request for an MDS node in snmp
	     support.

Severity   : enhancement
Bugzilla   : 14748
Description: Optimize ldlm waiting list processing for PR extent locks
Details    : When processing waiting list for read extent lock and meeting read
	     lock that is same or wider to it that is not contended, skip
	     processing rest of the list and immediatelly return current
	     status of conflictness, since we are guaranteed there are no
	     conflicting locks in the rest of the list.

Severity   : normal
Bugzilla   : 14774
Description: Time out and refuse to reconnect
Details    : When the failover node is the primary node, it is possible
	     to have two identical connections in imp_conn_list. We must
	     compare not conn's pointers but NIDs, otherwise we can defeat
	     connection throttling.

Severity   : normal
Bugzilla   : 13821
Description: port llog fixes from b1_6 into HEAD
Details    : Port llog reference couting and some llog cleanups from b1_6
	     (bug 10800) into HEAD, for protect from panic and access to already
	     free llog structures.

Severity   : normal
Bugzilla   : 14483
Description: Detect stride IO mode in read-ahead
Details    : When a client does stride read, read-ahead should detect that and
	     read-ahead pages according to the detected stride pattern.

Severity   : normal
Bugzilla   : 13805
Description: data checksumming impacts single node performance
Details    : add support for several checksum algorithm. Currently, only CRC32
	     and Adler-32 are supported. The checksum type can be changed on
	     the fly via /proc/fs/lustre/osc/*/checksum_type.

Severity   : normal
Bugzilla   : 14648
Description: use adler32 for page checksums
Details    : when available, use the Adler-32 algorithm instead of CRC32 for
	     page checksums.

Severity   : normal
Bugzilla   : 15033
Description: build for x2 fails
Details    : fix compile issue on Cray systems.

Severity   : normal
Bugzilla   : 14379
Description: Properly match for duplicate locks
Details    : Due to different lock order from skiplists code, we need to
	     traverse entire list for now

Severity   : normal
Frequency  : only on PPC/SLES10
Bugzilla   : 14855
Description: "BITS_PER_LONG is not 32 or 64" in linux/idr.h
Details    : On SLES10/PPC, fs.h includes idr.h which requires BITS_PER_LONG to
	     be defined. Add a hack in mkfs_lustre.c to work around this compile
	     issue.

Severity   : normal
Bugzilla   : 14257
Description: LASSERT on MDS when client holding flock lock dies
Details    : ldlm pool logic depends on number of granted locks equal to
	     number of released locks which is not true for flock locks, so
	     just exclude such locks from consideration.

Severity   : normal
Bugzilla   : 15188
Description: MDS deadlock with many ll_sync_lov threads and I/O stalled
Details    : Use fsfilt_sync() for both the whole filesystem sync and
	     individual file sync to eliminate dangerous inode locking
	     with I_LOCK that can lead to a deadlock.

Severity   : normal
Bugzilla   : 14410
Description: performance in 1.6.3
Details    : Force q->max_phys_segments to MAX_PHYS_SEGMENTS on SLES10 to be
	     sure that 1MB requests are not fragmented by the block layer.

Severity   : enhancement
Bugzilla   : 11089
Description: organize the server-side client stats on per-nid basis
Details    : Change the structure of stats under obdfilter and mds to
	     New structure:
	        +- exports
	                +- nid#1
	                |   + stats
	                |   + uuids
	                +- nid#2...
	                +- clear
	     The "uuid"s file would list the uuids of _active_ exports.
	     And the clear entry is to clear all stats and stale nids.

Severity   : enhancement
Bugzilla   : 11270
Description: eliminate client locks in face of contention
Details    : file contention detection and lockless i/o implementation
	     for contended files.

Severity   : normal
Bugzilla   : 15212
Description: Reinitialize optind to 0 so that interactive lfs works in all cases

Severity   : critical
Frequency  : very rare, if additional xattrs are used on kernels >= 2.6.12
Bugzilla   : 15777
Description: MDS may lose file striping (and hence file data) in some cases
Details    : If there are additional extended attributes stored on the MDS,
	     in particular ACLs, SELinux, or user attributes (if user_xattr
	     is specified for the client mount options) then there is a risk
	     of attribute loss.  Additionally, the Lustre file striping
	     needs to be larger than default (e.g. striped over all OSTs),
	     and an additional attribute must be stored initially in the
	     inode and then increase in size enough to be moved to the
	     external attribute block (e.g. ACL growing in size) for file
	     data to be lost.

Severity   : normal
Bugzilla   : 15346
Description: skiplist implementation simplification
Details    : skiplists are used to group compatible locks on granted list
	     that was implemented as tracking first and last lock of each
	     lock group the patch changes that to using doubly linked lists

Severity   : normal
Bugzilla   : 15574
Description: MDS LBUG: ASSERTION(!IS_ERR(dchild))
Details    : Change LASSERTs to client eviction (i.e. abort client's recovery)
	     because LASSERT on both the data supplied by a client, and the
	     data on disk is dangerous and incorrect.

Severity   : enhancement
Bugzilla   : 10718
Description: Slow truncate/writes to huge files at high offsets.
Details    : Directly associate cached pages to lock that protect those pages,
	     this allows us to quickly find what pages to write and remove
	     once lock callback is received.

Severity   : normal
Bugzilla   : 15953
Description: more ldlm soft lockups
Details    : In ldlm_resource_add_lock(), call to ldlm_resource_dump()
	     starve other threads from the resource lock for a long time in
	     case of long waiting queue, so change the debug level from
	     D_OTHER to the less frequently used D_INFO.

Severity   : enhancement
Bugzilla   : 13128
Description: add -gid, -group, -uid, -user options to lfs find

Severity   : normal
Bugzilla   : 15950
Description: Hung threads in invalidate_inode_pages2_range
Details    : The direct IO path doesn't call check_rpcs to submit a new RPC
	     once one is completed. As a result, some RPCs are stuck in the
	     queue and are never sent.

Severity   : normal
Bugzilla   : 14629
Description: filter threads hungs on waiting journal commit
Details    : Cleanup filter group llog code, then only filter group llog will
	     be only created in the MDS/OST syncing process.

Severity   : normal
Bugzilla   : 15684
Description: Procfs and llog threads access destoryed import sometimes.
Details    : Sync the import destoryed process with procfs and llog threads by
	     the import refcount and semaphore.

Severity   : enhancement
Bugzilla   : 14975
Description: openlock cache of b1_6 port to HEAD

Severity   : major
Frequncy   : rare
Bugzilla   : 16226
Description: kernel BUG at ldiskfs2_ext_new_extent_cb
Details    : If insertion of an extent fails, then discard the inode
	     preallocation and free data blocks else it can lead to duplicate
	     blocks.

Severity   : normal
Bugzilla   : 16199
Description: don't always update ctime in ext3_xattr_set_handle()
Details    : Current xattr code updates inode ctime in ext3_xattr_set_handle.
	     In some cases the ctime should not be updated, for example for
	     2.0->1.8 compatibility it is necessary to delete an xattr and it
	     should not update the ctime.

Severity   : major
Frequency  : rare
Bugzilla   : 15713/16362
Description: Assertion in iopen_connect_dentry in 1.6.3
Details    : looking up an inode via iopen with the wrong generation number can
	     populate the dcache with a disconneced dentry while the inode
	     number is in the process of being reallocated. This causes an
	     assertion failure in iopen since the inode's dentry list contains
	     both a connected and disconnected dentry.

Severity   : normal
Bugzilla   : 16496
Description: assertion failure in ldlm_handle2lock()
Details    : fix a race between class_handle_unhash() and class_handle2object()
	     introduced in lustre 1.6.5 by bug 13622.

Severity   : minor
Frequency  : rare
Bugzilla   : 12755
Description: Kernel BUG: sd_iostats_bump: unexpected disk index
Details    : remove the limit of 256 scsi disks in the sd_iostat patch

Severity   : minor
Frequency  : rare
Bugzilla   : 16494
Description: oops in sd_iostats_seq_show()
Details    : unloading/reloading the scsi low level driver triggers a kernel
	     bug when trying to access the sd iostat file.

Severity   : major
Frequency  : rare
Bugzilla   : 16404
Description: Kernel panics during QLogic driver reload
Details    : REQ_BLOCK_PC requests are not handled properly in the sd iostat
	     patch, causing memory corruption.

Severity   : minor
Frequency  : rare
Bugzilla   : 16140
Description: journal_dev option does not work in b1_6
Details    : pass mount option during pre-mount.

Severity   : enhancement
Bugzilla   : 10555
Description: Add a FIEMAP(FIle Extent MAP) ioctl
Details    : FIEMAP ioctl will allow an application to efficiently fetch the
	     extent information of a file. It can be used to map logical blocks
	     in a file to physical blocks in the block device.

Severity   : normal
Bugzilla   : 15198
Description: LDLM soft lockups - improvement
Details    : It is be possible to send the lock handle along with each read
	     or write request because the client is already doing a lock match
	     itself so there isn't any reason the OST should have to re-do that
	     search.

Severity   : normal
Frequency  : only on Cray X2
Bugzilla   : 16813
Description: X2 build failures
Details    : fix build failures on Cray X2.

Severity   : normal
Bugzilla   : 2066
Description: xid & resent requests
Details    : Initialize RPC XID from clock at startup (randomly if clock is
	     bad).

Severity   : enhancement
Bugzilla   : 14095
Description: Add lustre_start utility to start or stop multiple Lustre servers
	     from a CSV file.

Severity   : major
Bugzilla   : 17024
Description: Lustre GPF in {:ptlrpc:ptlrpc_server_free_request+373}
Details    : In case of memory pressure, list_del() can be called twice on
	     req->rq_history_list, causing a kernel oops.

Severity   : normal
Bugzilla   : 17026
Description: kptllnd_peer_check_sends()) ASSERTION(!in_interrupt()) failed
Details    : fix stack overflow in the distributed lock manager by defering
	     export eviction after a failed AST to the elt thread instead of
	     handling it in the dlm interpret routine.

Severity   : normal
Bugzilla   : 16450
Description: Convert some comments to new format.
Details    : Update documenting comments to match doxygen conventions.

Severity   : normal
Bugzilla   : 16450
Description: Grammar fixes.
Details    : A couple of trivial spelling fixes.

Severity   : normal
Bugzilla   : 16450
Description: OSD_COUNTERS-mandatory
Details    : Make previously optional ->oti_{w,r}_locks sanity checks mandatory
	     to simplify the code.

Severity   : normal
Bugzilla   : 16450
Description: simplify cmm_device freeing logic.
Details    : Call cmm_device_free() in the failure path of cmm_device_alloc().

Severity   : normal
Bugzilla   : 16450
Description: Add lockdep support to dt_object_operations locking interface.
Details    : Augment ->do_{read,write}_lock() prototypes with a `role'
	     parameter indicating lock ordering. Update mdd code to use new
	     locking interface.

Severity   : normal
Bugzilla   : 16450
Description: Introduce failloc constants for lockless IO tests.
Details    : Add two new failloc constants to test lockless IO. Only one of
	     them in implemented---another is checked in yet to be landed
	     core CLIO code.

Severity   : normal
Bugzilla   : 16450
Description: Add lockdep support for inode mutex.
Details    : Introduce and use new LOCK_INODE_MUTEX_PARENT() macro to be used
	     in the situations where Lustre has to lock more than one inode
	     mutex at a time.

Severity   : normal
Bugzilla   : 16450
Description: Add optional invariants checking support.
Details    : Add new LINVRNT() macro, optional on new --enable-invariants
	     configure switch. This macro is to be used for consistency and
	     sanity checks that are too expensive to be left in `production'
	     mode.

Severity   : minor
Bugzilla   : 16450
Description: Zap lock->l_granted_mode with explicit LCK_MINMODE.
Details    : Use LCK_MINMODE rather than 0 to reset lock->l_granted_mode to
	     its initial state.

Severity   : normal
Bugzilla   : 16450
Description: Add lockdep support for ldlm_lock and ldlm_resource.
Details    : Use spin_lock_nested() in (the only) situation where more than
	     one ldlm_lock is locked simultaneously. Also, fix possible
	     dead-lock in ldlm_lock_change_resource() by enforcing particular
	     lock ordering.

Severity   : normal
Bugzilla   : 16450
Description: Use struct ldlm_callback_suite in ldlm_lock_create().
Details    : Instead of specifying each ldlm_lock call-back through separate
	     parameter, wrap them into struct ldlm_callback_suite.

Severity   : normal
Bugzilla   : 16450
Description: Kill join_lru obd method and its callers.
Details    : CLIO uses lock weighting policy to keep locks over mmapped regions
	     in memory---a requirement implemented through ->o_join_lru() obd
	     method in HEAD. Remove this method and its users.

Severity   : normal
Bugzilla   : 16450
Description: Add asynchronous ldlm ENQUEUE completion handler.
Details    : CLIO posts ENQUEUE requests asynchronously through ptlrpcd---a
	     case that stock ldlm_completion_ast() cannot handle as it waits
	     until lock is granted. Introduce new ldlm_completion_ast_async()
	     for this. Also comment ldlm_completion_ast().

Severity   : normal
Bugzilla   : 16450
Description: ldlm_error <-> errno conversion.
Details    : Add functions to map (rather arbitrary) between LDLM error codes
	     and standard errno values. CLIO needs this to prevent LDLM specific
	     constants from escaping ldlm and osc.

Severity   : minor
Bugzilla   : 16450
Description: Kill unused ldlm_handle2lock_ns() function.
Details    : Kill unused ldlm_handle2lock_ns() function.

Severity   : normal
Bugzilla   : 16450
Description: Add lu_ref support to ldlm_lock
Details    : lu_ref support for ldlm_lock and ldlm_resource. See lu_ref patch.
        lu_ref fields ->l_reference and ->lr_reference are added to ldlm_lock
        and ldlm_resource. LDLM interface has to be changed, because code that
        releases a reference on a lock, has to "know" what reference this is.
        In the most frequent case

                lock = ldlm_handle2lock(handle);
                ...
                LDLM_LOCK_PUT(lock);

        no changes are required. When any other reference (received _not_ from
        ldlm_handle2lock()) is released, LDLM_LOCK_RELEASE() has to be called
        instead of LDLM_LOCK_PUT().

        Arguably, changes are pervasive, and interface requires some discipline
        for proper use. On the other hand, it was very instrumental in finding
        a few leaked lock references.

Severity   : normal
Bugzilla   : 16450
Description: Add ldlm_lock_addref_try().
Details    : Introduce ldlm_lock_addref_try() function (used by CLIO) that
	     attempts to addref a lock that might be being canceled
	     concurrently.

Severity   : normal
Bugzilla   : 16450
Description: Add ldlm_weigh_callback().
Details    : Add new ->l_weigh_ast() call-back to ldlm_lock. It is called
        by ldlm_cancel_shrink_policy() to estimate lock "value", instead of
        hard-coded `number of pages' logic.

Severity   : normal
Bugzilla   : 16450
Description: Add lockdep annotations to llog code.
Details    : Use appropriately tagged _nested() locking calls in the places
	     where llog takes more than one ->lgh_lock lock.

Severity   : minor
Bugzilla   : 16450
Description: Add loi_kms_set().
Details    : Wrap kms updates into a helper function.

Severity   : minor
Bugzilla   : 16450
Description: Constify instances of struct lsm_operations.
Details    : Constify instances of struct lsm_operations.

Severity   : normal
Bugzilla   : 16450
Description: lu_conf support.
Details    : On a server, a file system object is uniquely identified
	     by a fid, which is sufficient to locate and load all object
	     state (inode). On a client, on the other hand, more data are
	     necessary instantiate an object. Change lu_object_find() and
	     friends to take additional `lu_conf' argument describing object.
	     Typically this includes layout information.

Severity   : normal
Bugzilla   : 16450
Description: lu_context fixes.
Details    : Introduce new lu_context functions that are needed on the client
	     side, where some system threads (ptlrpcd) are shared by multiple
	     modules, and so cannot be stopped during module shutdown.

Severity   : normal
Bugzilla   : 16450
Description: Add start and stop methods to lu_device_type_operations.
Details    : Introduce two new methods in lu_device_type_operations, that are
        invoked  when first instance of a given type is created and last one
        is destroyed respectively. This is need by CLIO.

Severity   : normal
Bugzilla   : 16450
Description: Add lu_ref support to struct lu_device.
Details    : Add lu_ref support to lu_object and lu_device. lu_ref is used to
	     track leaked references.

Severity   : normal
Bugzilla   : 16450
Description: Introduce lu_kmem_descr.
Details    : lu_kmem_descr and its companion interface allow to create
	     and destroy a number of kmem caches at once.

Severity   : normal
Bugzilla   : 16450
Description: Fix lu_object finalization race.
Details    : Fix a race between lu_object_find() finding an object and its
	     concurrent finalization. This race is (most likely) not possible
	     on the server, but might happen on the client.

Severity   : normal
Bugzilla   : 16450
Description: Introduce lu_ref interface.
Details    : lu_ref is a debugging module allowing to track references to
	     a given object. It is quite cpu expensive, and has to be
	     explicitly enabled with --enable-lu_ref. See usage description
	     within the patch.

Severity   : minor
Bugzilla   : 16450
Description: Factor lu_site procfs stats into a separate function.
Details    : Separate lu_site stats printing code into a separate function
	     that can be reused on a client.

Severity   : minor
Bugzilla   : 16450
Description: Constify instances of struct {lu,dt,md}_device_operations.
Details    : Constify instances of struct {lu,dt,md}_device_operations.

Severity   : normal
Bugzilla   : 16450
Description: Introduce struct md_site and move meta-data specific parts of
	     struct lu_site here.
Details    : Move md-specific fields out of struct lu_site into special struct
        md_site, so that lu_site can be used on a client.

Severity   : minor
Bugzilla   : 16450
Description: Kill mdd_lov_destroy().
Details    : Remove unused mdd code.

Severity   : minor
Bugzilla   : 16450
Description: Add st_block checking to multistat.c.
Details    : Add st_block checking to multistat.c.

Severity   : normal
Bugzilla   : 16450
Description: Add lu_ref support to struct obd_device.
Details    : Add lu_ref tracking to obd_device.

Severity   : minor
Bugzilla   : 16450
Description: Kill obd_set_fail_loc().
Details    : Remove unused code.

Severity   : normal
Bugzilla   : 16450
Description: Add special type for ptlrpc_request interpret functions.
Details    : Add lu_env parameter to ->rq_interpreter call-back. NULL is passed
	     there. Actual usage will be in CLIO.

Severity   : normal
Bugzilla   : 16450
Description: Replace RW_LOCK_UNLOCKED() macro with rwlock_init().
Details    : Replace RW_LOCK_UNLOCKED() with rwlock_init() as the former
	     doesn't work with lockdep.

Severity   : normal
Bugzilla   : 16450
Description: Add rwv.c test program.
Details    : New testing program exercising readv(2) and writev(2) (Qian).

Severity   : normal
Bugzilla   : 16450
Description: Add sendfile.c test program.
Details    : New testing program exercising sendfile(2) (Jay).

Severity   : minor
Bugzilla   : 16450
Description: Ratelimit a message that can be very frequent.
Details    : Ratelimit a memory allocation failure message that can
	     be too chatty.

Severity   : minor
Bugzilla   : 16450
Description: Use cdebug_show() in CDEBUG-style macros defined outside of libcfs.
Details    : Use cdebug_show() in CDEBUG-style macros defined outside of libcfs.

Severity   : normal
Bugzilla   : 16450
Description: Liblustre build fixes.
Details    : Liblustre build fixes.

Severity   : normal
Bugzilla   : 16450
Description: libcfs: add cfs_{need,cond}_resched() interface.
Details    : libcfs: add cfs_{need,cond}_resched() definition and
	     implementations for Linux, NT, and liblustre.

Severity   : enhancement
Bugzilla   : 12800
Description: More exported tunables for mballoc
Details    : Add support for tunable preallocation window and new tunables for
	     large/small requests

Severity   : normal
Bugzilla   : 16680
Description: Detect corruption of block bitmap and checking for preallocations
Details    : Checks validity of on-disk block bitmap. Also it does better
	     checking of number of applied preallocations. When corruption is
	     found, it turns filesystem readonly to prevent further corruptions.

Severity   : normal
Bugzilla   : 17197
Description: (rw.c:1323:ll_read_ahead_pages()) ASSERTION(page_idx > ria->ria_stoff) failed
Details    : Once the unmatched stride IO mode is detected, shrink the stride-ahead
	     window to 0. If it does hit cache miss, and read-pattern is still
	     stride-io mode, does not reset the stride window, but also does not
	     increase the stride window length in this case.

Severity   : normal
Bugzilla   : 16438
Frequency  : only for big-endian servers
Description: Check if system is big-endian while mounting fs with extents feature
Details    : Mounting a filesystem with extents feature will fail on big-endian
             systems since ext3-based ldiskfs is not supported on big-endian
             systems. This can be over-riden with "bigendian_extents" mount option.

Severity   : enhancement
Bugzilla   : 12749
Description: The root squash functionality
Details    : A security feature, which is to prevent users from being able
             to mount lustre on their desktop, run as root, and delete
             all of the files in the filesystem. The goal is accomplished by
             remapping user id (UID) and group id (GID) of the root user to
             a UID and GID specified by the system administartor via Lustre
             configuration management server (MGS). The functionality also
             allows to specify sets of clients for which the remapping does
             not apply.

Severity   : normal
Bugzilla   : 16860
Description: Excessive recovery window
Details    : With AT enabled, the recovery window can be excessively long (6000+
	     seconds). To address this problem, we no longer use
	     OBD_RECOVERY_FACTOR when extending the recovery window (the connect
	     timeout no longer depends on the service time, it is set to
	     INITIAL_CONNECT_TIMEOUT now) and clients report the old service
	     time via pb_service_time.

Severity   : normal
Bugzilla   : 16522
Description: Watchdog triggered on MDS failover
Details    : enable OBD_CONNECT_MDT flag when connecting from the MDS so that
	     the OSTs know that the MDS "UUID" can be reused for the same export
	     from a different NID, so we do not need to wait for the export to be
	     evicted

Severity   : major
Frequency  : rare, only if using MMP with Linux RAID
Bugzilla   : 17895
Description: MMP doesn't work with Linux RAID
Details    : While using HA for Lustre servers with Linux RAID, it is possible
             that MMP will not detect multiple mounts. To make this work we
             need to unplug the device queue in RAID when the MMP block is being
             written. Also while reading the MMP block, we should read it from
             disk and not the cached one.

Severity   : enhancement
Bugzilla   : 17187
Description: open file using fid
Details    : A file can be opened using just its fid, like
	     <mntpt>/.lustre/fid/SEQ:OID:VER - this is needed for HSM and replication

Severity   : normal
Frequency  : Only in RHEL5 when mounting multiple ext3 filesystems
	     simultaneously
Bugzilla   : 19184
Description: "kmem_cache_create: duplicate cache jbd_4k" error message
Details    : add proper locking for creation of jbd_4k slab cache

Severity   : normal
Bugzilla   : 19058
Description: MMP check in ext3_remount() fails without displaying any error
Details    : When multiple mount protection fails during remount, proper error
	     should be returned

Severity   : enhancement
Bugzilla   : 16823
Description: Allow stripe size to be up to 4G-64k
Details    : Fix math logic to allow large stripe sizes.

Severity   : high
Bugzilla   : 17569
Description: add check for >8TB ldiskfs filesystems
Details    : ext3-based ldiskfs does not support greater than 8TB LUNs.
	     Don't allow >8TB ldiskfs filesystems to be mounted without
	     force_over_8tb mount option

Severity   : normal
Frequency  : rare
Bugzilla   : 18793
Descriptoin: OSS complains "too many blocks" and crashes
Details    : In filter_commitrw_write():
	     1. lquota_chkquota();
	     2. obdo_from_inode();
	     3. lquota_pending_commit();
	     "2." has changed uid and gid in this case, then caused
	     lquota_chkquota() and lquota_pending_commit() to use
	     different uid and gid. That is the root of the bug.

Severity   : normal
Bugzilla   : 20463
Descriptoin: getstripe doesn't report stripe count = -1 sanely
Details    : Detect and print out the 'stripe count = -1' case properly.

Severity   : normal
Bugzilla   : 19128
Description: Out or order replies might be lost on replay
Details    : In ptlrpc_retain_replayable_request if we cannot find retained
             request with tid smaller than one currently being added, add it
	     to the start, not end of the list.

--------------------------------------------------------------------------------

2007-08-10         Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.6.1
       * Support for kernels:
        2.6.5-7.283 (SLES 9),
        2.6.9-55.EL (RHEL 4),
        2.6.16.46-0.14 (SLES 10),
        2.6.18.8 vanilla (kernel.org)
       * Client support for unpatched kernels:
        (see http://wiki.lustre.org/index.php?title=Patchless_Client)
        2.6.16 - 2.6.22 vanilla (kernel.org)
       * Due to recently discovered recovery problems, we do not recommend
        using patchless RHEL 4 clients with this or any earlier release.
       * Recommended e2fsprogs version: 1.39.cfs8
       * Note that reiserfs quotas are disabled on SLES 10 in this kernel.
       * Starting with this release, the ldiskfs backing filesystem required
        by Lustre is now in its own package, lustre-ldiskfs.  This package
        should be installed.  It is versioned separately from Lustre and
        may be released separately in future.

Severity   : minor
Bugzilla   : 13147
Description: block reactivating mgc import until all deactivates complete
Details    : Fix race when failing back MDT/MGS to itself (testing)

Severity   : minor
Frequency  : at statup only
Bugzilla   : 12860
Description: mds_lov_synchronize race leads to various problems
Details    : simultaneous MDT->OST connections at startup can cause the
	     sync to abort, leaving the OSC in a bad state.

Severity   : enhancement
Bugzilla   : 12194
Description: add optional extra BUILD_VERSION info
Details    : add a new environment variable (namely LUSTRE_VERS) which allows
	     to override the lustre version.

Severity   : normal
Frequency  : 2.6.18 servers only
Bugzilla   : 12546
Description: ll_kern_mount() doesn't release the module reference
Details    : The ldiskfs module reference count never drops down to 0
	     because ll_kern_mount() doesn't release the module reference.

Severity   : normal
Frequency  : rare
Bugzilla   : 12470
Description: server LBUG when using old ost_num_threads parameter
Details    : Accept the old ost_num_threads parameter but warn that it
	     is deprecated, and fix an off-by-one error that caused an LBUG.

Severity   : normal
Frequency  : rare
Bugzilla   : 11722
Description: Transient SCSI error results in persistent IO issue
Details    : iobuf->dr_error is not reinitialized to 0 between two
	     uses.

Severity   : normal
Frequency  : sometimes when underlying device returns I/O errors
Bugzilla   : 11743
Description: OSTs not going read-only during write failures
Details    : OSTs are not remounted read-only when the journal commit threads
	     get I/O errors because fsfilt_ext3 calls journal_start/stop()
	     instead of the ext3 wrappers.

Severity   : minor
Bugzilla   : 12364
Description: poor connect scaling with increasing client count
Details    : Don't run filter_grant_sanity_check for more than 100 exports
	     to improve scaling for large numbers of clients.

Severity   : normal
Frequency  : SLES10 only
Bugzilla   : 12538
Description: sanity-quota.sh quotacheck failed: rc = -22
Details    : Quotas cannot be enabled on SLES10.

Severity   : normal
Frequency  : liblustre clients only
Bugzilla   : 12229
Description: getdirentries does not give error when run on compute nodes
Details    : getdirentries does not fail when the size specified as an argument
	     is too small to contain at least one entry

Severity   : enhancement
Bugzilla   : 11548
Description: Add LNET router traceability for debug purposes
Details    : If a checksum failure occurs with a router as part of the
	     IO path, the NID of the last router that forwarded the bulk data
	     is printed so it can be identified.

Severity   : normal
Frequency  : rare
Bugzilla   : 11315
Description: OST "spontaneously" evicts client; client has imp_pingable == 0
Details    : Due to a race condition, liblustre clients were occasionally
	     evicted incorrectly.

Severity   : enhancement
Bugzilla   : 10997
Description: lfs setstripe use optional parameters instead of postional
	     parameters.

Severity   : enhancement
Bugzilla   : 10651
Description: Nanosecond timestamp support for ldiskfs
Details    : The on-disk ldiskfs filesystem has added support for nanosecond
	     resolution timestamps.  There is not yet support for this at
	     the Lustre filesystem level.

Severity   : normal
Frequency  : during server recovery
Bugzilla   : 11203
Description: MDS failing to send precreate requests due to OSCC_FLAG_RECOVERING
Details    : request with rq_no_resend flag not awake l_wait_event if they get
	     a timeout.

Severity   : minor
Frequency  : nfs export on patchless client
Bugzilla   : 11970
Description: connectathon hang when test nfs export over patchless client
Details    : Disconnected dentry cannot be found with lookup, so we do not need
	     to unhash it or make it invalid

Bugzilla   : 11757
Description: fix llapi_lov_get_uuids() to allow many OSTs to be returned
Details:   : Change llapi_lov_get_uuids() to read the UUIDs from /proc instead
	     of using an ioctl. This allows lfsck for > 160 OSTs to succeed.

Severity   : minor
Frequency  : rare
Bugzilla   : 11546
Description: open req refcounting wrong on reconnect
Details    : If reconnect happened between getting open reply from server and
	     call to mdc_set_replay_data in ll_file_open, we will schedule
	     replay for unreferenced request that we are about to free.
	     Subsequent close will crash in variety of ways.
	     Check that request is still eligible for replay in
	     mdc_set_replay_data().

Severity   : minor
Frequency  : rare
Bugzilla   : 11512
Description: disable writes to filesystem when reading health_check file
Details    : the default for reading the health_check proc file has changed
	     to NOT do a journal transaction and write to disk, because this
	     can cause reads of the /proc file to hang and block HA state
	     checking on a healthy but otherwise heavily loaded system.  It
	     is possible to return to the previous behaviour during configure
	     with --enable-health-write.

Severity   : enhancement
Bugzilla   : 10768
Description: 64-bit inode version
Details:   : Add a on-disk 64-bit inode version for ext3 to track changes made
	     to the inode. This will be required for version-based recovery.

Severity   : normal
Frequency  : rare
Bugzilla   : 11818
Description: MDS fails to start if a duplicate client export is detected
Details    : in some rare cases it was possible for a client to connect to
	     an MDS multiple times.  Upon recovery the MDS would detect this
	     and fail during startup.  Handle this more gracefully.

Severity   : enhancement
Bugzilla   : 11563
Description: Add -o localflock option to simulate  old noflock
behaviour.
Details    : This will achieve local-only flock/fcntl locks
	     coherentness.

Severity   : minor
Frequency  : rare
Bugzilla   : 11658
Description: log_commit_thread vs filter_destroy race leads to crash
Details    : Take import reference before releasing llog record semaphore

Severity   : normal
Frequency  : rare
Bugzilla   : 12477
Description: Wrong request locking in request set processing
Details    : ptlrpc_check_set wrongly uses req->rq_lock for proctect add to
	     imp_delayed_list, in this place should be used imp_lock.

Severity   : normal
Frequency  : when reconnection
Bugzilla   : 11662
Description: Grant Leak when osc reconnect to OST
Details    : When osc reconnect ost, OST(filter) should check whether it
	     should grant more space to client by comparing fed_grant and
	     cl_avail_grant, and return the granted space to client instead
	     of "new granted" space, because client will call osc_init_grant
	     to update the client grant space info.

Severity   : normal
Frequency  : when client reconnect to OST
Bugzilla   : 11662
Description: Grant Leak when osc do resend and replay bulk write
Details	   : When osc reconnect to OST, OST(filter)should clear grant info of
	     bulk write request, because the grant info while be sync between
	     OSC and OST when reconnect, and we should ignore the grant info
	     these of resend/replay write req.

Severity   : normal
Frequency  : rare
Bugzilla   : 11662
Description: Grant space more than available left space sometimes.
Details	   : When then OST is about to be full, if two bulk writing from
	     different clients came to OST. Accord the avaliable space of the
	     OST, the first req should be permitted, and the second one
	     should be denied by ENOSPC. But if the seconde arrived before
	     the first one is committed. The OST might wrongly permit second
	     writing, which will cause grant space > available space.

Severity   : normal
Frequency  : when client is evicted
Bugzilla   : 12371
Description: Grant might be wrongly erased when osc is evicted by OST
Details    : when the import is evicted by server, it will fork another
	     thread ptlrpc_invalidate_import_thread to invalidate the
	     import, where the grant will be set to 0.  While the original
	     thread will update the grant it got when connecting. So if
	     the former happened latter, the grant will be wrongly errased
	     because of this race.

Severity   : normal
Frequency  : rare
Bugzilla   : 12401
Description: Checking Stale with correct fid
Details    : ll_revalidate_it should uses de_inode instead of op_data.fid2
	     to check whether it is stale, because sometimes, we want the
	     enqueue happened anyway, and op_data.fid2 will not be initialized.

Severity   : enhancement
Bugzilla   : 11647
Description: update patchless client
Details    : Add support for patchless client with 2.6.20, 2.6.21 and RHEL 5

Severity   : normal
Frequency  : only with 2.4 kernel
Bugzilla   : 12134
Description: random memory corruption
Details    : size of struct ll_inode_info is to big for union inode.u and this
	     can be cause of random memory corruption.

Severity   : normal
Frequency  : rare
Bugzilla   : 10818
Description: Memory leak in recovery
Details    : Lov_mds_md was not free in an error handler in mds_create_object.
	     It should also check obd_fail before fsfilt_start, otherwise if
	     fsfilt_start return -EROFS,(failover mds during mds recovery).
	     then the req will return with repmsg->transno = 0 and rc = EROFS.
	     and we met hit the assert LASSERT(req->rq_reqmsg->transno ==
	     req->rq_repmsg->transno) in ptlrpc_replay_interpret.  Fcc should
	     be freed no matter whether fsfilt_commit success or not.

Severity   : minor
Frequency  : only with huge count clients
Bugzilla   : 11817
Description: Prevents from taking the superblock lock in llap_from_page for
	     a soon died page.
Details    : using LL_ORIGIN_REMOVEPAGE origin flag instead of LL_ORIGIN_UNKNOW
	     for llap_from_page call in ll_removepage prevents from taking the
	     superblock lock for a soon died page.

Severity   : normal
Frequency  : rare
Bugzilla   : 11935
Description: Not check open intent error before release open handle
Details    : in some rare cases, the open intent error is not checked before
	     release open handle, which may cause
	     ASSERTION(open_req->rq_transno != 0), because it tries to release
	     the failed open handle.

Severity   : normal
Frequency  : rare
Bugzilla   : 12556
Description: Set cat log bitmap only after create log success.
Details    : in some rare cases, the cat log bitmap is set too early. and it
	     should be set only after create log success.

Severity   : major
Bugzilla   : 11971
Description: Accessing a block bevice can re-enable I/O when Lustre is
	     tearing down a device.
Details    : dev_clear_rdonly(bdev) must be called in kill_bdev() instead of
	     blkdev_put().

Severity   : minor
Bugzilla   : 11706
Description: service threads may hog cpus when there are a lot of requests
Details    : Insert cond_resched to give other threads a chance to use some CPU

Severity   : normal
Frequency  : rare
Bugzilla   : 12086
Description: the cat log was not initialized in recovery
Details    : When mds(mgs) do recovery, the tgt_count might be zero, so the
	     unlink log on mds will not be initialized until mds post
	     recovery. And also in mds post recovery, the unlink log will
	     initialization will be done asynchronausly, so there will be race
	     between add unlink log and unlink log initialization.

Severity   : normal
Bugzilla   : 12597
Description: brw_stats were being printed incorrectly
Details    : brw_stats were being printed as log2 but all of them were not
	     recorded as log2. Also remove some code duplication arising from
	     filter_tally_{read,write}.

Severity   : normal
Bugzilla   : 11674
Frequency  : rare, only in recovery.
Description: ASSERTION(req->rq_type != LI_POISON) failed
Details    : imp_lock should be held while iterating over imp_sending_list for
	     prevent destroy request after get timeout in ptlrpc_queue_wait.

Severity   : normal
Bugzilla   : 12689
Description: replay-single.sh test 52 fails
Details    : A lock's skiplist need to be cleanup when it being unlinked
	     from its resource list.

Severity   : normal
Bugzilla   : 11737
Description: Short directio read returns full requested size rather than
	     actual amount read.
Details    : Direct I/O operations should return actual amount of bytes
	     transferred rather than requested size.

Severity   : enhancement
Bugzilla   : 10589
Description: metadata RPC reduction (e.g. for rm performance)
Details    : decrease the amount of synchronous RPC between clients and servers
	     by canceling conflicing lock before the operation on the client
	     and packing thier handles into the main operation RPC to server.

Severity   : enhancement
Bugzilla   : 4900
Description: Async OSC create to avoid the blocking unnecessarily.
Details    : If an OST has no remaining object, system will block on the
	     creation when it needs to create a new object on this OST. Now,
	     ways use pre-created objects when available, instead of blocking on
	     an empty osc while others are not empty.  If we must block, we
	     block for the shortest possible period of time.

Severity   : major
Bugzilla   : 11710
Description: improve handling recoverable errors
Details    : if request processig with error which can be recoverable on server
	     request should be resend, otherwise page released from cache and
	     marked as error.

Severity   : enhancement
Bugzilla   : 12702
Description: refine locking for avoid write wrong info into lov_objid file
Details    : fix possible races with add new target and write/update data in
	     lov_objid file.

--------------------------------------------------------------------------------

2007-05-03  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.6.0.1
       * bug fixes

Severity   : normal
Frequency  : on some architectures
Bugzilla   : 12404
Description: 1.6 client sometimes fails to mount from a 1.4 MDT
Details    : Uninitialized flags sometimes cause configuration commands to
	     be skipped.

Severity   : normal
Frequency  : patchless clients only
Bugzilla   : 12391
Description: missing __iget() symbol export
Details    : The __iget() symbol export is missing.  To avoid the need for
	     this on patchless clients the deathrow inode reaper is turned
	     off, and we depend on the VM to clean up old inodes.  This
	     dependency was during via the fix for bug 12181.

--------------------------------------------------------------------------------

2007-04-19  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.6.0
       * CONFIGURATION CHANGE.  This version of Lustre WILL NOT
	 INTEROPERATE with older versions automatically.  In many cases a
	 special upgrade step is needed. Please read the
	 user documentation before upgrading any part of a live system.
       * WIRE PROTOCOL CHANGE from previous 1.6 beta versions.  This
         version will not interoperate with 1.6 betas before beta5 (1.5.95).
       * WARNING: Lustre configuration and startup changes are required with
	 this release.  See https://mail.clusterfs.com/wikis/lustre/MountConf
	 for details.
       * bug fixes

Severity   : enhancement
Bugzilla   : 8007
Description: MountConf
Details    : Lustre configuration is now managed via mkfs and mount
	     commands instead of lmc and lconf.  New obd types (MGS, MGC)
	     are added for dynamic configuration management.  See
	     https://mail.clusterfs.com/wikis/lustre/MountConf for
	     details.

Severity   : enhancement
Bugzilla   : 4482
Description: dynamic OST addition
Details    : OSTs can now be added to a live filesystem

Severity   : enhancement
Bugzilla   : 9851
Description: startup order invariance
Details    : MDTs and OSTs can be started in any order.  Clients only
	     require the MDT to complete startup.

Severity   : enhancement
Bugzilla   : 4899
Description: parallel, asynchronous orphan cleanup
Details    : orphan cleanup is now performed in separate threads for each
	     OST, allowing parallel non-blocking operation.

Severity   : enhancement
Bugzilla   : 9862
Description: optimized stripe assignment
Details    : stripe assignments are now made based on ost space available,
	     ost previous usage, and OSS previous usage, in order to try
	     to optimize storage space and networking resources.

Severity   : enhancement
Bugzilla   : 4226
Description: Permanently set tunables
Details    : All writable /proc/fs/lustre tunables can now be permanently
	     set on a per-server basis, at mkfs time or on a live system.

Severity   : enhancement
Bugzilla   : 10547
Description: Lustre message v2
Details    : Add lustre message format v2.

Severity   : enhancement
Bugzilla   : 9866
Description: client OST exclusion list
Details    : Clients can be started with a list of OSTs that should be
	     declared "inactive" for known non-responsive OSTs.

Severity   : minor
Bugzilla   : 6062
Description: SPEC SFS validation failure on NFS v2 over lustre.
Details    : Changes the blocksize for regular files to be 2x RPC size,
	     and not depend on stripe size.

Severity   : enhancement
Bugzilla   : 9293
Description: Multiple MD RPCs in flight.
Details    : Further unserialise some read-only MDS RPCs - learn about intents.
	     To avoid overly-overloading MDS, introduce a limit on number of
	     MDS RPCs in flight for a single client and add /proc controls
	     to adjust this limit.

Severity   : enhancement
Bugzilla   : 22484
Description: client read/write statistics
Details    : Add client read/write call usage stats for performance
	     analysis of user processes.
	     /proc/fs/lustre/llite/*/offset_stats shows non-sequential
	     file access. extents_stats shows chunk size distribution.
	     extents_stats_per_process show chunk size distribution per
	     user process.

Severity   : enhancement
Bugzilla   : 22486
Description: mds statistics
Details    : Add detailed mds operations statistics in
	     /proc/fs/lustre/mds/*/stats.

Severity   : minor
Bugzilla   : 10667
Description: Failure of copying files with lustre special EAs.
Details    : Client side always return success for setxattr call for lustre
	     special xattr (currently only "trusted.lov").

Severity   : minor
Frequency  : always
Bugzilla   : 10345
Description: Refcount LNET uuids
Details    : The global LNET uuid list grew linearly with every startup;
	     refcount repeated list entries instead of always adding to
	     the list.

Severity   : enhancement
Bugzilla   : 2258
Description: Dynamic service threads
Details    : Within a small range, start extra service threads
	     automatically when the request queue builds up.

Severity   : major
Frequency  : mixed-endian client/server environments
Bugzilla   : 11214
Description: mixed-endian crashes
Details    : The new msg_v2 system had some failures in mixed-endian
	     environments.

Severity   : enhancement
Bugzilla   : 11229
Description: Easy OST removal
Details    : OSTs can be permanently deactivated with e.g. 'lctl
	     conf_param lustre-OST0001.osc.active=0'

Severity   : enhancement
Bugzilla   : 11335
Description: MGS proc entries
Details    : Added basic proc entries for the MGS showing what filesystems
	     are served.

Severity   : enhancement
Bugzilla   : 10998
Description: provide MGS failover
Details    : Added config lock reacquisition after MGS server failover.

Severity   : enhancement
Bugzilla   : 11461
Description: add Linux 2.4 support
Details    : Added support for RHEL 2.4.21 kernel for 1.6 servers and clients

Severity   : normal
Bugzilla   : 11330
Description: a large application tries to do I/O to the same resource and dies
	     in the middle of it.
Details    : Check the req->rq_arrival time after the call to
	     ost_brw_lock_get(), but before we do anything about
	     processing it & sending the BULK transfer request. This
	     should help move old stale pending locks off the queue as
	     quickly as obd_timeout.

Severity   : major
Frequency  : when an incorrect nid is specified during startup
Bugzilla   : 10734
Description: ptlrpc connect to non-existant node causes kernel crash
Details    : LNET can't be re-entered from an event callback, which
	     happened when we expire a message after the export has been
	     cleaned up.  Instead, hand the zombie cleanup off to another
	     thread.

Severity   : enhancement
Bugzilla   : 10902
Description: plain/inodebits lock performance improvement
Details    : Grouping plain/inodebits in granted list by their request modes
	     and bits policy, thus improving the performance of search through
	     the granted list.

Severity   : major
Frequency  : only if OST filesystem is corrupted
Bugzilla   : 9829
Description: client incorrectly hits assertion in ptlrpc_replay_req()
Details    : for a short time RPCs with bulk IO are in the replay list,
	     but replay of bulk IOs is unimplemented.  If the OST filesystem
	     is corrupted due to disk cache incoherency and then replay is
	     started it is possible to trip an assertion.  Avoid putting
	     committed RPCs into the replay list at all to avoid this issue.

Severity   : major
Frequency  : liblustre (e.g. catamount) on a large cluster with >= 8 OSTs/OSS
Bugzilla   : 11684
Description: System hang on startup
Details    : This bug allowed the liblustre (e.g. catamount) client to
	     return to the app before handling all startup RPCs.  This
	     could leave the node unresponsive to lustre network traffic
	     and manifested as a server ptllnd timeout.

Severity   : enhancement
Bugzilla   : 11667
Description: Add "/proc/sys/lustre/debug_peer_on_timeout"
Details    : liblustre envirable: LIBLUSTRE_DEBUG_PEER_ON_TIMEOUT
	     boolean to control whether to print peer debug info when a
	     client's RPC times out.

Severity   : minor
Frequency  : only for kernels with patches from Lustre below 1.4.3
Bugzilla   : 11248
Description: Remove old rdonly API
Details    : Remove old rdonly API which unused from at least lustre 1.4.3

Severity   : major
Frequency  : only for devices with external journals
Bugzilla   : 10719
Description: Set external device read-only also
Details    : During a commanded failover stop, we set the disk device
	     read-only while the server shuts down. We now also set any
	     external journal device read-only at the same time.

Severity   : minor
Frequency  : when upgrading from 1.4 while trying to change parameters
Bugzilla   : 11692
Description: The wrong (new) MDC name was used when setting parameters for
	     upgraded MDT's.  Also allows changing of OSC (and MDC)
	     parameters if --writeconf is specified at tunefs upgrade time.

Severity   : major
Frequency  : when setting specific ost indicies
Bugzilla   : 11149
Description: QOS code breaks on skipped indicies
Details    : Add checks for missing OST indicies in the QOS code, so OSTs
	     created with --index need not be sequential.

Severity   : enhancement
Bugzilla   : 11264
Description: Add uninit_groups feature to ldiskfs2 to speed up e2fsck
Details    : The uninit_groups feature works in conjunction with the kernel
	     filesystem code (ldiskfs2 only) and e2fsprogs-1.39-cfs6 to speed
	     up the pass1 processing of e2fsck.  This is a read-only feature
	     in ldiskfs2 only, so older kernels and current ldiskfs cannot
	     mount filesystems that have had this feature enabled.

Severity   : enhancement
Bugzilla   : 10816
Description: Improve multi-block allocation algorithm to avoid fragmentation
Details    : The mballoc3 code (ldiskfs2 only) adds new mechanisms to improve
	     allocation locality and avoid filesystem fragmentation.

------------------------------------------------------------------------------

2007-04-01  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.10
       * Support for kernels:
        2.4.21-47.0.1.EL (RHEL 3)
        2.6.5-7.283 (SLES 9)
        2.6.9-42.0.10.EL (RHEL 4)
        2.6.12.6 vanilla (kernel.org)
        2.6.16.27-0.9 (SLES 10)
       * Recommended e2fsprogs version: 1.39.cfs5

       * Note that reiserfs quotas are disabled on SLES 10 in this kernel
       * bug fixes

Severity   : critical
Frequency  : occasional, depends on client load and configuration
Bugzilla   : 12181, 12203
Description: data loss for recently-modified files
Introduced : 1.4.6
Details    : In some cases it is possible that recently written or created
	     files may not be written to disk in a timely manner (this should
	     normally be within 30s unless client IO load is very high).
	     The problem appears as zero-length files or files that are a
	     multiple of 1MB in size after a client crash or client eviction
	     that are missing data at the end of the file.

	     This problem is more likely to be hit on clients where files are
	     repeatedly created and unlinked in the same directory, clients
	     have a large amount of RAM, have many CPUs, the filesystem has
	     many OSTs, the clients are rebooted frequently, and/or the files
	     are not accessed by other nodes after being written.

	     The presence of the problem can be detected by looking at
	     /proc/sys/fs/inode-state.  If the first number (nr_inodes) is
	     smaller than the second (nr_unused) then dirty files will not
	     be flushed automatically to disk.  "sync; sleep 10" should be
	     run several times on the node before unmounting it to update
	     Lustre (this is also safe to run on nodes without this problem).

	     There is also a related kernel bug in the RHEL4 4 2.6.9 kernel
	     that can cause this same problem, so customers using that kernel
	     also need to update the kernel in addition to Lustre.  In order
	     to properly fix this bug, the RHEL3 2.4.21 kernel is also updated.

	     It is normal that files written just before a client crash (less
	     than 30s) may not yet have been flushed to disk, even for local
	     filesystems.

Severity   : normal
Frequency  : frequent on thin XT3 nodes
Bugzilla   : 10802
Description: UUID collision on thin XT3 Linux nodes
Details    : UUIDs on Compute Node Linux XT3 nodes were not generated
	     randomly, since we relied on an insufficiently-seeded PRNG.

Severity   : normal
Frequency  : rare
Bugzilla   : 11693
Description: OSS hangs after "All ost request buffers busy"
Details    : A deadlock between quota and journal operations caused OSS
	     hangs after printing "All ost request buffers busy."

Severity   : minor
Frequency  : always on liblustre builds
Bugzilla   : 11175
Description: Cleanup compiler warnings on liblustre

Severity   : minor
Frequency  : always on liblustre builds on XT3
Bugzilla   : 12146
Description: LC_CONFIG_CDEBUG don't run while build liblustre on XT3.

Frequency  : always
Bugzilla   : 3244
Description: Addition of EXT3_FEATURE_RO_COMPAT_DIR_NLINKS flag for
	     > 32000 subdirectories
Details    : Add EXT3_FEATURE_RO_COMPAT_DIR_NLINK flag to
	     EXT3_FEATURE_RO_COMPAT_SUPP. This flag will be set whenever
	     subdirectory count crosses 32000. This will aid e2fsck to
	     correctly handle more than 32000 subdirectories.

Severity   : major
Frequency  : liblustre (e.g. catamount) on a large cluster with >= 8 OSTs/OSS
Bugzilla   : 11684
Description: System hang on startup
Details    : This bug allowed the liblustre (e.g. catamount) client to
	     return to the app before handling all startup RPCs.  This
	     could leave the node unresponsive to lustre network traffic
	     and manifested as a server ptllnd timeout.

Severity   : enhancement
Bugzilla   : 11667
Description: Add "/proc/sys/lustre/debug_peer_on_timeout"
	     (liblustre envirable: LIBLUSTRE_DEBUG_PEER_ON_TIMEOUT)
	     boolean to control whether to print peer debug info when a
	     client's RPC times out.

Severity   : normal
Frequency  : always
Bugzilla   : 10214
Description: make O_SYNC working on 2.6 kernels
Details    : 2.6 kernels use different method for mark pages for write,
	     so need add a code to lustre for O_SYNC work.

Severity   : minor
Frequency  : always
Bugzilla   : 11110
Description: Failure to close file and release space on NFS
Details    : Put inode details into lock acquired in ll_intent_file_open.
	     Use mdc_intent_lock in ll_intent_open to properly
	     detect all kind of errors unhandled by mdc_enqueue.

Severity   : major
Frequency  : rare
Bugzilla   : 10866
Description: proc file read during shutdown sometimes raced obd removal,
	     causing node crash
Details    : Add lock to prevent obd access after proc file removal.

Severity   : normal
Frequency  : Only for files larger than 4GB on 32-bit clients.
Bugzilla   : 11237
Description: improperly doing page alignment of locks
Details    : Modify lustre core code to use CFS_PAGE_* defines instead of
	     PAGE_*.  Make CFS_PAGE_MASK a 64-bit mask.

Severity   : normal
Frequency  : rarely
Bugzilla   : 11203
Description: RPCs being resent when they shouldn't be
Details    : Some RPCs that should not be resent are being resent.  This
	     can cause inconsistencies in the RPC state machine.  Do not
	     resend such requests.

Severity   : normal
Frequency  : rare, only with NFS export
Bugzilla   : 11669
Description: Crash on NFS re-export node
Details    : under very unusual load conditions an assertion is hit in
	     ll_intent_file_open()

Severity   : major
Frequency  : only if OST filesystem is corrupted
Bugzilla   : 9829
Description: client incorrectly hits assertion in ptlrpc_replay_req()
Details    : for a short time RPCs with bulk IO are in the replay list,
	     but replay of bulk IOs is unimplemented.  If the OST filesystem
	     is corrupted due to disk cache incoherency and then replay is
	     started it is possible to trip an assertion.  Avoid putting
	     committed RPCs into the replay list at all to avoid this issue.

Severity   : normal
Frequency  : always
Bugzilla   : 10901
Description: large O_DIRECT requests fail under memory pressure/fragmentation
Details    : Large single O_DIRECT read and write calls can fail to allocate
	     a sufficiently large buffer to process the request.  In case of
	     allocation failure the allocation is retried with a smaller
	     buffer and broken into smaller requests.

Severity   : enhancement
Bugzilla   : 11563
Description: Add -o localflock option to simulate  old noflock behaviour.
Details    : This will achieve local-only flock/fcntl locks coherentness.

Severity   : normal
Frequency  : always
Bugzilla   : 11090
Description: versioning check is incomplete
Details    : Checking the version difference of client vs. server, report
	     error if the gap is too big.

Severity   : major
Bugzilla   : 11710
Frequency  : always
Description: add support PG_writeback bit
Details    : add support for PG_writeback bit for Lustre, for more carefull
	     work with page cache in 2.6 kernel. This also fix some deadlocks
	     and remove hack for work O_SYNC with 2.6 kernel.

Severity   : enhancement
Bugzilla   : 11264
Description: Add uninit_groups feature to ldiskfs2 to speed up e2fsck
Details    : The uninit_groups feature works in conjunction with the kernel
	     filesystem code (ldiskfs2 only) and e2fsprogs-1.39-cfs6 to speed
	     up the pass1 processing of e2fsck.  This is a read-only feature
	     in ldiskfs2 only, so older kernels and current ldiskfs cannot
	     mount filesystems that have had this feature enabled.

Severity   : enhancement
Bugzilla   : 10816
Description: Improve multi-block allocation algorithm to avoid fragmentation
Details    : The mballoc3 code (ldiskfs2 only) adds new mechanisms to improve
	     allocation locality and avoid filesystem fragmentation.

------------------------------------------------------------------------------

2007-02-09  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.9
       * Support for kernels:
        2.6.9-42.0.3.EL (RHEL 4)
        2.6.5-7.276 (SLES 9)
        2.4.21-47.0.1.EL (RHEL 3)
        2.6.12.6 vanilla (kernel.org)
        2.6.16.21-0.8 (SLES10)
       * Recommended e2fsprogs version: 1.39.cfs2-0

       * The backwards-compatible /proc/sys/portals symlink has been removed
	 in this release.  Before upgrading, please ensure that you change
	 any configuration scripts or /etc/sysctl.conf files that access
	 /proc/sys/portals/* or sysctl portals.* to use the corresponding
	 entry in /proc/sys/lnet or sysctl lnet.*.  This change can be made
	 in advance of the upgrade on any system running Lustre 1.4.6 or
	 newer, since /proc/sys/lnet was added in that version.
       * Note that reiserfs quotas are disabled on SLES 10 in this kernel
       * bug fixes

Severity   : minor
Frequency  : only when quota is used
Bugzilla   : 11286
Description: avoid scanning export list for quota master
Details    : Change the algorithms to avoid scanning export list in order
	     to improve the efficiency.

Severity   : critical
Frequency  : MDS failover only, very rarely
Bugzilla   : 11125
Description: "went back in time" messages on mds failover
Details    : The greatest transno may be lost when the current operation
	     finishes with an error (transno==0) and the client's last_rcvd
	     record is over-written. Save the greatest transno in the
	     mds_last_transno for this case.

Severity   : minor
Frequency  : always for specific kernels and striping counts
Bugzilla   : 11042
Description: client may get "Matching packet too big" without ACL support
Details    : Clients compiled without CONFIG_FS_POSIX_ACL get an error message
	     when trying to access files in certain configurations.  The
	     clients should in fact be denied when mounting because they do
	     not understand ACLs.

Severity   : major
Frequency  : Cray XT3 with more than 4000 clients and multiple jobs
Bugzilla   : 10906
Description: many clients connecting with IO in progress causes connect timeouts
Details    : Avoid synchronous journal commits to avoid delays caused by many
	     clients connecting/disconnecting when bulk IO is in progress.
	     Queue liblustre connect requests on OST_REQUEST_PORTAL instead of
	     OST_IO_PORTAL to avoid delays behind potentially many pending
	     slow IO requests.

Severity   : normal
Frequency  : occasionally with multiple writers to a single file
Bugzilla   : 11081
Description: shared writes to file may result in wrong size reported by stat()
Details    : Allow growing of kms when extent lock is cancelled

Severity   : minor
Frequency  : always with random mmap IO to multi-striped file
Bugzilla   : 10919
Description: mmap write might be lost if we are writing to a 'hole' in stripe
Details    : Only if the hole is at the end of OST object so that kms is too
	     small. Fix is to increase kms accordingly in ll_nopage.

Severity   : normal
Frequency  : rare, only if OST filesystem is inconsistent with MDS filesystem
Bugzilla   : 11211
Description: writes to a missing object would leak memory on the OST
Details    : If there is an inconsistency between the MDS and OST filesystems,
	     such that the MDS references an object that doesn't exist, writes
	     to that object will leak memory due to incorrect cleanup in the
	     error handling path, eventually running out of memory on the OST.

Severity   : minor
Frequency  : rare
Bugzilla   : 11040
Description: Creating too long symlink causes lustre errors
Details    : Check symlink and name lengths before sending requests to MDS.

Severity   : normal
Frequency  : only if flock is enabled (not on by default)
Bugzilla   : 11415
Description: posix locks not released on fd closure on 2.6.9+
Details    : We failed to add posix locks to list of inode locks on 2.6.9+
	     kernels, this caused such locks not to be released on fd close and
	     then assertions on fs unmount about still used locks.

Severity   : minor
Frequency  : MDS failover only, very rarely
Bugzilla   : 11277
Description: clients may get ASSERTION(granted_lock != NULL)
Details    : When request was taking a long time, and a client was resending
	     a getattr by name lock request. The were multiple lock requests
	     with the same client lock handle and
	     mds_getattr_name->fixup_handle_for_resent_request found one of the
	     lock handles but later failed with ASSERTION(granted_lock != NULL).

Severity   : major
Frequency  : rare
Bugzilla   : 10891
Description: handle->h_buffer_credits > 0, assertion failure
Details    : h_buffer_credits is zero after truncate, causing assertion
	     failure.  This patch extends the transaction or creates a new
	     one after truncate.

Severity   : normal
Frequency  : NFS re-export or patchless client
Bugzilla   : 11179, 10796
Description: Crash on NFS re-export node (__d_move)
Details    : We do not want to hash the dentry if we don't have a lock.
	     But if this dentry is later used in d_move, we'd hit uninitialised
	     list head d_hash, so we just do this to init d_hash field but
	     leave dentry unhashed.

Severity   : normal
Frequency  : NFS re-export or patchless client
Bugzilla   : 11135
Description: NFS exports has problem with symbolic link
Details    : lustre client didn't properly install dentry when re-exported
	     to NFS or running patchless client.

Severity   : normal
Frequency  : NFS re-export or patchless client
Bugzilla   : 10796
Description: Various nfs/patchless fixes.
Details    : fixes reuse disconected alias for lookup process - this fixes
	     warning "find_exported_dentry: npd != pd",
	     fix permission error with open files at nfs.
	     fix apply umask when do revalidate.

Severity   : normal
Frequency  : occasional
Bugzilla   : 11191
Description: Crash on NFS re-export node
Details    : calling clear_page() on the wrong pointer triggered oops in
	     generic_mapping_read().

Severity   : normal
Frequency  : rarely, using O_DIRECT IO
Bugzilla   : 10903
Description: unaligned directio crashes client with LASSERT
Details    : check for unaligned buffers before trying any requests.

Severity   : major
Frequency  : rarely, using CFS RAID5 patches in non-standard kernel series
Bugzilla   : 11313
Description: stale data returned from RAID cache
Details    : If only a small amount of IO is done to the RAID device before
	     reading it again it is possible to get stale data from the RAID
	     cache instead of reading it from disk.

Severity   : normal
Frequency  : always for sles10 kernel
Bugzilla   : 10947
Description: sles10 support
Details    : ll_follow_link: compile fixes and using of nd_set_link
	     under newer kernels.

Severity   : major
Frequency  : depends on arch, kernel and compiler version, always on sles10
	     kernel and x86_64
Bugzilla   : 11562
Description: recursive or deep enough symlinks cause stack overflow
Details    : getting rid of large stack-allocated variable in
	     __vfs_follow_link

Severity   : minor
Frequency  : depends on hardware
Bugzilla   : 11540
Description: lustre write performance loss in the SLES10 kernel
Details    : the performance loss is caused by using of write barriers in the
	     ext3 code. The SLES10 kernel turns barrier support on by
	     default. The fix is to undo that change for ldiskfs.

------------------------------------------------------------------------------

2006-12-09  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.8
       * Support for kernels:
        2.6.9-42.0.3EL (RHEL 4)
        2.6.5-7.276 (SLES 9)
        2.4.21-47.0.1.EL (RHEL 3)
        2.6.12.6 vanilla (kernel.org)
       * bug fixes

Severity   : major
Frequency  : quota enabled and large files being deleted
Bugzilla   : 10707
Description: releasing more than 4GB of quota at once hangs OST
Details    : If a user deletes more than 4GB of files on a single OST it
	     will cause the OST to spin in an infinite loop.  Release
	     quota in < 4GB chunks, or use a 64-bit value for 1.4.7.1+.

Severity   : minor
Frequency  : rare
Bugzilla   : 10845
Description: statfs data retrieved from /proc may be stale or zero
Details    : When reading per-device statfs data from /proc, in the
	     {kbytes,files}_{total,free,avail} files, it may appear
	     as zero or be out of date.

Severity   : minor
Frequency  : systems with MD RAID1 external journal devices
Bugzilla   : 10832
Description: lconf's call to blkid is confused by RAID1 journal devices
Details    : Use the "blkid -l" flag to locate the MD RAID device instead
	     of returning all block devices that match the journal UUID.

Severity   : normal
Frequency  : always, for aggregate stripe size over 4GB
Bugzilla   : 10725
Description: "lfs setstripe" fails assertion when setting 4GB+ stripe width
Details    : Using "lfs setstripe" to set stripe size * stripe count over 4GB
	     will fail the kernel with "ASSERTION(lsm->lsm_xfersize != 0)"

Severity   : minor
Frequency  : always if "lfs find" used on a local file/directory
Bugzilla   : 10864
Description: "lfs find" segfaults if used on a local file/directory
Details    : The case where a directory component was not specified wasn't
	     handled correctly.  Handle this properly.

Severity   : normal
Frequency  : always on ppc64
Bugzilla   : 10634
Description: the write to an ext3 filesystem mounted with mballoc got stuck
Details    : ext3_mb_generate_buddy() uses find_next_bit() which does not
	     perform endianness conversion.

Severity   : major
Frequency  : rarely (truncate to non-zero file size after write under load)
Bugzilla   : 10730, 10687
Description: Files padded with zeros to next 4K multiple
Details    : With filesystems mounted using the "extents" option (2.6 kernels)
	     it is possible that files that are truncated to a non-zero size
	     immediately after being written are filled with zero bytes beyond
	     the truncated size.  No file data is lost.

Severity   : enhancement
Bugzilla   : 10452
Description: Allow recovery/failover for liblustre clients.
Details    : liblustre clients were unaware of failover configurations until
	     now.

Severity   : enhancement
Bugzilla   : 10743
Description: user file locks should fail when not mounting with flock option
Details    : Set up an error-returning stub in ll_file_operations.lock field
	     to prevent incorrect behaviour when client is mounted without
	     flock option. Also, set up properly f_op->flock field for
	     RHEL4 kernels.

Severity   : minor
Frequency  : always on ia64
Bugzilla   : 10905
Description: "lfs df" loops on printing out MDS statfs information
Details    : The obd_ioctl_data was not initialized and in some systems
	     this caused a failure during the ioctl that did not return
	     an error.  Initialize the struct and return an error on failure.

Severity   : minor
Frequency  : SLES 9 only
Bugzilla   : 10667
Description: Error of copying files with lustre special EAs as root
Details    : Client side always return success for setxattr call for lustre
	     special xattr (currently only "trusted.lov").

Severity   : normal
Frequency  : rarely on clusters with both ia64+i386 clients
Bugzilla   : 10672
Description: ia64+i686 clients doing shared IO on the same file may LBUG
Details    : In rare cases when both ia64+i686 (or other mixed-PAGE_SIZE)
	     clients are doing concurrent writes to the same file it is
	     possible that the ia64 clients may LASSERT because the OST
	     extent locks are not PAGE_SIZE aligned.  Ensure that grown
	     locks are always aligned on the request boundary.

Severity   : normal
Frequency  : specific use, occasional
Bugzilla   : 7040
Description: Overwriting in use executable truncates on-disk binary image
Details    : If one node attempts to overwrite an executable in use by
	     another node, we now correctly return ETXTBSY instead of
	     truncating the file.

Severity   : enhancement
Bugzilla   : 4900
Description: Async OSC create to avoid the blocking unnecessarily.
Details    : If an OST has no remaining object, system will block on the creating
	     when need to create a new object on this OST. Now, ways use
	     pre-created objects when available, instead of blocking on an
	     empty osc while others are not empty.  If we must block, we block
	     for the shortest possible period of time.

Severity   : normal
Frequency  : rare
Bugzilla   : 2707
Description: chmod on Lustre root is propagated to other clients
Details    : Re-validate root's dentry in ll_lookup_it to avoid having it
	     invalid by the follow_mount time.

Severity   : minor
Frequency  : liblustre clients only
Bugzilla   : 10883
Description: Race in 'instant cancel' lock handling could lead to such locks
	     never to be granted in case of SMP MDS
Details    : Do not destroy not yet granted but cbpending locks in
	     handle_enqueue

Severity   : minor
Frequency  : replay/resend of open
Bugzilla   : 10991
Description: non null lock assetion failure in mds_intent_policy
Details    : Trying to replay/resend lockless open requests resulted in
	     mds_open() returning 0 with no lock.  Now it sets a flag if
	     a lock is going to be returned.

Severity   : enhancement
Bugzilla   : 10889
Description: Checksum enhancements
Details    : New checksum enhancements allow for resending RPCs that failed
	     checksum checks.

Severity   : enhancement
Bugzilla   : 7376
Description: Tunables on number of dirty pages in cacche
Details    : Allow to set limit on number of dirty pages cached.

Severity   : normal
Frequency  : rare
Bugzilla   : 10643
Description: client crash on unmount - lock still has references
Details    : In some error handling cases it was possible to leak a lock
	     reference on a client while accessing a file.  This was not
	     harmful to the client during operation, but would cause the
	     client to crash when the filesystem is unmounted.

Severity   : normal
Frequency  : specific case, rare
Bugzilla   : 10921
Description: ETXTBSY on mds though file not in use by client
Details    : ETXTBSY is no longer incorrectly returned when attempting to
	     chmod or chown a directory that the user previously tried to
	     execute or a currently-executing binary.

Severity   : major
Frequency  : extremely rare except on liblustre-based clients
Bugzilla   : 10480
Description: Lustre space not freed when files are deleted
Details    : Clean up open-unlinked files after client eviction.  Previously
	     the unlink was skipped and the files remained as orphans.

Severity   : normal
Frequency  : rare
Bugzilla   : 10999
Description: OST failure "would be an LBUG" in waiting_locks_callback()
Details    : In some cases it was possible to send a blocking callback to
	     a client doing a glimpse, even though that client didn't get
	     a lock granted.  When the glimpse lock is cancelled on the OST
	     the freed lock is left on the waiting list and corrupted the list.

Severity   : major
Frequency  : all core dumps
Bugzilla   : 11103
Description: Broke core dumps to lustre
Details    : Negative dentry may be unhashed if parent does not have UPDATE
	     lock, but some callers, e.g. do_coredump, expect dentry to be
	     hashed after successful create, hash it in ll_create_it.

------------------------------------------------------------------------------

2006-09-13  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.7.1
       * Support for kernels:
        2.6.9-42.0.2.EL (RHEL 4)
        2.6.5-7.276 (SLES 9)
        2.4.21-40.EL (RHEL 3)
        2.6.12.6 vanilla (kernel.org)
      * bug fix

Severity   : major
Frequency  : always on RHEL 3
Bugzilla   : 10867
Description: Number of open files grows over time
Details    : The number of open files grows over time, whether or not
	     Lustre is started.  This was due to a filp leak introduced
	     by one of our kernel patches.

------------------------------------------------------------------------------

08-20-2006  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.7
       * Support for kernels:
	2.6.9-42.EL (RHEL 4)
	2.6.5-7.276 (SLES 9)
	2.4.21-40.EL (RHEL 3)
	2.6.12.6 vanilla (kernel.org)
       * bug fixes

Severity   : major
Frequency  : rare
Bugzilla   : 5719, 9635, 9792, 9684
Description: OST (or MDS) trips assertions in (re)connection under heavy load
Details    : If a server is under heavy load and cannot reply to new
	     connection requests before the client resends the (re)connect,
	     the connection handling code can behave badly if two service
	     threads are concurrently handing separate (re)connections from
	     the same client.  Add better locking to the connection handling
	     code, and ensure that only a single connection will be processed
	     for a given client UUID, even if the lock is dropped.

Severity   : enhancement
Bugzilla   : 3627
Description: add TCP zero-copy support to kernel
Details    : Add support to the kernel TCP stack to allow zero-copy bulk
	     sends if the hardware supports scatter-gather and checksumming.
	     This allows socklnd to do client-write and server-read more
	     efficiently and reduce CPU utilization from skbuf copying.

Severity   : minor
Frequency  : only if NFS exporting from client
Bugzilla   : 10258
Description: NULL pointer deref in ll_iocontrol() if chattr mknod file
Details    : If setting attributes on a file created under NFS that had
	     never been opened it would be possible to oops the client
	     if the file had no objects.

Severity   : minor
Frequency  : always for liblustre
Bugzilla   : 10290
Description: liblustre client does MDS+OSTs setattr RPC for each write
Details    : When doing a write from a liblustre client, the client
	     incorrectly issued an RPC to the MDS and each OST the file was
	     striped over in order to update the timestamps.  When writing
	     with small chunks and many clients this could overwhelm the MDS
	     with RPCs.  In all cases it would slow down the write because
	     these RPCs are unnecessary.

Severity   : enhancement
Bugzilla   : 9340
Description: allow number of MDS service threads to be changed at module load
Details    : It is now possible to change the number of MDS service threads
	     running.  Adding "options mds mds_num_threads={N}" to the MDS's
	     /etc/modprobe.conf will set the number of threads for the next
	     time Lustre is restarted (assuming the "mds" module is also
	     reloaded at that time).  The default number of threads will
	     stay the same, 32 for most systems.

Severity   : major
Frequency  : rare
Bugzilla   : 10300
Description: OST crash if filesystem is unformatted or corrupt
Details    : If an OST is started on a device that has never been formatted
	     or if the filesystem is corrupt and cannot even mount then the
	     error handling cleanup routines would dereference a NULL pointer.

Severity   : medium
Frequency  : rare
Bugzilla   : 10047
Description: NULL pointer deref in llap_from_page.
Details    : get_cache_page_nowait can return a page with NULL (or otherwise
	     incorrect) mapping if the page was truncated/reclaimed while it was
	     searched for. Check for this condition and skip such pages when
	     doing readahead. Introduce extra check to llap_from_page() to
	     verify page->mapping->host is non-NULL (so page is not anonymous).

Severity   : minor
Frequency  : Sometimes when using sys_sendfile
Bugzilla   : 7020
Description: "page not covered by a lock" warnings from ll_readpage
Details    : sendfile called ll_readpage without right page locks present.
	     Now we introduced ll_file_sendfile that does necessary locking
	     around call to generic_file_sendfile() much like we do in
	     ll_file_read().

Severity   : medium
Frequency  : with certain MDS communication failures at client mount time
Bugzilla   : 10268
Description: NULL pointer deref after failed client mount
Details    : a client connection request may delayed by the network layer
	     and not be sent until after the PTLRPC layer has timed out the
	     request.  If the client fails the mount immediately it will try
	     to clean up before the network times out the request.  Add a
	     reference from the request import to the obd device and delay
	     the cleanup until the network drops the request.

Severity   : medium
Frequency  : occasionally during client (re)connect
Bugzilla   : 9387
Description: assertion failure during client (re)connect
Details    : processing a client connection request may be delayed by the
	     client or server longer than the client connect timeout.  This
	     causes the client to resend the connection request.  If the
	     original connection request is replied in this interval, the
	     client may trip an assertion failure in ptlrpc_connect_interpret()
	     which thought it would be the only running connect process.

Severity   : medium
Frequency  : only with obd_echo servers and clients that are rebooted
Bugzilla   : 10140
Description: kernel BUG accessing uninitialized data structure
Details    : When running an obd_echo server it did not start the ping_evictor
	     thread, and when a client was evicted an uninitialized data
	     structure was accessed.  Start the ping_evictor in the RPC
	     service startup instead of the OBD startup.

Severity   : enhancement
Bugzilla   : 10193 (patchless)
Description: Remove dependency on various unexported kernel interfaces.
Details    : No longer need reparent_to_init, exit_mm, exit_files,
	     sock_getsockopt, filemap_populate, FMODE_EXEC, put_filp.

Severity   : minor
Frequency  : rare (only users of deprecated and unsupported LDAP config)
Bugzilla   : 9337
Description: write_conf for zeroconf mount queried LDAP incorrectly for client
Details    : LDAP apparently contains 'lustreName' attributes instead of
	     'name'.  A simple remapping of the name is sufficient.

Severity   : major
Frequency  : rare (only with non-default dump_on_timeout debug enabled)
Bugzilla   : 10397
Description: waiting_locks_callback trips kernel BUG if client is evicted
Details    : Running with the dump_on_timeout debug flag turned on makes
	     it possible that the waiting_locks_callback() can try to dump
	     the Lustre kernel debug logs from an interrupt handler.  Defer
	     this log dumping to the expired_lock_main() thread.

Severity   : enhancement
Bugzilla   : 10420
Description: Support NFS exporting on 2.6 kernels.
Details    : Implement non-rawops metadata methods for NFS server to use without
	     changing NFS server code.

Severity   : medium
Frequency  : very rare (synthetic metadata workload only)
Bugzilla   : 9974
Description: two racing renames might cause an MDS thread to deadlock
Details    : Running the "racer" program may cause one MDS thread to rename
	     a file from being the source of a rename to being the target of
	     a rename at exactly the same time that another thread is doing
	     so, and the second thread has already enqueued these locks after
	     doing a lookup of the target and is trying to relock them in
	     order.  Ensure that we don't try to re-lock the same resource.

Severity   : major
Frequency  : only very large systems with liblustre clients
Bugzilla   : 7304
Description: slow eviction of liblustre clients with the "evict_by_nid" RPC
Details    : Use asynchronous set_info RPCs to send the "evict_by_nid" to
	     all OSTs in parallel.  This allows the eviction of stale liblustre
	     clients to proceed much faster than if they were done in series,
	     and also offers similar improvements for other set_info RPCs.

Severity   : minor
Frequency  : common
Bugzilla   : 10265
Description: excessive CPU usage during initial read phase on client
Details    : During the initial read phase on a client, it would agressively
	     retry readahead on the file, consuming too much CPU and impacting
	     performance (since 1.4.5.8).  Improve the readahead algorithm
	     to avoid this, and also improve some other common cases (read
	     of small files in particular, where "small" is files smaller than
	     /proc/fs/lustre/llite/*/max_read_ahead_whole_mb, 2MB by default).

Severity   : minor
Frequency  : rare
Bugzilla   : 10450
Description: MDS crash when receiving packet with unknown intent.
Details    : Do not LBUG in unknown intent case, just return -EFAULT

Severity   : enhancement
Bugzilla   : 9293, 9385
Description: MDS RPCs are serialised on client. This is unnecessary for some.
Details    : Do not serialize getattr (non-intent version) and statfs.

Severity   : minor
Frequency  : occasional, when OST network is overloaded/intermittent
Bugzilla   : 10416
Description: client evicted by OST after bulk IO timeout
Details    : If a client sends a bulk IO request (read or write) the OST
	     may evict the client if it is unresposive to its data GET/PUT
	     request.  This is incorrect if the network is overloaded (takes
	     too long to transfer the RPC data) or dropped the OST GET/PUT
	     request.  There is no need to evict the client at all, since
	     the pinger and/or lock callbacks will handle this, and the
	     client can restart the bulk request.

Severity   : minor
Frequency  : Always when mmapping file with no objects
Bugzilla   : 10438
Description: client crashes when mmapping file with no objects
Details    : Check that we actually have objects in a file before doing any
	     operations on objects in ll_vm_open, ll_vm_close and
	     ll_glimpse_size.

Severity   : minor
Frequency  : Rare
Bugzilla   : 10484
Description: Request leak when working with deleted CWD
Details    : Introduce advanced request refcount tracking for requests
	     referenced from lustre intent.

Severity   : Enhancement
Bugzilla   : 10482
Description: Cache open file handles on client.
Details    : MDS now will return special lock along with openhandle, if
	     requested and client is allowed to hold openhandle, even if unused,
	     until such a lock is revoked. Helps NFS a lot, since NFS is opening
	     closing files for every read/write openration.

Severity   : Enhancement
Bugzilla   : 9291
Description: Cache open negative dentries on client when possible.
Details    : Guard negative dentries with UPDATE lock on parent dir, drop
	     negative dentries on lock revocation.

Severity   : minor
Frequency  : Always
Bugzilla   : 10510
Description: Remounting a client read-only wasn't possible with a zconf mount
Details    : It wasn't possible to remount a client read-only with llmount.

Severity   : enhancement
Description: Include MPICH 1.2.6 Lustre ADIO interface patch
Details    : In lustre/contrib/ or /usr/share/lustre in RPM a patch for
	     MPICH is included to add Lustre-specific ADIO interfaces.
	     This is based closely on the UFS ADIO layer and only differs
	     in file creation, in order to allow the OST striping to be set.
	     This is user-contributed code and not supported by CFS.

Severity   : minor
Frequency  : Always
Bugzilla   : 9486
Description: extended inode attributes (immutable, append-only) work improperly
	     when 2.4 and 2.6 kernels are used on client/server or vice versa
Details    : Introduce kernel-independent values for these flags.

Severity   : enhancement
Frequency  : Always
Bugzilla   : 10248
Description: Allow fractional MB tunings for lustre in /proc/ filesystem.
Details    : Many of the /proc/ tunables can only be tuned at a megabyte
	     granularity. Now, Fractional MB granularity is be supported,
	     this is very useful for low memory system.

Severity   : enhancement
Bugzilla   : 9292
Description: Getattr by fid
Details    : Getting a file attributes by its fid, obtaining UPDATE|LOOKUP
	     locks, avoids extra getattr rpc requests to MDS, allows '/' to
	     have locks and avoids getattr rpc requests for it on every stat.

Severity   : major
Frequency  : Always, for filesystems larger than 2TB
Bugzilla   : 6191
Description: ldiskfs crash at mount for filesystem larger than 2TB with mballoc
Details    : Kenrel kmalloc limits allocations to 128kB and this prevents
	     filesystems larger than 2TB to be mounted with mballoc enabled.

Severity   : critical
Frequency  : Always, for 32-bit kernel without CONFIG_LBD and filesystem > 2TB
Bugzilla   : 6191
Description: ldiskfs crash at mount for filesystem larger than 2TB with mballoc
Details    : If a 32-bit kernel is compiled without CONFIG_LBD enabled and a
	     filesystems larger than 2TB is mounted then the kernel will
	     silently corrupt the start of the filesystem.  CONFIG_LBD is
	     enabled for all CFS-supported kernels, but the possibility of
	     this happening with a modified kernel config exists.

Severity   : enhancement
Bugzilla   : 10462
Description: add client O_DIRECT support for 2.6 kernels
Details    : It is now possible to do O_DIRECT reads and writes to files
	     in the Lustre client mountpoint on 2.6 kernel clients.

Severity   : enhancement
Bugzilla   : 10446
Description: parallel glimpse, setattr, statfs, punch, destroy requests
Details    : Sends glimpse, setattr, statfs, punch, destroy requests to OSTs in
	     parallel, not waiting for response from every OST before sending
	     a rpc to the next OST.

Severity   : minor
Frequency  : rare
Bugzilla   : 10150
Description: setattr vs write race when updating file timestamps
Details    : Client processes that update a file timestamp into the past
	     right after writing to the file (e.g. tar) it is possible that
	     the updated file modification time can be reset to the current
	     time due to a race between processing the setattr and write RPC.

Severity   : enhancement
Bugzilla   : 10318
Description: Bring 'lfs find' closer in line with regular Linux find.
Details    : lfs find util supports -atime, -mtime, -ctime, -maxdepth, -print,
	     -print0 options and obtains all the needed info through the lustre
	     ioctls.

Severity   : enhancement
Bugzilla   : 6221
Description: support up to 1024 configured devices on one node
Details    : change obd_dev array from statically allocated to dynamically
	     allocated structs as they are first used to reduce memory usage

Severity   : minor
Frequency  : rare
Bugzilla   : 10437
Description: Flush dirty partially truncated pages during truncate
Details    : Immediatelly flush partially truncated pages in filter_setattr,
	     this way we completely avoid having any pages in page cache on OST
	     and can retire ugly workarounds during writes to flush such pages.

Severity   : minor
Frequency  : rare
Bugzilla   : 10409
Description: i_sem vs transaction deadlock in mds_obd_destroy during unlink.
Details    : protect inode from truncation within vfs_unlink() context
	     just take a reference before calling vfs_unlink() and release it
	     when parent's i_sem is free.

Severity   : major
Frequency  : rare
Bugzilla   : 4778
Description: last_id value checked outside lock on OST caused LASSERT failure
Details    : If there were multiple MDS->OST object precreate requests in
	     flight, it was possible that the OST's last object id was checked
	     outside a lock and incorrectly tripped an assertion.  Move checks
	     inside locks, and discard old precreate requests.

Severity   : minor
Frequency  : always, if extents are used on OSTs
Bugzilla   : 10703
Description: index ei_leaf_hi (48-bit extension) is not zeroed in extent index
Details    : OSTs using the extents format would not zero the high 16 bits of
	     the index physical block number.  This is not a problem for any
	     OST filesystems smaller than 16TB, and no kernels support ext3
	     filesystems larger than 16TB yet.  This is fixed in 1.4.7 (all
	     new/modified files) and can be fixed for existing filesystems
	     with e2fsprogs-1.39-cfs1.

Severity   : minor
Frequency  : rare
Bugzilla   : 9387
Description: import connection selection may be incorrect if timer wraps
Details    : Using a 32-bit jiffies timer with HZ=1000 may cause backup
	     import connections to be ignored if the 32-bit jiffies counter
	     wraps.  Use a 64-bit jiffies counter.

Severity   : minor
Frequency  : very large clusters immediately after boot
Bugzilla   : 10083
Description: LNET request buffers exhausted under heavy short-term load
Details    : If a large number of client requests are generated on a service
	     that has previously never seen so many requests it is possible
	     that the request buffer growth cannot keep up with the spike in
	     demand.  Instead of dropping incoming requests, they are held in
	     the LND until the RPC service can accept more requests.

Severity   : minor
Frequency  : Sometimes during replay
Bugzilla   : 9314
Description: Assertion failure in ll_local_open after replay.
Details    : If replay happened on an open request reply before we were able
             to set replay handler, reply will become not swabbed tripping the
             assertion in ll_local_open. Now we set the handler right after
             recognising of open request

Severity   : trivial
Frequency  : very rare
Bugzilla   : 10584
Description: kernel reports "badness in vsnprintf"
Details    : Reading from the "recovery_status" /proc file in small chunks
	     may cause a negative length in lprocfs_obd_rd_recovery_status()
	     call to vsnprintf() (which is otherwise harmless).  Exit early
	     if there is no more space in the output buffer.

Severity   : enhancement
Bugzilla   : 2259
Description: clear OBD RPC statistics by writing to them
Details    : It is now possible to clear the OBD RPC statistics by writing
	     to the "stats" file.

Severity   : minor
Frequency  : rare
Bugzilla   : 10641
Description: Client mtime is not the same on different clients after utimes
Details    : In some cases, the client was using the utimes() syscall on
	     a file cached on another node.  The clients now validate the
	     ctime from the MDS + OSTs to determine which one is right.

Severity   : minor
Frequency  : always
Bugzilla   : 10611
Description: Inability to activate failout mode
Details    : lconf script incorrectly assumed that in pythong string's numeric
	     value is used in comparisons.

Severity   : minor
Frequency  : always with multiple stripes per file
Bugzilla   : 10671
Description: Inefficient object allocation for mutli-stripe files
Details    : When selecting which OSTs to stripe files over, for files with
	     a stripe count that divides evenly into the number of OSTs,
	     the MDS is always picking the same starting OST for each file.
	     Return the OST selection heuristic to the original design.

Severity   : trivial
Frequency  : rare
Bugzilla   : 10673
Description: mount failures may take full timeout to return an error
Details    : Under some heavy load conditions it is possible that a
	     failed mount can wait for the full obd_timeout interval,
	     possibly several minutes, before reporting an error.
	     Instead return an error as soon as the status is known.
Severity   : major
Frequency  : quota enabled and large files being deleted
Bugzilla   : 10707
Description: releasing more than 4GB of quota at once hangs OST
Details    : If a user deletes more than 4GB of files on a single OST it
	     will cause the OST to spin in an infinite loop.  Release
	     quota in < 4GB chunks, or use a 64-bit value for 1.4.7.1+.

Severity   : trivial
Frequency  : rare
Bugzilla   : 10845
Description: statfs data retrieved from /proc may be stale or zero
Details    : When reading per-device statfs data from /proc, in the
	     {kbytes,files}_{total,free,avail} files, it may appear
	     as zero or be out of date.

Severity   : trivial
Frequency  : systems with MD RAID1 external journal devices
Bugzilla   : 10832
Description: lconf's call to blkid is confused by RAID1 journal devices
Details    : Use the "blkid -l" flag to locate the MD RAID device instead
	     of returning all block devices that match the journal UUID.

Severity   : normal
Frequency  : always, for aggregate stripe size over 4GB
Bugzilla   : 10725
Description: assertion fails when trying to use 4GB stripe size
Details    : Use "setstripe" to set stripe size over 4GB will fail the kernel,
             complaining "ASSERTION(lsm->lsm_xfersize != 0)"

Severity   : normal
Frequency  : always on ppc64
Bugzilla   : 10634
Description: the first write on an ext3 filesystem with mballoc got stuck
Details    : ext3_mb_generate_buddy() uses find_next_bit() which does not
             perform endianness conversion.

------------------------------------------------------------------------------

02-14-2006  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.6
       * WIRE PROTOCOL CHANGE.  This version of Lustre networking WILL NOT
	 INTEROPERATE with older versions automatically.  Please read the
	 user documentation before upgrading any part of a live system.
       * WARNING: Lustre networking configuration changes are required with
	 this release.  See https://bugzilla.clusterfs.com/show_bug.cgi?id=10052
	 for details.
       * bug fixes
       * Support for kernels:
	2.6.9-22.0.2.EL (RHEL 4)
	2.6.5-7.244 (SLES 9)
	2.6.12.6 vanilla (kernel.org)


Severity   : enhancement
Bugzilla   : 7981/8208
Description: Introduced Lustre Networking (LNET)
Details    : LNET is new networking infrastructure for Lustre, it includes
	     a reorganized network configuration mode (see the user
	     documentation for full details) as well as support for routing
	     between different network fabrics.  Lustre Networking Devices
	     (LNDs) for the supported network fabrics have also been
	     created for this new infrastructure.

Severity   : enhancement
Description: Introduced Access control lists
Details    : clients can set ACLs on files and directories in order to have
	     more fine-grained permissions than the standard Unix UGO+RWX.
	     The MDS must be started with the "-o acl" mount option.

Severity   : enhancement
Description: Introduced filesystem quotas
Details    : Administrators may now establish per-user quotas on the
	     filesystem.

Severity   : enhancement
Bugzilla   : 7982
Description: Configuration change for the XT3
	     The PTLLND is now used to run Lustre over Portals on the XT3
	     The configure option(s) --with-cray-portals are no longer used.
	     Rather --with-portals=<path-to-portals-includes> is used to
	     enable building on the XT3.  In addition to enable XT3 specific
	     features the option --enable-cray-xt3 must be used.

Severity   : major
Frequency  : rare
Bugzilla   : 7407
Description: Running on many-way SMP OSTs can trigger oops in llcd_send()
Details    : A race between allocating a new llcd and re-getting the llcd_lock
	     allowed another thread to grab newly-allocated llcd.

Severity   : enhancement
Bugzilla   : 7116
Description: 2.6 OST async journal commit and locking fix to improve performance
Details    : The filter_direct_io()+filter_commitrw_write() journal commits for
	     2.6 kernels are now async as they already were in 2.4 kernels so
	     that they can commit concurrently with the network bulk transfer.
	     For block-allocated files the filter allocation semaphore is held
	     to avoid filesystem fragmentation during allocation.  BKL lock
	     removed for 2.6 xattr operations where it is no longer needed.

Severity   : minor
Frequency  : rare
Bugzilla   : 8320
Description: lconf incorrectly determined whether two IP networks could talk
Details    : In some more complicated routing and multiple-network
	     configurations, lconf will avoid trying to make a network
	     connection to a disjoint part of the IP space.  It was doing the
	     math incorrectly for one set of cases.

Severity   : major
Frequency  : rare
Bugzilla   : 7359
Description: Fix for potential infinite loop processing records in an llog.
Details    : If an llog record is corrupted/zeroed, it is possible to loop
	     forever in llog_process().  Validate the llog record length
	     and skip the remainder of the block on error.

Severity   : minor
Frequency  : occasional (liblustre only)
Bugzilla   : 6363
Description: liblustre could not open files whose last component is a symlink
Details    : sysio_path_walk() would incorrectly pass the open intent to
	     intermediate path components.

Severity   : minor
Frequency  : rare (liblustre only with non-standard tuning)
Bugzilla   : 7201 (7350)
Description: Tuning the MDC DLM LRU size to zero triggers client LASSERT
Details    : llu_lookup_finish_locks() tries to set lock data on a lock
	     after it has been released, only do this for referenced locks

Severity   : enhancement
Bugzilla   : 7328
Description: specifying an (invalid) directory default stripe_size of -1
	     would reset the directory default striping
Details    : stripe_size -1 was used internally to signal directory stripe
	     removal, now use "all default" to signal dir stripe removal
	     as a directory striping of "all default" is not useful

Severity   : minor
Frequency  : common for large clusters running liblustre clients
Bugzilla   : 7198
Description: doing an ls when liblustre clients are running is slow
Details    : sending a glimpse AST to a liblustre client waits for every AST
	     to time out, as liblustre clients will not respond.  Since they
	     cannot cache data we refresh the OST lock LVB from disk instead.

Severity   : enhancement
Bugzilla   : 7198
Description: doing an ls at the same time as file IO can be slow
Details    : enqueue and other "small" requests can be blocked behind many
	     large IO requests.  Create a new OST IO portal for non-IO
	     requests so they can be processed faster.

Severity   : minor
Frequency  : rare (only HPUX clients mounting unsupported re-exported NFS vol)
Bugzilla   : 5781
Description: an HPUX NFS client would get -EACCESS when ftruncate()ing a newly
	     created file with mode 000
Details    : the Linux NFS server relies on an MDS_OPEN_OWNEROVERRIDE hack to
	     allow an ftruncate() as a non-root user to a file with mode 000.
	     Lustre now respects this flag to disable mode checks when
	     truncating a file owned by the user

Severity   : minor
Frequency  : liblustre-only, when liblustre client dies unexpectedly or becomes
	     busy
Bugzilla   : 7313
Description: Revoking locks from clients that went dead or catatonic might take
	     a lot of time.
Details    : New lock flags FL_CANCEL_ON_BLOCK used by liblustre makes
	     cancellation of such locks instant on servers without waiting for
	     any reply from clients. Clients drops these locks when cancel
	     notification from server is received without replying.

Severity   : minor
Frequency  : liblustre-only, when liblustre client dies or becomes busy
Bugzilla   : 7311
Description: Doing ls on Linux clients can take a long time with active
	     liblustre clients
Details    : Liblustre client cannot handle ASTs in timely manner, so avoid
	     granting such locks to it in the first place if possible.  Locks
	     are taken by proxy on the OST during the read or write and
	     dropped immediately afterward.  Add connect flags handling, do
	     not grant locks to liblustre clients for glimpse ASTs.

Severity   : enhancement
Bugzilla   : 6252
Description: Improve read-ahead algorithm to avoid excessive IO for random reads
Details    : Existing read-ahead algorithm is tuned for the case of streamlined
	     sequential reads and behaves badly with applications doing random
	     reads.  Improve it by reading ahead at least read region, and
	     avoiding excessive large RPC for small reads.

Severity   : enhancement
Bugzilla   : 8330
Description: Creating more than 1000 files for a single job may cause a load
	     imbalance on the OSTs if there are also a large number of OSTs.
Details    : qos_prep_create() uses an OST index reseed value that is an
	     even multiple of the number of available OSTs so that if the
	     reseed happens in the middle of the object allocation it will
	     still utilize the OSTs as uniformly as possible.

Severity   : major
Frequency  : rare
Bugzilla   : 8322
Description: OST or MDS may oops in ping_evictor_main()
Details    : ping_evictor_main() drops obd_dev_lock if deleting a stale export
	     but doesn't restart at beginning of obd_exports_timed list
	     afterward.

Severity   : enhancement
Bugzilla   : 7304
Description: improve by-nid export eviction on the MDS and OST
Details    : allow multiple exports with the same NID to be evicted at one
	     time without re-searching the exports list.

Severity   : major
Frequency  : rare, only with supplementary groups enabled on SMP 2.6 kernels
Bugzilla   : 7273
Description: MDS may oops in groups_free()
Details    : in rare race conditions a newly allocated group_info struct is
	     freed again, and this can be NULL.  The 2.4 compatibility code
	     for groups_free() checked for a NULL pointer, but 2.6 did not.

Severity   : minor
Frequency  : common for liblustre clients doing little filesystem IO
Bugzilla   : 9352, 7313
Description: server may evict liblustre clients accessing contended locks
Details    : if a client is granted a lock or receives a completion AST
	     with a blocking AST already set it would not reply to the AST
	     for LDLM_FL_CANCEL_ON_BLOCK locks.  It now replies to such ASTs.

Severity   : minor
Frequency  : lfs setstripe, only systems with more than 160 OSTs
Bugzilla   : 9440
Description: unable to set striping with a starting offset beyond OST 160
Details    : llapi_create_file() incorrectly limited the starting stripe
	     index to the maximum single-file stripe count.

Severity   : minor
Frequency  : LDAP users only
Bugzilla   : 6163
Description: lconf did not handle in-kernel recovery with LDAP properly
Details    : lconf/LustreDB get_refs() is searching the wrong namespace

Severity   : enhancement
Bugzilla   : 7342
Description: bind OST threads to NUMA nodes to improve performance
Details    : all OST threads are uniformly bound to CPUs on a single NUMA
	     node and do their allocations there to localize memory access

Severity   : enhancement
Bugzilla   : 7979
Description: llmount can determine client NID directly from Myrinet (GM)
Details    : the client NID code from gmnalnid was moved directly into
	     llmount, removing the need to use this or specifying the
	     client NID explicitly when mounting GM clients with zeroconf

Severity   : minor
Frequency  : if client is started with down MDS
Bugzilla   : 7184
Description: if client is started with down MDS mount hangs in ptlrpc_queue_wait
Details    : Having an LWI_INTR() wait event (interruptible, but no timeout)
	     will wait indefinitely in ptlrpc_queue_wait->l_wait_event() after
	     ptlrpc_import_delayed_req() because we didn't check if the
	     request was interrupted, and we also didn't break out of the
	     event loop if there was no timeout

Severity   : major
Frequency  : rare
Bugzilla   : 5047
Description: data loss during non-page-aligned writes to a single file from
	     both multiple nodes and multiple threads on one node at same time
Details    : updates to KMS and lsm weren't protected by common lock. Resulting
	     inconsistency led to false short-reads, that were cached and later
	     used by ->prepare_write() to fill in partially written page,
	     leading to data loss.

Severity   : minor
Frequency  : always, if lconf --abort_recovery used
Bugzilla   : 7047
Description: lconf --abort_recovery fails with 'Operation not supported'
Details    : lconf was attempting to abort recovery on the MDT device and not
	     the MDS device

Severity   : enhancement
Bugzilla   : 9445
Description: remove cleanup logs
Details    : replace lconf-generated cleanup logs with lustre internal
	     cleanup routines.  Eliminates the need for client-cleanup and
	     mds-cleanup logs.

Severity   : enhancement
Bugzilla   : 8592
Description: add support for EAs (user and system) on lustre filesystems
Details    : it is now possible to store extended attributes in the Lustre
	     client filesystem, and with the user_xattr mount option it
	     is possible to allow users to store EAs on their files also

Severity   : enhancement
Bugzilla   : 7293
Description: Add possibility (config option) to show minimal available OST free
	     space.
Details    : When compiled with --enable-mindf configure option, statfs(2)
	     (and so, df) will return least minimal free space available from
	     all OSTs as amount of free space on FS, instead of summary of
	     free spaces of all OSTs.

Severity   : enhancement
Bugzilla   : 7311
Description: do not expand extent locks acquired on OST-side
Details    : Modify ldlm_extent_policy() to not expand local locks, acquired
	     by server: they are not cached anyway.

Severity   : major
Frequency  : when mmap is used/binaries executed from Lustre
Bugzilla   : 9482
Description: Unmmap pages before throwing them away from read cache.
Details    : llap_shrink cache now attempts to unmap pages before discarding
	     them (if unmapping failed - do not discard).  SLES9 kernel has
	     extra checks that trigger if this unmapping is not done first.

Severity   : minor
Frequency  : rare
Bugzilla   : 6034
Description: lconf didn't resolve symlinks before checking to see whether a
	     given mountpoint was already in use

Severity   : minor
Frequency  : when migrating failover services
Bugzilla   : 6395, 9514
Description: When migrating a subset of services from a node (e.g. failback
	     from a failover service node) the remaining services would
	     time out and evict clients.
Details    : lconf --force (implied by --failover) sets the global obd_timeout
	     to 5 seconds in order to quickly disconnect, but this caused
	     other RPCs to time out too quickly.  Do not change the global
	     obd_timeout for force cleanup, only set it for DISCONNECT RPCs.

Severity   : enhancement
Frequency  : if MDS is started with down OST
Bugzilla   : 9439,5706
Description: Allow startup/shutdown of an MDS without depending on the
	     availability of the OSTs.
Details    : Asynchronously call mds_lov_synchronize during MDS startup.
	     Add appropriate locking and lov-osc refcounts for safe
	     cleaning.  Add osc abort_inflight calls in case the
	     synchronize never started.

Severity   : minor
Frequency  : occasional (Cray XT3 only)
Bugzilla   : 7305
Description: root not authorized to access files in CRAY_PORTALS environment
Details    : The client process capabilities were not honoured on the MDS in
	     a CRAY_PORTALS/CRAY_XT3 environment.  If the file had previously
	     been accessed by an authorized user then root was able to access
	     the file on the local client also.  The root user capabilities
	     are now allowed on the MDS, as this environment has secure UID.

Severity   : minor
Frequency  : occasional
Bugzilla   : 6449
Description: ldiskfs "too long searching" message happens too often
Details    : A debugging message (otherwise harmless) prints too often on
	     the OST console.  This has been reduced to only happen when
	     there are fragmentation problems on the filesystem.

Severity   : minor
Frequency  : rare
Bugzilla   : 9598
Description: Division by zero in statfs when all OSCs are inactive
Details    : lov_get_stripecnt() returns zero due to incorrect order of checks,
	     lov_statfs divides by value returned by lov_get_stripecnt().

Severity   : minor
Frequency  : common
Bugzilla   : 9489, 3273
Description: First write from each client to each OST was only 4kB in size,
	     to initialize client writeback cache, which caused sub-optimal
	     RPCs and poor layout on disk for the first written file.
Details    : Clients now request an initial cache grant at (re)connect time
	     and so that they can start streaming writes to the cache right
	     away and always do full-sized RPCs if there is enough data.
	     If the OST is rebooted the client also re-establishes its grant
	     so that client cached writes will be honoured under the grant.

Severity   : minor
Frequency  : common
Bugzilla   : 7198
Description: Slow ls (and stat(2) syscall) on files residing on IO-loaded OSTs
Details    : Now I/O RPCs go to different portal number and (presumably) fast
	     lock requests (and glimses) and other RPCs get their own service
	     threads pool that should be able to service those RPCs
	     immediatelly.

Severity   : enhancement
Bugzilla   : 7417
Description: Ability to exchange lustre version between client and servers and
	     issue warnings at client side if client is too old. Also for
	     liblustre clients there is ability to refuse connection of too old
	     clients.
Details    : New 'version' field is added to connect data structure that is
	     filled with version info. That info is later checked by server and
	     by client.

Severity   : minor
Frequency  : rare, liblustre only.
Bugzilla   : 9296, 9581
Description: Two simultaneous writes from liblustre at offset within same page
	     might proceed at the same time overwriting eachother with stale
	     data.
Details    : I/O lock withing llu_file_prwv was released too early, before data
	     actually was hitting the wire. Extended lock-holding time until
	     server acknowledges receiving data.

Severity   : minor
Frequency  : extremely rare. Never observed in practice.
Bugzilla   : 9652
Description: avoid generating lustre_handle cookie of 0.
Details    : class_handle_hash() generates handle cookies by incrementing
	     global counter, and can hit 0 occasionaly (this is unlikely, but
	     not impossible, because initial value of cookie counter is
	     selected randonly). Value of 0 is used as a sentinel meaning
	     "unassigned handle" --- avoid it. Also coalesce two critical
	     sections in this function into one.

Severity   : enhancement
Bugzilla   : 9528
Description: allow liblustre clients to delegate truncate locking to OST
Details    : To avoid overhead of locking, liblustre client instructs OST to
	     take extent lock in ost_punch() on client's behalf. New connection
	     flag is added to handle backward compatibility.

Severity   : enhancement
Bugzilla   : 4928, 7341, 9758
Description: allow number of OST service threads to be specified
Details    : a module parameter allows the number of OST service threads
	     to be specified via "options ost ost_num_threads={N}" in the
	     OSS's /etc/modules.conf or /etc/modprobe.conf.

Severity   : major
Frequency  : rare
Bugzilla   : 6146, 9635, 9895
Description: servers crash with bad pointer in target_handle_connect()
Details    : In rare cases when a client is reconnecting it was possible that
	     the connection request was the last reference for that export.
	     We would temporarily drop the export reference and get a new
	     one, but this may have been the last reference and the export
	     was just destroyed.  Get new reference before dropping old one.

Severity   : enhancement
Frequency  : if client is started with failover MDS
Bugzilla   : 9818
Description: Allow multiple MDS hostnames in the mount command
Details    : Try to read the configuration from all specified MDS
	     hostnames during a client mount in case the "primary"
	     MDS is down.

Severity   : enhancement
Bugzilla   : 9297
Description: Stop sending data to evicted clients as soon as possible.
Details    : Check if the client we are about to send or are sending data to
	     was evicted already. (Check is done every second of waiting,
	     for which l_wait_event interface was extended to allow checking
	     of exit condition at specified intervals).

Severity   : minor
Frequency  : rare, normally only when NFS exporting is done from client
Bugzilla   : 9301
Description: 'bad disk LOV MAGIC: 0x00000000' error when chown'ing files
	     without objects
Details    : Make mds_get_md() recognise empty md case and set lmm size to 0.

Severity   : minor
Frequency  : always, if srand() is called before liblustre initialization
Bugzilla   : 9794
Description: Liblustre uses system PRNG disturbing its usage by user application
Details    : Introduce internal to lustre fast and high-quality PRNG for
	     lustre usage and make liblustre and some other places in generic
	     lustre code to use it.

Severity   : enhancement
Bugzilla   : 9477, 9557, 9870
Description: Verify that the MDS configuration logs are updated when xml is
Details    : Check if the .xml configuration logs are newer than the config
	     logs stored on the MDS and report an error if this is the case.
	     Request --write-conf, or allow starting with --old_conf.

Severity   : enhancement
Bugzilla   : 6034
Description: Handle symlinks in the path when checking if Lustre is mounted.
Details    : Resolve intermediate symlinks when checking if a client has
	     mounted a filesystem to avoid duplicate client mounts.

Severity   : minor
Frequency  : rare
Bugzilla   : 9309
Description: lconf can hit an error exception but still return success.
Details    : The lconf command catches the Command error exception at the top
	     level script context and will exit with the associated exit
	     status, but doesn't ensure that this exit status is non-zero.

Severity   : minor
Frequency  : rare
Bugzilla   : 9493
Description: failure of ptlrpc thread startup can cause oops
Details    : Starting a ptlrpc service thread can fail if there are a large
	     number of threads or the server memory is very fragmented.
	     Handle this without oopsing.

Severity   : minor
Frequency  : always, only if liblustre and non-default acceptor port was used
Bugzilla   : 9933
Description: liblustre cannot connect to servers with non-default acceptor port
Details    : tcpnal_set_default_params() was not called and was therefore
	     ignoring the environment varaible TCPNAL_PORT, as well as other
	     TCPNAL_ environment variables

Severity   : minor
Frequency  : rare
Bugzilla   : 9923
Description: two objects could be created on the same OST for a single file
Details    : If an OST is down, in some cases it was possible to create two
	     objects on a single OST for a single file.  No problems other
	     than potential performance impact and spurious error messages.

Severity   : minor
Frequency  : rare
Bugzilla   : 5681, 9562
Description: Client may oops in ll_unhash_aliases
Details    : Client dcache may become inconsistent in race condition.
	     In some cases "getcwd" can fail if the current directory is
	     modified.

Severity   : minor
Frequency  : always
Bugzilla   : 9942
Description: Inode refcounting problems in NFS export code
Details    : link_raw functions used to call d_instantiate without obtaining
	     extra inode reference first.

Severity   : minor
Frequency  : rare
Bugzilla   : 9942, 9903
Description: Referencing freed requests leading to crash, memleaks with NFS.
Details    : We used to require that call to ll_revalidate_it was always
	     followed by ll_lookup_it. Also with revalidate_special() it is
	     possible to call ll_revalidate_it() twice for the same dentry
	     even if first occurence returned success. This fix changes semantic
	     between DISP_ENQ_COMPLETE disposition flag to mean there is extra
	     reference on a request referred from the intent.
	     ll_intent_release() then releases such a request.

Severity   : minor
Frequency  : rare, normally benchmark loads only
Bugzilla   : 1443
Description: unlinked inodes were kept in memory on the client
Details    : If a client is repeatedly creating and unlinking files it
	     can accumulate a lot of stale inodes in the inode slab cache.
	     If there is no other client load running this can cause the
	     client node to run out of memory.  Instead flush old inodes
	     from client cache that have the same inode number as a new inode.

Severity   : minor
Frequency  : SLES9 2.6.5 kernel and long filenames only
Bugzilla   : 9969, 10379
Description: utime reports stale NFS file handle
Details    : SLES9 uses out-of-dentry names in some cases, which confused
	     the lustre dentry revalidation.  Change it to always use the
	     in-dentry qstr.

Severity   : major
Frequency  : rare, unless heavy write-truncate concurrency is continuous
Bugzilla   : 4180, 6984, 7171, 9963, 9331
Description: OST becomes very slow and/or deadlocked during object unlink
Details    : filter_destroy() was holding onto the parent directory lock
	     while truncating+unlinking objects.  For very large objects this
	     may block other threads for a long time and slow overall OST
	     responsiveness.  It may also be possible to get a lock ordering
	     deadlock in this case, or run out of journal credits because of
	     the combined truncate+unlink.  Solution is to do object truncate
	     first in one transaction without parent lock, and then do the
	     final unlink in a new transaction with the parent lock.  This
	     reduces the lock hold time dramatically.

Severity   : major
Frequency  : rare, 2.4 kernels only
Bugzilla   : 9967
Description: MDS or OST cleanup may trip kernel BUG when dropping kernel lock
Details    : mds_cleanup() and filter_cleanup() need to drop the kernel lock
	     before unmounting their filesystem in order to avoid deadlock.
	     The kernel_locked() function in 2.4 kernels only checks whether
	     the kernel lock is held, not whether it is this process that is
	     holding it as 2.6 kernels do.

Severity   : major
Frequency  : rare
Bugzilla   : 9635
Description: MDS or OST may oops/LBUG if a client is connecting multiple times
Details    : The client ptlrpc code may be trying to reconnect to a down
	     server before a previous connection attempt has timed out.
	     Increase the reconnect interval to be longer than the connection
	     timeout interval to avoid sending duplicate connections to
	     servers.

Severity   : minor
Frequency  : echo_client brw_test command
Bugzilla   : 9919
Description: fix echo_client to work with OST preallocated code
Details    : OST preallocation code (5137) didn't take echo_client IO path
	     into account: echo_client calls filter methods outside of any
	     OST thread and, hence, there is no per-thread preallocated
	     pages and buffers to use. Solution: hijack pga pages for IO. As
	     a byproduct, this avoids unnecessary data copying.

Severity   : minor
Frequency  : rare
Bugzilla   : 3555, 5962, 6025, 6155, 6296, 9574
Description: Client can oops in mdc_commit_close() after open replay
Details    : It was possible for the MDS to return an open request with no
	     transaction number in mds_finish_transno() if the client was
	     evicted, but without actually returning an error.  Clients
	     would later try to replay that open and may trip an assertion
	     Simplify the client close codepath, and always return an error
	     from the MDS in case the open is not successful.

Severity   : major
Frequency  : rare, 2.6 OSTs only
Bugzilla   : 10076
Description: OST may deadlock under high load on fragmented files
Details    : If there was a heavy load and highly-fragmented OST filesystems
	     it was possible to have all the OST threads deadlock waiting on
	     allocation of biovecs, because the biovecs were not released
	     until the entire RPC IO was completed.  Instead, release biovecs
	     as soon as they are complete to ensure forward IO progress.

Severity   : enhancement
Bugzilla   : 9578
Description: Support for specifying external journal device at mount
Details    : If an OST or MDS device is formatted with an external journal
	     device, this device major/minor is stored in the ext3 superblock
	     and may not be valid for failover.  Allow detecting and
	     specifying the external journal at mount time.

Severity   : major
Frequency  : rare
Bugzilla   : 10235
Description: Mounting an MDS with pending unlinked files may cause oops
Details    : target_finish_recovery() calls mds_postrecov() which returned
	     the number of orphans unlinked. mds_lov_connect->mds_postsetup()
	     considers this an error and immediately begins cleaning up the
	     lov, just after starting the mds_lov process

Severity   : enhancement
Bugzilla   : 9461
Description: Implement 'lfs df' to report actual free space on per-OST basis
Details    : Add sub-command 'df' on 'lfs' to report the disk space usage of
	     MDS/OSDs. Usage: lfs df [-i][-h]. Command Options: '-i' to report
	     usage of objects; '-h' to report in human readable format.

------------------------------------------------------------------------------

08-26-2005  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.5
       * bug fixes

Severity   : major
Frequency  : rare
Bugzilla   : 7264
Description: Mounting an ldiskfs file system with mballoc may crash OST node.
Details    : ldiskfs mballoc code may reference an uninitialized buddy struct
	     at startup during orphan unlinking.  Instead, skip buddy update
	     before setup, as it will be regenerated after recovery is complete.

Severity   : minor
Frequency  : rare
Bugzilla   : 7039
Description: If an OST is inactive, its locks might reference stale inodes.
Details    : lov_change_cbdata() must iterate over all namespaces, even if
	     they are inactive to clear inode references from the lock.

Severity   : enhancement
Frequency  : occasional, if non-standard max_dirty_mb used
Bugzilla   : 7138
Description: Client will block write RPCs if not enough grant
Details    : If a client has max_dirty_mb smaller than max_rpcs_in_flight,
	     then the client will block writes while waiting for another RPC
	     to complete instead of consuming its dirty limit.  With change
	     we get improved performance when max_dirty_mb is small.

Severity   : enhancement
Bugzilla   : 3389, 6253
Description: Add support for supplementary groups on the MDS.
Details    : The MDS has an upcall /proc/fs/lustre/mds/{mds}/group_upcall
	     (set to /usr/sbin/l_getgroups if enabled) which will do MDS-side
	     lookups for user supplementary groups into a cache.

Severity   : minor
Bugzilla   : 7278
Description: O_CREAT|O_EXCL open flags in liblustre always return -EEXIST
Details    : Make libsysio to not enforce O_EXCL by clearing the flag,
	     for liblustre O_EXCL is enforced by MDS.

Severity   : minor
Bugzilla   : 6455
Description: readdir never returns NULL in liblustre.
Details    : Corrected llu_iop_getdirentries logic, to return offset of next
	     dentry in struct dirent.

Severity   : minor
Bugzilla   : 7137
Frequency  : liblustre only, depends on application IO pattern
Description: liblustre clients evicted if not contacting servers
Details    : Don't put liblustre clients into the ping_evictor list, so
	     they will not be evicted by the pinger ever.

Severity   : enhancement
Bugzilla   : 6902
Description: Add ability to evict clients by NID from MDS.
Details    : By echoing "nid:$NID" string into
	     /proc/fs/lustre/mds/.../evict_client client with nid that equals to
	     $NID would be instantly evicted from this MDS and from all active
	     OSTs connected to it.

Severity   : minor
Bugzilla   : 7198
Description: Do not query file size twice, somewhat slowing stat(2) calls.
Details    : lookup_it_finish() used to query file size from OSTs that was not
	     needed.

Severity   : minor
Bugzilla   : 6237
Description: service threads change working directory to that of init
Details    : Starting lustre service threads may pin the working directory
	     of the parent thread, making that filesystem busy.  Threads
	     now change to the working directory of init to avoid this.

Severity   : minor
Bugzilla   : 6827
Frequency  : during shutdown only
Description: shutdown with a failed MDS or OST can cause unmount to hang
Details    : Don't resend DISCONNECT messages in ptlrpc_disconnect_import()
	     if server is down.

Severity   : minor
Bugzilla   : 7331
Frequency  : 2.6 only
Description: chmod/chown may include an extra supplementary group
Details    : ll{,u}_mdc_pack_op_data() does not properly initialize the
	     supplementary group and if none is specified this is used.

Severity   : minor
Bugzilla   : 5479 (6816)
Frequency  : rare
Description: Racing open + rm can assert client in mdc_set_open_replay_data()
Details    : If lookup is in progress on a file that is unlinked we might try
	     to revalidate the inode and fail in revalidate after lookup is
	     complete and ll_file_open() enqueues the open again but
	     it_open_error() was not checking DISP_OPEN_OPEN errors correctly.

Severity   : minor
Frequency  : always, if lconf --abort_recovery used
Bugzilla   : 7047
Description: lconf --abort_recovery fails with 'Operation not supported'
Details    : lconf was attempting to abort recovery on the MDT device and not
	     the MDS device

------------------------------------------------------------------------------

2005-08-08  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.4
       * bug fixes

Severity   : major
Frequency  : rare (only unsupported configurations with a node running as an
	     OST and a client)
Bugzilla   : 6514, 5137
Description: Mounting a Lustre file system on a node running as an OST could
	     lead to deadlocks
Details    : OSTs now preallocates memory needed to write out data at
	     startup, instead of when needed, to avoid having to
	     allocate memory in possibly low memory situations.
	     Specifically, if the file system is mounted on on OST,
	     memory pressure could force it to try to write out data,
	     which it needed to allocate memory to do.  Due to the low
	     memory, it would be unable to do so and the node would
	     become unresponsive.

Severity   : enhancement
Bugzilla   : 7015
Description: Addition of lconf --service command line option
Details    : lconf now accepts a '--service <arg>' option, which is
             shorthand for 'lconf --group <arg> --select <arg>=<hostname>'

Severity   : enhancement
Bugzilla   : 6101
Description: Failover mode is now the default for OSTs.
Details    : By default, OSTs will now run in failover mode.  To return to
             the old behaviour, add '--failout' to the lmc line for OSTs.

Severity   : enhancement
Bugzilla   : 1693
Description: Health checks are now provided for MDS and OSTs
Details    : Additional detailed health check information on MSD and OSTs
             is now provided through the procfs health_check value.

Severity   : minor
Frequency  : occasional, depends on IO load
Bugzilla   : 4466
Description: Disk fragmentation on the OSTs could eventually cause slowdowns
             after numerous create/delete cycles
Details    : The ext3 inode allocation policy would not allocate new inodes
             very well on the OSTs because there are no new directories
             being created.  Instead we look for groups with free space if
             the parent directories are nearly full.

Severity   : major
Bugzilla   : 6302
Frequency  : rare
Description: Network or server problems during mount may cause partially
             mounted clients instead of returning an error.
Details    : The config llog parsing code may overwrite the error return
             code during mount error handling, returning success instead
             of an error.

Severity   : minor
Bugzilla   : 6422
Frequency  : rare
Description: MDS can fail to allocate large reply buffers
Details    : After long uptimes the MDS can fail to allocate large reply
	     buffers (e.g. zconf client mount config records) due to memory
	     fragmentation or consumption by the buffer cache.  Preallocate
	     some large reply buffers so that these replies can be sent even
	     under memory pressure.

Severity   : minor
Bugzilla   : 6266
Frequency  : rare (liblustre)
Description: fsx running with liblustre complained that using truncate() to
             extend the file doesn't work.  This patch corrects that issue.
Details    : This is the liblustre equivalent of the fix for bug 6196.  Fixes
             ATTR_SIZE and lsm use in llu_setattr_raw.

Severity   : critical
Bugzilla   : 6866
Frequency  : rare, only 2.6 kernels
Description: Unusual file access patterns on the MDS may result in inode
             data being lost in very rare circumstances.
Details    : Bad interaction between the ea-in-inode patch and the "no-read"
             code in the 2.6 kernel caused the inode and/or EA data not to
             be read from disk, causing single-file corruption.

Severity   : critical
Bugzilla   : 6998
Frequency  : rare, only 2.6 filesystems using extents
Description: Heavy concurrent write and delete load may cause data corruption.
Details    : It was possible under high-load situations to have an extent
             metadata block in the block device cache from a just-unlinked
             file overwrite a newly-allocated data block.  We now unmap any
             metadata buffers that alias just-allocated data blocks.

Severity   : minor
Bugzilla   : 7241
Frequency  : filesystems with default stripe_count larger than 77
Description: lconf+mke2fs fail when formatting filesystem with > 77 stripes
Details    : lconf specifies an inode size of 4096 bytes when the default
             stripe_count is larger than 77.  This conflicts with the default
             inode density of 1 per 4096 bytes.  Allocate smaller inodes in
             this case to avoid pinning too much memory for large EAs.

------------------------------------------------------------------------------

2005-07-07  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.3
       * bug fixes

Severity   : minor
Frequency  : rare (extremely heavy IO load with hundreds of clients)
Bugzilla   : 6172
Description: Client is evicted, gets IO error writing to file
Details    : lock ordering changes for bug 5492 reintroduced bug 3267 and
             caused clients to be evicted for AST timeouts.  The fixes in
             bug 5192 mean we no longer need to have such short AST timeouts
             so ldlm_timeout has been increased.

Severity   : major
Frequency  : occasional during --force or --failover shutdown under load
Bugzilla   : 5949, 4834
Description: Server oops/LBUG if stopped with --force or --failover under load
Details    : a collection of import/export refcount and cleanup ordering
             issues fixed for safer force cleanup

Severity   : major
Frequency  : only filesystems larger than 120 OSTs
Bugzilla   : 5990, 6223
Description: lfs getstripe would oops on a very large filesystem
Details    : lov_getconfig used kfree on vmalloc'd memory

Severity   : minor
Frequency  : only filesystems exporting via NFS to Solaris 10 clients
Bugzilla   : 6242, 6243
Description: reading from files that had been truncated to a non-zero size
             but never opened returned no data
Details    : ll_file_read() reads zeros from no-object files to EOF

Severity   : major
Frequency  : rare
Bugzilla   : 6200
Description: A bug in MDS/OSS recovery could cause the OSS to fail an assertion
Details    : There's little harm in aborting MDS/OSS recovery and letting it
             try again, so I removed the LASSERT and return an error instead.

Severity   : enhancement
Bugzilla   : 5902
Description: New debugging infrastructure for tracking down data corruption
Details    : The I/O checksum code was replaced to: (a) control it at runtime,
             (b) cover more of the client-side code path, and (c) try to narrow
             down where problems occurred

Severity   : major
Frequency  : rare
Bugzilla   : 3819, 4364, 4397, 6313
Description: Racing close and eviction MDS could cause assertion in mds_close
Details    : It was possible to get multiple mfd references during close and
             client eviction, leading to one thread referencing a freed mfd.

Severity:  : enhancement
Bugzilla   : 3262, 6359
Description: Attempts to reconnect to servers are now more aggressive.
Details    : This builds on the enhanced upcall-less recovery that was added
             in 1.4.2.  When trying to reconnect to servers, clients will
             now try each server in the failover group every 10 seconds.  By
             default, clients would previously try one server every 25 seconds.

Severity   : major
Frequency  : rare
Bugzilla   : 6371
Description: After recovery, certain operations trigger a failed
             assertion on a client.
Details    : Failing over an mds, using lconf -d --failover, while a
             client was doing a readdir() call would cause the client to
             LBUG after recovery completed and the readdir() was resent.

Severity   : enhancement
Bugzilla   : 6296
Description: Default groups are now added by lconf
Details    : You can now run lconf --group <servicename> without having to
             manually add groups with lmc.

Severity   : major
Frequency  : occasional
Bugzilla   : 6412
Description: Nodes with an elan id of 0 trigger a failed assertion

Severity   : minor
Frequency  : always when accessing e.g. tty/console device nodes
Bugzilla   : 3790
Description: tty and some other devices nodes cannot be used on lustre
Details    : file's private_data field is used by device data and lustre
             values in there got lost. New field was added to struct file to
             store fs-specific private data.

Severity   : minor
Frequency  : when exporting Lustre via NFS
Bugzilla   : 5275
Description: NFSD failed occasionally when looking up a path component
Details    : NFSD is looking up ".." which was broken in ext3 directories
             that had grown large enough to become hashed.

Severity   : minor
Frequency  : Clusters with multiple interfaces not on the same subnet
Bugzilla   : 5541
Description: Nodes will repeatedly try to reconnect to an interface which it
             cannot reach and report an error to the log.
Details    : Extra peer list entries will be created by lconf with some peers
             unreachable.  lconf now validates the peer before adding it.

Severity   : major
Frequency  : Only if a default stripe is set on the filesystem root.
Bugzilla   : 6367
Description: Setting a default stripe on the filesystem root prevented the
             filesystem from being remounted.
Details    : The client was sending extra request flags in the root getattr
             request and did not allocate a reply buffer for the dir EA.

Severity   : major
Frequency  : occasional, higher if lots of files are accessed by one client
Bugzilla   : 6159, 6097
Description: Client trips assertion regarding lsm mismatch/magic
Details    : While revalidating inodes the VFS looks up inodes with ifind()
             and in rare cases can find an inode that is being freed.
             The ll_test_inode() code will free the lsm during ifind()
             when it finds an existing inode and then the VFS later attaches
             this free lsm to a new inode.

Severity   : major
Frequency  : rare
Bugzilla   : 6422, 7030
Description: MDS deadlock between mkdir and client eviction
Details    : Creating a new file via mkdir or mknod (starting a transaction
             and getting the ns lock) can deadlock with client eviction
             (gets ns lock and trying to finish a synchronous transaction).

Severity   : minor
Frequency  : occasional
Description: While starting a server, the fsfilt_ext3 module could not be
             loaded.
Details    : CFS's improved ext3 filesystem is named ldiskfs for 2.6
             kernels.  Previously, lconf would still use the ext3 name
             when trying to load modules.  Now, it will correctly use
             ext3 on 2.4 and ldiskfs on 2.6.

Severity   : enhancement
Description: The default stripe count has been changed to 1
Details    : The interpretation of the default stripe count (0, to lfs
             or lmc) has been changed to mean striping across a single
             OST, rather than all available.  For general usage we have
             found a stripe count of 1 or 2 works best.

Severity   : enhancement
Description: Add support for compiling against Cray portals.
Details    : Conditional compiling for some areas that are different
             on Cray Portals.

Severity   : major
Frequency  : occasional
Bugzilla   : 6409, 6834
Description: Creating files with an explicit stripe count may lead to
             a failed assertion on the MDS
Details    : If some OSTs are full or unavailable, creating files may
             trigger a failed assertion on the MDS.  Now, Lustre will
             try to use other servers or return an error to the
             client.

Severity   : minor
Frequency  : occasional
Bugzilla   : 6469
Description: Multiple concurrent overlapping read+write on multiple SMP nodes
             caused lock timeout during readahead (since 1.4.2).
Details    : Processes doing readahead might match a lock that hasn't been
             granted yet if there are overlapping and conflicting lock
             requests.  The readahead process waits on ungranted lock
             (original lock is CBPENDING), while OST waits for that process
             to cancel CBPENDING read lock and eventually evicts client.

Severity   : enhancement
Bugzilla   : 6931
Description: Initial enabling of flock support for clients
Details    : Implements fcntl advisory locking and file status functions.
	     This feature is provided as an optional mount flag (default
	     off), and is NOT CURRENTLY SUPPORTED.  Not all types of record
	     locking are implemented yet, and those that are are not guaranteed
	     to be completely correct in production environments.
	     mount -t lustre -o [flock|noflock] ...

Severity   : major
Frequency  : occasional
Bugzilla   : 6198
Description: OSTs running 2.4 kernels but with extents enabled might trip an
             assertion in the ext3 JBD (journaling) layer.
Details    : The b_committed_data struct is protected by the big kernel lock
             in 2.4 kernels, serializing journal_commit_transaction() and
             ext3_get_block_handle->ext3_new_block->find_next_usable_block()
             access to this struct.  In 2.6 kernels there is finer grained
             locking to improve SMP performance of the JBD layer.

Severity   : minor
Bugzilla   : 6147
Description: Changes the "SCSI I/O Stats" kernel patch to default to "enabled"

Severity   : Minor
Frequency  : Rare
Bugzilla   : 11248
Description: merge and cleanup kernel patches.
Details    :

-----------------------------------------------------------------------------

2005-05-05  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.2
       NOTE: Lustre 1.4.2 uses an incompatible network protocol than previous
	     versions of Lustre.  Please update all servers and clients to
	     version 1.4.2 or later at the same time.  You must also run
	     "lconf --write-conf {config}.xml" on the MDS while it is stopped
	     to update the configuration logs.
       * bug fixes
	- fix for HPUX NFS client breakage when NFS exporting Lustre (5781)
	- mdc_enqueue does not need max_mds_easize request buffer on send (5707)
	- swab llog records of type '0' so we get proper header size/idx (5861)
	- send llog cancel req to DLM cancel portal instead of cb portal (5515)
	- fix rename of one directory over another leaking an inode (5953)
	- avoid SetPageDirty on 2.6 (5981)
	- don't re-add just-being-destroyed locks to the waiting list (5653)
	- when creating new directories, inherit the parent's custom
	  striping settings if present parent (3048)
	- flush buffers from cache before direct IO in 2.6 obdfilter (4982)
	- don't hold i_size_sem in ll_nopage() and ll_ap_refresh_count (6077)
	- don't hold client locks on temporary worklist from l_lru (5666)
	- handle IO errors in 2.6 obdfilter bio completion routine (6046)
	- automatically evict dead clients (5921)
	- Update file size properly in create+truncate+fstat case (6196)
	- Do not unhash mountpoint dentries, do not allow removal of
	  mountpoints (5907)
	- Avoid lock ordering deadlock issue with write/truncate (6203,5654)
	- reserve enough journal credits in fsfilt_start_log for setattr (4554)
	- ldlm_enqueue freed-export error path would always LBUG (6149,6184)
	- don't reference lr_lvb_data until after we hold lr_lvb_sem (6170)
	- don't overwrite last_rcvd if there is a *_client_add() error (6086)
	- Correctly handle reads of files with no objects (6243)
	- lctl recover will also mark a device active if deactivate used (5933)
	* miscellania
	- by default create 1 inode per 4kB space on MDS, per 16kB on OSTs
	- allow --write-conf on an MDS with different nettype than client (5619)
	- don't write config llogs to MDS for mounts not from that MDS (5617)
	- lconf should create multiple TCP connections from a client (5201)
	- init scripts are now turned off by default; run chkconfig --on
	  lustre and chkconfig --on lustrefs to use them
	- upcalls are no longer needed for clients to recover to failover
	  servers (3262)
	- add --abort-recovery option to lconf to abort recovery on device
	  startup (6017)
	- add support for an arbitrary number of OSTs (3026)
	- Quota support protocol changes.
	- forward compatibility changes to wire structs (6007)
	- rmmod NALs that might be loaded because of /etc/modules.conf (6133)
	- support for mountfsoptions and clientoptions to the Lustre LDAP (5873)
	- improved "lustre status" script
	- initialize blocksize for non-regular files (6062)
	- added --disable-server and --disable-client configure options (5782)
	- introduce a lookup cache for lconf to avoid repeated DB scans (6204)
	- Vanilla 2.4.29 support
	- increase maximum number of obd devices to 520 (6242)
	- remove the tcp-zero-copy patch from the suse-2.4 series (5902)
	- Quadrics Elan drivers are now included for the RHEL 3 2.4.21 and
	  SLES 9 2.6.5 kernels
	- limit stripes per file to 160 (the maximum EA size) (6093)

2005-03-22  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.1
       * bug fixes
	- don't LASSERT in ll_release on NULL lld with NFS export (4655, 5760)
	- hold NS lock when calling handle_ast_error->del_waiting_lock (5746)
	- fix setattr mtime regression from lovcleanup merge (4829, 5669)
	- workaround for 2.6 crash in ll_unhash_aliases (5687, 5210)
	- small ext3 extents cleanups and fixes (5733)
	- improved mballoc code, several small races and bugs fixed (5733, 5638)
	- kernel version 43 - fix remove_suid bugs in both 2.4 and 2.6 (5695)
	- avoid needless client->OST connect, fix handle mismatch (5317)
	- fix DLM error path that led to out-of-sync client, long delays (5779)
	- support common vfs-enforced mount options (nodev,nosuid,noexec) (5637)
	- fix several locking issues related to i_size (5492,5624,5654,5672)
	- don't move pending lock onto export if it is already evicted (5683)
	- fix kernel oops when creating .foo in unlinked directory (5548)
	- fix deadlock in obdfilter statistics vs. object create (5811)
	- use time_{before,after} to avoid timer jiffies wrap (5882)
	- shutdown --force/--failover stability (3607,3651,4797,5203,4834)
	- Do not leak request if server was not able to process it (5154)
	- If mds_open unable to find parent dir, make that negative lookup(5154)
	- don't create new directories with extent-mapping (5909, 5936)
       * miscellania
	- fix lustre/lustrefs init scripts for SuSE (patch from Scali, 5702)
	- don't hold the pinger_sem in ptlrpc_pinger_sending_on_import
	- change obd_increase_kms to obd_adjust_kms (up or down) (5654)
	- lconf, lmc search both /usr/lib and /usr/lib64 for Python libs (5800)
	- support for RHEL4 kernel on i686 (5773)
	- provide error messages when incompatible logs are encountered (5898)

2005-02-18  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.0.10 (1.4.1 release candidate 1)
       * bug fixes
	- don't keep a lock reference when lock is not granted (4238)
	- unsafe list practices (rarely) led to infinite eviction loop (4908)
	- add per-fs limit of Lustre pages in page cache, avoid OOM (4699)
	- drop import inflight refcount on signal_completed_replay error (5255)
	- unlock page after async write error during send (3677)
	- handle missing objects in filter_preprw_read properly (5265)
	- no transno return for symlink open, don't save no-trasno open (3440)
	- don't try to complete elan receive that already failed (4012)
	- free RPC server reply state on error (5406)
	- clean up thread from ptlrpc_start_thread() on error (5160)
	- readahead could read extra page into cache that wasn't ejected (5388)
	- prevent races in class_attach/setup/cleanup/detach (5260)
	- don't dereference de->d_inode after l_dput of de (5458)
	- use "int" for stripe value returned from lock_to_stripe (5544)
	- mballoc allocation and error-checking fixes in 2.6 (5504)
	- block device patches to fix I/O request sizes in 2.6 (5482)
	- look up hostnames for IB nals (5602)
	- 2.6 changed lock ordering of 2 semaphores, caused deadlock (5654)
	- don't start multiple acceptors for the same port (5277)
	- fix incorrect LASSERT in mds_getattr_name (5635)
	- export a proc file for general "ping" checking (5628)
	- fix "lfs check" to not block when the MDS is down (5628)
       * miscellania
	- service request history (4965)
	- put {ll,lov,osc}_async_page structs in a single slab (4699)
	- create an "evict_client" /proc entry on OSTs, like the MDS has
	- fix mount usage message, return errors per mount(8) (5168)
	- change grep [] to grep "[]" in tests so they work in more UMLs
	- fix ppc64/x86_64 spec to use %{_libdir} instead of /usr/lib (5389)
	- remove ancient LOV_MAGIC_V0 EA support (5047)
	- add "disk I/Os in flight" and "I/O req time" stats in obdfilter
	- align r/w RPCs to PTLRPC_MAX_BRW_SIZE boundary for performance (3451)
	- allow readahead allocations to fail when low on memory (5383)
	- mmap locking landed again, after considerable improvement (2828)
	- add get_hostaddr() to lustreDB.py for LDAP support (5459)

2004-11-23  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.4.0
       * bug fixes
	- send OST transaction number in read/write reply to free req (4966)
	- don't ASSERT in ptl_send_rpc() if we run out of memory (5119)
	- lock /proc/sys/portals/routes internal state, avoiding oops (4827)
	- the watchdog thread now runs as interruptible (5246)
	- flock/lockf fixes (but it's still disabled, pending 5135)
	- don't use EXT3 constants in llite code (5094)
	- memory shortage at startup could cause assertion (5176)
       * miscellania
	- reorganization of lov code
	- single portals codebase
	- Infiniband NAL
	- add extents/mballoc support (5025)
	- direct I/O reads in the obdfilter (4048)
	- kernel patches from LNXI for 2.6 (bluesmoke, perfctr, mtd, kexec)

tbd         Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.9
       * bug fixes
	- send OST transaction number in read/write reply to free req (4966)
	- don't ASSERT in ptl_send_rpc() if we run out of memory (5119)
	- lock /proc/sys/portals/routes internal state, avoiding oops (4827)
	- the watchdog thread now runs as interruptible (5246)
	- handle missing objects in filter_preprw_read properly (5265)
	- unsafe list practices (rarely) led to infinite eviction loop (4908)
	- drop import inflight refcount on signal_completed_replay error (5255)
	- unlock page after async write error during send (3677)
	- return original error code on reconstructed replies (3761)
	- no transno return for symlink open, don't save no-trasno open (3440)
       * miscellania
	- add pid to ldlm debugging output (4922)
	- bump the watchdog timeouts -- we can't handle 30sec yet
	- extra debugging for orphan dentry/inode bug (5259)

2004-11-16  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.8
       * bug fixes
	- fix TCP_NODELAY bug, which caused extreme perf regression (5134)
	- allocate qswnal tx descriptors singly to avoid fragmentation (4504)
	- don't LBUG on obdo_alloc() failure, use OBD_SLAB_ALLOC() (4800)
	- fix NULL dereference in /proc/sys/portals/routes (4827)
	- allow failed mdc_close() operations to be interrupted (4561)
	- stop precreate on OST before MDS would time out on it (4778)
	- don't send partial-page writes before EOF from client (4410)
	- discard client grant for sub-page writes on large-page clients (4520)
	- don't free dentries not owned by NFS code, check generation (4806)
	- fix lsm leak if mds_create_objects() fails (4801)
	- limit debug_daemon file size, always print CERROR messages (4789)
	- use transno after validating reply (3892)
	- process timed out requests if import state changes (3754)
	- update mtime on OST during writes, return in glimpse (4829)
	- add mkfsoptions to LDAP (4679)
	- use ->max_readahead method instead of zapping global ra (5039)
	- don't interrupt __l_wait_event() during strace
       * miscellania
	- add software watchdogs to catch hung threads quickly (4941)
	- make lustrefs init script start after nfs is mounted
	- fix CWARN/ERROR duplication (4930)
	- return async write errors to application if possible (2248)
	- add /proc/sys/portal/memused (bytes allocated by PORTALS_ALLOC)
	- print NAL number in %x format (4645)
	- update barely-supported suse-2.4.21-171 series (4842)
	- support for sles 9 %post scripts
	- support for building 2.6 kernel-source packages
	- support for sles km_* packages

2004-10-07  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.7
       * bug fixes
	- ignore -ENOENT errors in osc_destroy (3639)
	- notify osc create thread that OSC is being cleaned up (4600)
	- add nettype argument for llmount in #5d in conf-sanity.sh (3936)
	- reconstruct ost_handle() like mds_handle() (4657)
	- create a new thread to do import eviction to avoid deadlock (3969)
	- let lconf resolve symlinked-to devices (4629)
	- don't unlink "objects" from directory with default EA (4554)
	- hold socknal file ref over connect in case target is down (4394)
	- allow more than 32000 subdirectories in a single directory (3244)
	- fix blocks count for O_DIRECT writes (3751)
	- OST returns ENOSPC from object create when no space left (4539)
	- don't send truncate RPC if file size isn't changing (4410)
	- limit OSC precreate to 1/2 of value OST considers bogus (4778)
	- bind to privileged port in socknal and tcpnal (3689)
       * miscellania
	- rate limit CERROR/CWARN console message to avoid overload (4519)
	- GETFILEINFO dir ioctl returns LOV EA + MDS stat in 1 call (3327)
	- basic mmap support (3918)
	- kernel patch series update from b1_4 (4711)

2004-09-16  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.6
       * bug fixes
	- avoid crash during MDS cleanup with OST shut down (2775)
	- fix loi_list_lock/oig_lock inversion on interrupted IO (4136)
	- don't use bad inodes on the MDS (3744)
	- dynamic object preallocation to improve recovery speed (4236)
	- don't hold spinlock over lock dumping or change debug flags (4401)
	- don't zero obd_dev when it is force cleaned (3651)
	- print grants to console if they go negative (4431)
	- "lctl deactivate" will stop automatic recovery attempts (3406)
	- look for existing locks in ldlm_handle_enqueue() (3764)
	- don't resolve lock handle twice in recovery avoiding race (4401)
	- revalidate should check working dir is a directory (4134)
       * miscellania
	- don't always mark "slow" obdfilter messages as errors (4418)

2004-08-24  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.5
       * bug fixes
	- don't close LustreDB during write_conf until it is done (3860)
	- fix typo in lconf for_each_profile (3821)
	- allow dumping logs from multiple threads at one time (3820)
	- don't allow multiple threads in OSC recovery (3812)
	- fix debug_size parameters (3864)
	- fix mds_postrecov to initialize import for llog ctxt (3121)
	- replace config semaphore with spinlock (3306)
	- be sure to send a reply for a CANCEL rpc with bad export (3863)
	- don't allow enqueue to complete on a destroyed export (3822)
	- down write_lock before checking llog header bitmap (3825)
	- recover from lock replay timeout (3764)
	- up llog sem before sending rpc (3652)
	- reduce ns lock hold times when setting kms (3267)
	- change a dlm LBUG to LASSERTF, to maybe learn something (4228)
	- fix NULL deref and obd_dev leak on setup error (3312)
	- replace some LBUG about llog ops with error handling (3841)
	- don't match INVALID dentries from d_lookup and spin (3784)
	- hold dcache_lock while marking dentries INVALID and hashing (4255)
	- fix invalid assertion in ptlrpc_set_wait (3880)
       * miscellania
	- add libwrap support for the TCP acceptor (3996)
	- add /proc/sys/portals/routes for non-root route listing (3994)
	- allow setting MDS UUID in .xml (2580)
	- print the stack of a process that LBUGs (4228)

2004-07-14  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.4
       * bug fixes
	- don't cleanup request in ll_file_open() on failed MDS open (3430)
	- make sure to unset replay flag from failed open requests (3440)
	- if default stripe count is 0, use OST count for inode size (3636)
	- update parent mtime/ctime on client for create/unlink (2611)
	- drop dentry ref in ext3_add_link from open_connect_dentry (3266)
	- free recovery state on server during a forced cleanup (3571)
	- unregister_reply for resent reqs (3063)
	- loop back devices mounting and status check on 2.6 (3563)
	- fix resource-creation race that can provoke i_size == 0 (3513)
	- don't try to use bad inodes returned from MDS/OST fs lookup (3688)
	- more debugging for page-accounting assertion (3746)
	- return -ENOENT instead of asserting if ost getattr+unlink race (3558)
	- avoid deadlock after precreation failure (3758)
	- fix race and lock order deadlock in orphan handling (3450, 3750)
	- add validity checks when grabbing inodes from l_ast_data (3599)
       * miscellania
	- add /proc/.../recovery_status to obdfilter (3428)
	- lightweight CDEBUG infrastructure, debug daemon (3668)
	- change default OSC RPC parameters to be better on small clusters
	- turn off OST read cache for files smaller than 32MB
	- install man pages and include them in rpms (3100)
	- add new init script for (un)mounting lustre filesystems (2593)
	- run chkconfig in %post for init scripts (3701)
	- drop scimac NAL (unmaintained)

2004-06-17  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.3
       * bug fixes
	- clean kiobufs before and after use (3485)
	- strip trailing '/'s before comparing paths with /proc/mounts (3486)
	- remove assertions to work around "in-flight rpcs" recovery bug (3063)
	- change init script to fail more clearly if not run as root (1528)
	- allow clients to reconnect during replay (1742)
	- fix ns_lock/i_sem lock ordering deadlock for kms update (3477)
	- don't do DNS lookups on NIDs too small for IP addresses (3442)
	- re-awaken ptlrpcd if new requests arrive during check_set  (3554)
	- fix cond_resched  (3554)
	- only evict unfinished clients after recovery (3515)
	- allow bulk resend, prevent data loss (3570)
	- dynamic ptlrpc request buffer allocation (2102)
	- don't allow unlinking open directory if it isn't empty (2904)
	- set MDS/OST threads to umask 0 to not clobber client modes (3359)
	- remove extraneous obd dereference causing LASSERT failure (3334)
	- don't use get_cycles() when creating temp. files on the mds (3156)
	- hold i_sem when setting i_size in ll_extent_lock() (3564)
	- handle EEXIST for set-stripe, set proper directory name (3336)
       * miscellania
	- servers can dump a log evicting a client - lustre.dump_on_timeout=1
	- fix ksocknal_fmb_callback() error messages (2918)

2004-05-27  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.2
       * bug fixes
	- don't copy lvb into (possibly NULL) reply on error (2983)
	- don't deref dentry after dput, don't free lvb on error (2922)
	- use the kms to determine writeback rpc length (2947)
	- increment oti_logcookies when osc is inactive (2948)
	- update client's i_blocks count via lvb messages (2543)
	- handle intent open/close of special files properly (1557)
	- mount MDS with errors=remount-ro, like obdfilter (2009)
	- initialize lock handle to avoid ASSERT on error cleanup (3057)
	- don't use cancelling-locks' kms values (2947)
	- use highest lock extent for kms, not last one (2925)
	- don't dereference ERR_PTR() dentry in error handling path (3107)
	- fix thread race in portals_debug_dumplog() (3122)
	- create lprocfs device entries at setup instead of at attach (1519)
	- common AST error handler, don't evict client on completion race (3145)
	- zero nameidata in detach_mnt in 2.6 (3118)
	- verify d_inode after revalidate_special is valid in 2.6 (3116)
	- use lustre_put_super() to handle zconf unmounts in 2.6 (3064)
	- initialize RPC timeout timer earlier for 2.6 (3219)
	- don't dereference NULL reply buffer if mdc_close was never sent (2410)
	- print nal/nid for unknown nid (3258)
	- additional checks for oscc recovery before doing precreate (3284)
	- fix ll_extent_lock() error return code for 64-bit systems (3043)
	- don't crash in mdc_close for bad permissions on open (3285)
	- zero i_rdev for non-device files (3147)
	- clear page->private before handing to FS, better assertion (3119)
	- tune the read pipeline (3236)
	- fix incorrect decref of invalidated dentry (2350)
	- provide read-ahead stats and refine rpc in flight stats (3328)
	- don't hold journal transaction open across create RPC (3313)
	- update atime on MDS at close time (3265)
	- close LDAP connection when recovering to avoid server load (3315)
	- update iopen-2.6 patch with fixes from 2399,2517,2904 (3301)
	- don't leak open file on MDS after open resend (3325)
	- serialize filter_precreate and filter_destroy_precreated (3329)
	- loop device shouldn't call sync_dev() for nul device (3092)
	- clear page cache after eviction (2766)
	- resynchronize MDS->OST in background (2824)
	- refuse to mount the same filesystem twice on same mountpoint (3394)
	- allow llmount to create routes for mounting behind routers (3320)
	- push lock cancellation to blocking thread for glimpse ASTs (3409)
	- don't call osc_set_data_with_check() for TEST_LOCK matches (3159)
	- fix rare problem with rename on htree directories (3417)
       * miscellania
	- allow default OST striping configuration per directory (1414)
	- fix compilation for qswnal for 2.6 kernels (3125)
	- increase maximum number of MDS request buffers for large systems
	- change liblustreapi to be useful for external progs like lfsck (3098)
	- increase local configuration timeout for slow disks (3353)
	- allow configuring ldlm AST timeout - lustre.ldlm_timeout=<seconds>

2004-03-22  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.1
       * bug fixes
	- fixes for glimpse AST timeouts / incorrectly 0-sized files (2818)
	- don't overwrite extent policy data in reply if lock was blocked (2901)
	- drop filter export grants atomically with removal from device (2663)
	- del obd_self_export from work_list in class_disconnect_exports (2908)
	- don't LBUG if MDS recovery times out during orphan cleanup (2530)
	- swab reply message in mdc_close, other PPC fixes (2464)
	- fix destroying of named logs (2325)
	- overwrite old logs when running lconf --write_conf (2264)
	- bump LLOG_CHUNKSIZE to 8k to allow for larger clusters (2306)
	- fix race in target_handle_connect (2898)
	- mds_reint_create() should take same inode create lock (2926)
	- correct journal credits calculated for CANCEL_UNLINK_LOG (2931)
	- don't close files for self_export to avoid uninitialized obd (2936)
	- allow MDS with the same name as client node (2939)
	- hold dentry reference for closed log files for unlink (2325)
	- reserve space for all logs during transactions (2059)
	- don't evict page beyond end of stripe extent (2925)
	- don't oops on a deleted current working directory (2399)
	- handle hard links to targets without a parent properly (2517)
	- don't dereference NULL lock when racing during eviction (2867)
	- don't grow lock extents when lots of conflicting locks (2919)

2004-03-04  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.2.0
       * bug fixes
	- account for cache space usage on clients to avoid data loss (974)
	- lfsck support in lustre kernel code (2349)
	- reduce journal credits needed for BRW writes (2370)
	- orphan handling to avoid losing space on client/server crashes
	- ptlrpcd can be blocked, stopping ALL progress (2477)
	- use lock value blocks to assist in proper KMS, faster stat (1021)
	- takes i_sem instead of DLM locks internally on obdfilter (2720)
	- recovery for initial connections (2355)
	- fixes for mds_cleanup_orphans (1934)
	- abort_recovery crashes MDS in b_eq (mds_unlink_orphan) (2584)
	- block all file creations until orphan recovery completes (1901)
	- client remove rq_connection from request struct (2423)
	- conf-sanity test_5, proper cleanup in umount log not availale (2640)
	- recovery timer race (2670)
	- mdc_close recovey bug (2532)
	- ptlrpc cleanup bug (2710)
	- mds timeout on local locks (2588)
	- namespace lock held during RPCs (2431)
	- handle interrupted sync write properly (2503)
	- don't try to handle a message that hasn't been replied to (2699)
	- client assert failure during cleanup after abort recovery (2701)
	- leak mdc device after failed mount (2712)
	- ptlrpc_check_set allows timedout requests to complete (2714)
	- wait for inflight reqs when ptlrpcd finishes (2710)
	- make sure unregistered services are removed from the srv_list
	- reset bulk XID's when resending them (caught by 1138 test)
	- unregister_bulk after timeout
	- fix lconf error (2694)
	- handle write after unfinished setstripe, stripe-only getstripe (2388)
	- readahead locks pages, leaves pending causing memory pressure (2673)
	- increase OST request buffers to 4096 on large machines (2729)
	- fix up permission of existing directories in simple_mkdir (2661)
	- init deleted item, add assertions ptlrpc_abort_inflight() (2725)
	- don't assign transno to errored transactions (2742)
	- don't delete objects on OST if given a bogus objid from MDS (2751)
	- handle large client PAGE_SIZE readdir on small PAGE_SIZE MDS (2777)
	- if rq_no_resend, then timeout request after recovery (2432)
	- fix MDS llog_logid record size, 64-bit array alignment (2733)
	- don't call usermode_helper from ptlrpcd, DEFAULT upcall (2773)
	- put magic in mount.lustre data, check for bad/NULL mount data (2529)
	- MDS recovery shouldn't delete objects that it has given out (2730)
	- if enqueue arrives after completion, don't clobber LVB (2819)
	- don't unlock pages twice when trigger_group_io returns error (2814)
	- don't deref NULL rq_repmsg if ldlm_handle_enqueue failed (2822)
	- don't write pages to disk if there was an error (1450)
	- don't ping imports that have recovery disabled (2676)
	- take buffered bytes into account when balancing socknal conn (2817)
	- hold a DLM lock over readdir always, use truncate_inode_pages (2706)
	- reconnect unlink llog connection after MDS reconnects to OST (2816)
	- remove little-endian swabbing of llog records (1987)
	- set/limit i_blksize to LL_MAX_BLKSIZE on client (2884)
	- retry reposting request buffers if they fail (1191)
	- grow extent at grant time to avoid granting a revoked lock (2809)
	- lock revoke doesn't evict page if covered by a second lock (2765)
	- disable VM readahead to avoid reading outside lock extents (2805)
       * miscellania
	- return LL_SUPER_MAGIC from statfs for the filesystem type (1972)
	- updated kernel patches for hp-2.4.20 kernel (2681)

2004-02-07  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.0.4
       * kernel patches
	- fix truncated write corruption (2366)
	- fix for failed assertion in iopen_connect_dentry (1792,2517)
       * bug fixes
	- don't flag the ptlrpcd thread with PF_MEMALLOC (2636)
	- ensure len(uuid) < 37 in lmc (1171)
	- fix ia64 OOPS in llog_test (2255)
	- zero end of page at obdfilter for partial page writes (2648)
	- don't leave stale dentries around after renames (bug 2428)
	- fix timeouts when evicting a client with a single lock held (2642)
	- set deadline for the initial HELLO message to drain (2634)
	- print out dotted-quad IP addresses in the socknal (2302)
       * miscellania
	- additional debugging for MDS client eviction problem (2443)
	- fix mkfsoptions support for osts (2603, 2604)

2004-01-27  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.0.3
       * kernel patches
	- add series for the vanilla 2.6.0 kernel
	- add series for the vanilla 2.4.24 kernel
	- add series for a cray x86/64 UL kernel drop
	- fix xattr patches for the vanilla 2.4.19 series
       * bug fixes
	- generate true UUIDs in lmc (1171)
	- have portals stack dumping break in UML (2466)
	- avoid bad dchild deref; avoid inum lock w/o creation (2362)
	- allocate with _NOFS in ldlm to avoid deadlock (1933)
	- wake callback waiting threads on client eviction (2460)
	- Add --ptldebug and --subsystem to lmc (1719)
	- update assertion to allow safe interrupt allocation
	- set rq_no_resend for cancel requests (2432)
	- recalculate ptlrpcd timeout after resend (2494)
	- call vfs_rmdir when removing pending directories (2368)
	- fix renaming a file to itself (2429)
	- lmc creates a default one-stripe lov (2454)
	- expand procfs space to handle large clusters (2326)
	- increase UML stack to avoid overflow
	- update lconf's list of debug and subsystem masks
	- fix lfs find --obd (2510)
	- /proc tunable for disabling filter read caching (2591)
	- stop rpm packages from altering slapd.conf (2301)
	- disable nagle in the socknal under 0conf (2578)
	- choose mds inode size based on stripe count (2572)
	- fix kernel-source rpm problems (2516)
       * miscellania
	- add --disable-doc to avoid pdf generation (2421)
	- update documentation, tests, type-os, comments
	- avoid format warnings on ia64
	- remove the TOE NAL
	- tiny code cleanups by removing unused fields

2004-01-07  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.0.2
       * bug fixes
	- fix obvious semaphore misuse in as-yet-unused setattr path (2348)
	- remove the most blatant lies from BUILDING file (2371)
	- change default debug level to reasonable production setting
	- reduce client side cache size to reduce cache flush time
	- reduce max RPCs in flight to avoid unnecessary file fragmentation
	- make TCP zerocopy and pinger support enabled by default (2476)
	- sync writes completed after process exits caused crashes (2319)
	- maintain correct mount count on the MDS (2356)
	- backout 1557, because 2316 wasn't really fixed
	- better file I/O statistics gathering in /proc
	- don't take unnecessary, deadlock-inducing bug in readpage (2383)
	- another kernel patch to fix zero-copy TCP function export
	- don't take duplicate lock when processing re-sent getattr (2420)
	- lctl uses obd_self_export instead of creating new conn (2353)
	- MDS/OST recovery case which requires object creation asserted (2425)
	- move lfs from /usr/sbin to /usr/bin in packages
	- fix race between mds_client_add and mds_client_free (2417)
	- use kmalloc instead of slabs in portals (2430)
	- don't create duplicate records when a failover MDS is present (2442)
	- remove unnecessary mount age check (2332)
	- don't remove directory inodes from locks prematurely (2451)
	- don't break if MDS service name is the same as hostname (2103)
	- fix races in client write RPC generation when cache full (2482)

2003-12-13  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.0.1
       * bug fixes
	- remove now-unused request->rq_obd (278)
	- if an allocation fails, print out how much memory we've used (1933)
	- use PORTAL_SLAB_ALLOC for structures, to get GFP_MEMALLOC (1933)
	- add the "configurable stack size" patch to most series files (1256)
	- ability to write large log records, for 100+ OST configs (2306)
	- fix NULL deref when filter_prep fails (2314)
	- fix operator precedence error in filter_sync
	- dynamic allocation of socknal TX descriptors (2315)
	- fix a missed case in the GFP_MEMALLOC patch, can cause deadlock (2310)
	- fix gcc 2.96 compilation problem in xattr kernel patch (2294)
	- ensure that CWARN messages in Portals always get to the syslog
	- __init/__exit are not for prototype decls (ldlm_init/exit)
	- x86-64 compile warning fixes
	- fix gateway LMC keyword conflict (2318)
	- fix MDS lock inversions in getattr/reint paths (1844)
	- fix a rare lock re-ordering bug, which caused deadlock (2322)
	- fix i_sem/journal inversion in fsfilt_ext3_write_record (2306)
	- DLM race condition prevented some lock evictions (2328)
	- ENOMEM detection and retry on socknal sends (2230)
	- use GFP_NOFS throughout Lustre, to combat ENOMEM (2230)
	- move osc_rpcd into ptlrpc, for use in MDC and others (2329)
	- protect MDS inode fsdata with stronger locking; fixes assertion (2313)
	- better error messages when a client is rejected during recovery (1505)
	- avoid cancelling locks which were never granted, after failure (2330)
	- fix i_sem/journal inversion in mds_client_add (2333)
	- fix truncate/getattr lock cycle deadlock (2334)
	- use rpcd to send close; allows resend after timeout, avoid leak (1897)
	- fix two rare exit paths which could leak an l_lock() ref (2321)
	- fencepost error in MDS/OST orphan recovery (2226)
	- make log record alignment 8 bytes (1988)
	- lstripe now fails when requested offset > ost_count (2237)
	- ensure that all kernel series have a complete list.h (1607)
	- fix crashes in special-file operations (2316)
	- lctl create/brw OID mismatch, caused by obsolete filter loop (2339)
       * miscellania
	- allow configurable automake binary, for testing new versions
	- small update to the lfs documentation

2003-12-03  Cluster File Systems, Inc. <info@clusterfs.com>
       * version 1.0.0
       * fix negative export reference count in fsfilt_sync (2312)

2003-12-01  Cluster File Systems, Inc. <info@clusterfs.com>
       * release candidate 0.9.1
       * bug fixes
	- orphans are moved into the PENDING directory for possible recovery
	- replayed opens now open by fid for orphan/rename safety (1042)
	- last close of an orphan inode generates a transno (683)
	- chdir() and mount() now pin the directory entry (1020)
	- avoid CERROR in normal ll_setattr_raw() error case (1500)
	- discard very old requests without processing them (1502)
	- remove some common, well-understood CERRORs (1505)
	- require O_DIRECT I/O to be page-sized to workaround IA64 crash (1609)
	- clear "grant" flags in OST replies until OST grant code lands (1644)
	- fix read performance by not clobbering i_blksize on client (1598)
	- fix __ldlm_handle2lock oops by not dereferencing lock after PUT (1625)
	- make LRU size a /proc tunable, clears locks when reduced (707)
	- fix some lprocfs rot that prevented ptlbd from loading (1732)
	- server locks take references on exports now (1558)
	- build fixes for 2.4.20-rh trees (1663)
	- return an error from lov_create if all OSCs are inactive (1751)
	- fix import levels when a reconnect happens without a timeout (1597)
	- exit early from mds_open if we get a lookup error (1749)
	- partial page read at EOF wouldn't wait for disk before sending (1642)
	- avoid NULL deref in obdfilter when reading page past EOF (1592)
	- avoid LASSERT in ll_intent_lock if server failed very early (1090)
	- fix LBUG in ll_it_open_error with rc = -2 (1861)
	- write/truncate lock inversion (1639)
	- Don't auto-load obdclass, portals modules during cleanup (1495)
	- fix timestamps from jumping to "now" (1763)
	- extra journal assertions (1648)
	- add an extra multiunlink test (1771)
	- fix read_record/write_record API (1776)
	- fix leak of offset_extent, possible incorrect i_size later (1772)
	- fix lasserts in mis-matched transnos during open-unlink testing (1541)
	- Debugging for the kqswnal_get_idle_tx problems (1820)
	- Allow recovery to be attempted multiple times (1536)
	- Write out MDS last_rcvd file after it is first created (1600)
	- Fix tx_descriptor leak in failed transmit situations (1827)
	- ext3 journaling fixes for assertion failure after IO error (1871)
	- class_export_put() on freed export after completion AST error (1896)
	- Fix revalidate looping in VFS (1322)
	- Don't access a freed export during MDS_REINT timeout (1521)
	- Add open-unlink recovery support on the MDS (1673,1764)
	- Return an error if no MDS data was read from last_rcvd (1946)
	- Fix for lookup "." or ".." crash on error (1932,1931,1935)
	- Don't setup a disk device that doesn't match exported UUID (317)
	- Reduce bulk RPC timeout to avoid cascading client/OST failures (1845)
	- avoid committing NULL handle in force close
	- local.sh is now a one-stripe LOV configuration
	- POSIX utime.4 -EPERM on FIFO not owned by user (56)
	- fix ext3 htree duplicate directory entry corruption (1516)
	- POSIX creat.13, fstat.1, open.18, stat.3 new file atime/mtime (2020)
	- update to new LOV EA format (2097)
	- interoperability for different PAGE_SIZE/wordsize (686,1821,1343,2042)

2003-06-15  Phil Schwan  <phil@clusterfs.com>
       * version v0_7
       * bug fixes
	- imports and exports cleanup too early, need refcounts (349, 879, 1045)
	- per-import/export recovery handling (958, 931, 959)
	- multiple last-rcvd slots, for serving multiple FSes (949)
	- connections are again shared between multiple imp/exports (963, 964)
	- "umount -f" would hang if any requests needed to be sent (393, 978)
	- avoid pinning large req buffer by copying for queued messages (989)
	- add "uuid" to "lctl device" command to help upcalls (991)
	- "open" RPCs with transnos would confuse recovery counters (1037)
	- do proper endian conversion of all wire messages (288, 340, 891)
	- remove OST bulk get LBUGs, fix ost_brw_write cleanup (1126)
	- call waiting locks callback from LDLM recovery thread (1127, 1151)
	- fix ptlrpc_connection leak in target_handle_connect (1174)
	- fix import refcounting bug in OST and MDS cleanup (1134)
	- if an invalid-at-open-time OSC returned before close(), LBUG (1150)
	- fix very unlikely obd_types race condition (501)
	- remove osc_open hack for echo_client (1187)
	- we leaked exports/dlmimps for forcibly disconnected clients (1143)
	- a failure in read_inode2 leads to deadlock (1139)
	- cancel ack-locks as soon as transaction is committed (1072)
	- fix major leaks and crashes in the bulk I/O path (937, 1057)
	- make sure to commitrw after any preprw to avoid deadlock (1162)
	- failing to execute a file in a lustre FS would lock inode (1203)
	- small DEBUG_REQ fix to avoid dereferencing a NULL (1227)
	- don't ASSERT while cleaning up an incompletely-setup obd (1248)
	- obd_uuid2tgt would walk off the end of the list (1255)
	- on IA64 the osc would give portals incorrect bulk size (1258)
	- fix debug daemon ioctl interface; allows daemon on ia64 (1274)
	- fix lock inversion caused by new llite matching code (1282)
	- limit the number of dirty pages on a client to 10MB (1286)
	- timed out locks were not being corrected cancelled (1289)
	- fix O_DIRECT above 4GB on IA-32 (1292)
       * major user-visible changes
	- fail out/fail over policy now controlled by the upcall (993)
       * protocol changes
	- add OBD_PING to check server availability and failure (954)
	- lustre messages are now sent in sending host order (288, 340, 891)
	- add eadatalen to MDS getattr reply (340)
	- OST read replies may contain second buffer, with per-page status (593)

2003-03-11  Phil Schwan  <phil@clusterfs.com>
       * version v0_6
       * bug fixes
	- LDLM_DEBUG macro fix, for gcc 3.2 (850)
	- failed open()s could cause deadlock; fixed (867, 869)
	- stop cancelling OST locks when files are closed (481)
	- overlapping XID spaces caused network corruption (851, 853)
	- fix unsafe fsfilt counter arithmetic; change to atomic_t
	- setattr_raw added, to do single-RPC, server-side setattrs
	- lmc/lconf syntax change for OST UUIDs
	- fix crashy race condition between ptlrpc_free_req and osc_close
	- don't use request in mdc_enqueue if we hit a timeout (889)
	- don't set the inode i_size for regular files from the MDS (896)
	- handle out of order completion AST (842)
	- don't LBUG if a lock request times out after receiving AST (913)
	- avoid d_rehash race in ll_find_alias by rehashing inside dcache_lock
	- if a bad lock AST arrives, send an error instead of dropping entirely
	- return 0 from revalidate2 if ll_intent_lock returns -EINTR (912)
	- fix leak in bulk IO when only partially completed (899, 900, 926)
	- fix O_DIRECT for ia64 (55)
	- (almost) eliminate Lustre-kernel-thread effects on load average (722)
	- C-z after timeout could hang a process forever; fixed (977)
       * Features
	- client-side I/O cache (678, 924, 929, 941, 970)
       * protocol changes
	- READPAGE and SETATTRs which don't take server-side locks get
	  their own portal

2003-02-11  Phil Schwan  <phil@clusterfs.com>
	* version v0_5_20
	* bug fixes
	 - Fix ldlm_lock_match on the MDS to avoid matching remote locks (592)
	 - Fix fsfilt_extN_readpage() to read a full page of directory
	   entries, or fake the remainder if PAGE_SIZE != blocksize (500)
	 - Avoid extra mdc_getattr() in ll_intent_lock when possible (534, 604)
	 - Fix imbalanced LOV object allocation and out-of-bound access (469)
	 - Most intent operations were removed, in favour of a new RPC mode
	   that does a single RPC to the server and bypasses most of the VFS
	 - All LDLM resource ID arrays were removed in favour of ldlm_res_id
	 - Aggressively cancel local locks on DLM servers
	 - mds_reint_unlink sends EA to the client if it's the last nlink.
	   client uses that EA to unlink OST objects.
	 - mds_reint_{rename,unlink,link} were rewritten to take ordered locks
	 - recursive symlinks were fixed (439)
	 - fixed NULL deref in DEBUG_REQ
	 - filter_update_lastobjid no longer calls sync, which annoyed extN
	 - fixed multi-client small-writes to a single file problem (445)
	 - fixed mtime updates during file writes (607)
	 - fixed vector writes on obdfilter causing problems when ENOSPC (670)
	 - fixed bug in obd_brw_read/write() (under guise of testing 367)
	 - fixed Linux OST size reporting problem (444, 656)
	 - OST now updates object mtime with writes or setattr (607, 619)
	 - client verifies file size before zeroing page past EOF (445)
	 - OST now writes last allocated objid to disk with allocation (108)
	 - LOV on echo now works (409)
	* protocol changes
	 - mds_reint_unlink sends a new buffer, with the EA included.  this
	   buffer is only valid if body->valid & OBD_MD_FLEASIZE, which is only
	   set if a regular file was being unlinked, and it was the last link
	 - use PtlGet from the target for bulk writes (315)
	 - OST now updates object mtime with writes or setattr (607, 619)
	 - LDLM now has a grant-time callback to revalidate locked items, if
	   necessary (604)
	 - Many MDS operations were reorganized to combat race conditions
	* other changes
	 - Merge b_intel branch (updated lprocfs code) - now at /proc/fs/lustre
	 - configure check to avoid gcc version 2.96 20000731-2.96-98) (606)

2003-01-06  Andreas Dilger  <adilger@clusterfs.com>
	* version v0_5_19
	* bug fixes
	 - Fully reactivate OST imports after reconnection (512, others)
	 - Make sure client sees our -ENOTCONN from mds_handle (513 - partial)
	 - More graceful error handling for truncating on dead OST (515)
	 - Don't error out unless we're actually accessing dead stripes (474)
	 - Fix garbage sizes when stripes are missing (410)
	 - LRU counters were broken, causing constant lock purge (433, 432)
	 - garbage on read from stripes with failed OSTs (441)
	 - mark OSCs as active before reconnecting during recovery (438)
	 - lov_enqueue and lov_cancel need to handle inactive OSTs (403)
	 - lfind did not preserve OST order in output (443)
	 - symlinks cause hung clients, incorrect data (439)
	 - stop dereferencing request after dropping refcount (457)
	 - don't LASSERT(spin_is_locked) on non-SMP (455)
	 - fixes for many rename() bugs
	 - fstat didn't correctly synchronize attributes (399)
	 - server must handle lock cancellation during blocking AST prep (487)
	 - bulk descriptors were free()d too soon (511)
	 - fix paths in lconf, which would load incorrect modules (451, 507)
	 - fix confusing lconf 'host not found' error message (386)
	 - fix lock order deadlock on OST (O/R i_sem before journal ops, 478)
	 - fix race condition in mdc_blocking_ast() for inode access (526)
	 - fix lov_unpackmd() unpacking wrong number of stripes (537)
	 - fix lov_set_osc_active() marking wrong OSC inactive (440)
	 - fix bad lstripe lov_unpackmd() assertion (fix layering too) (527)
	 - fix multiple writes of stripe MD to MDS (358, maybe 519)
	 - fix lstripe in several ways (kernel side) (527)
	 - fix request leak in ldlm_cli_enqueue (262)
	 - incorrect OSC was marked inactive after OST failure
	 - call mds_fs_cleanup before unmounting filesystem (524)
	 - fix races between taking ns_lock and ldlm_lock_change_resource
	 - fix races updating LOV export open file list
	 - fix lov_enqueue error path, avoid decref-ing bad lock handle
	 - fix recovery NULL deref in ldlm_cli_cancel_unused
	 - fix some DLM races by using new hash table for lock handles (419)
	 - permit the client to specify desired inodes, at replay
	 - duplicate requests when we queue them for replay reintegration
	 - fix last_rcvd offset calculation
	 - sync after each recovered transaction, so we always make progress
	 - never, not always, ERESTART requests without transnos
	 - store the lov_desc in the MDS, so we don't depend on getlovinfo to
	   set it
	 - skip replay if the MDS says that the client is already connected
	 - don't check for a recovery-enabled export to match lctl's UUID
	 - don't INC_USE_COUNT for phantom exports
	 - don't crash when cleaning up phantom exports (567)
	 - don't double-finish or set replay data for errored mdc_open requests
	 - abort requests when they time out, so we don't get old replies
	 - send/receive replies for AST messages again
	 - if the client says that it doesn't have the lock, cancel it on the
	   server
	 - if we timeout during I/O, don't try to cancel an in-use lock; instead
	   mark it as destroyed, it will all work out when decref is called
	 - fix module use counts (22, 581)
	* protocol changes
	 - ASTs now expect a reply (server cancels lock on error reply)

2002-12-02  Andreas Dilger  <adilger@clusterfs.com>
	* version v0_5_18
	* bug fixes
	  - fix many simultaneous client startup (392)
	  - fix dentry->d_it clobbering
	  - credentials weren't being shipped for readdir/getattr operations
	  - remove invalid assertions triggered during some concurrent MD
	    updates
	  - proper Lustre versions added (336, 389)
	  - fix memory leak for create error case (398)
	  - fix LOV locking bug that would get cli/srv out of sync
	  - fix echo client over LOV (409)
	  - fix dbench 2, extN refcount problem (170, 258, 356, 418)
	  - fix double-O_EXCL intent crash (424)
	  - avoid sending multiple lock CANCELs (352)
	* Features
	  - MDS can do multi-client recovery (modulo bugs in new code)
	* Documentation
	  - many updates, edits, cleanups

2002-11-18  Phil Schwan  <phil@clusterfs.com>
	* version v0_5_17
	* bug fixes
	  - fix null d_it dereference (346)
	  - fix full OST/dbench hang (333)
	  - fix permission problem with file removal (286)
	  - fix removal of OSCs from LOV when they fail
	  - fix NULL deref during bulk timeout (214)
	  - fix problems related to multiple filesystems on one MDS (241)
	  - fixed serious subtle metadata locking bugs
	  - free locks on clients when inodes are removed due to memory
	    pressure (201)
	  - fix inode pointer in lock data (285)
	  - partial support for multiple MDS on a single host (241)
	  - data locks weren't cancelled at clear_inode time (290, 311)
	  - intent locks could lead to unbounded lock growth (205)
	  - added a maximum lock count, an LRU list, and a flusher
	  - fix multiple rename (365)
	  - properly abstracted the echo client
	  - OSC locked 1 byte too many; fixed
	  - rewrote brw callback code:
	  - fixed recovery bugs related to LOVs (306)
	  - fixed too-many-pages-in-one-write crash (191)
	  - fixed (again) crash in sync_io_timeout (214)
	  - probably fixed callback-related race (385)
	* protocol change
	  - Add capability to MDS protocol
	  - LDLM cancellations and callbacks on different portals

2002-10-28  Andreas Dilger  <adilger@clusterfs.com>
	* version v0_5_16
	* bug fixes:
	  - limit client IOV size to PTL_MD_MAX_IOV (611336, 191)
	  - defer open object destruction to close time (601981, 138)
	  - open/close OST file handle in obdo (OBD_MD_FLHANDLE) (601981, 138)
	  - move LDLM_ENQUEUE/CONVERT back to MDS portal (625069)
	  - abstract ll_lookup2, fix ll_revalidate2 to use abstraction (256)
	  - don't call obd_setattr in ll_file_release for destroyed objects
	* protocol change to lustre_msg: move |version| and add |flags|
	* protocol change to osc_punch: "start" in "o_size", "end" in "o_blocks"
	* lock replay: for LDLM_FL_REPLAY trust client to do right thing
	* added replay of create, unlink, link and rename operations during
	  MDS failover; recovery should be much more robust now
	* remove failed OSCs from LOVs (only lov_create uses this so far)
	* the lustre-HOWTO was brought (more) up to date (582544)

2002-10-23  Phil Schwan  <phil@clusterfs.com>
	* version v0_5_15
	* bug fixes:
	  - in-use dentries weren't being reused properly (617851)
	  - prevent multiple LDLM setup (599178)
	  - fix LOV size calculations for truncate (617853)
	  - fix client handling of MDS intent errors (POSIX)
	  - fix permission bug in lovstripe.c test (624321)
	  - fix MDS thread deadlock - move LDLM handler to DLM portal (625069)
	  - truncate past end of file could corrupt data
	  - proper cleanup after timeouts, crashes, etc (592524, 550815)
	  - a race in recovery could return ETIMEDOUT to apps (623947)
	  - building outside the source directory was fixed
	* the lustre-HOWTO was brought (more) up to date (582544)
	* major progress was made on recovery functionality

2002-10-10  Phil Schwan  <phil@clusterfs.com>
	* version v0_5_14
	* bug fixes:
	  - recovery deadlock fix
	  - rm -rf causes LBUG fix (617817)
	  - file open by multiple tasks fix (618962)
	  - directory permissions bugs (602707 and 620007)
	  - journal_stop fixed with locking (611313)
	  - O_APPEND failures resolved (618273, perhaps 614459)
	  - lconf PATH fix (619770)
	  - IA64 build fix (621450)
	  - RPC buffer sizes scale with amount of memory

2002-10-01  Phil Schwan  <phil@clusterfs.com>
	* version v0_5_13
	* bug fixes:
	  - locks would be cancelled without throwing away data pages,
	    resulting in inconsistent data (605627)
	  - inode attributes were not always being refreshed (605627, 612449)
	  - lconf now continues to cleanup after lctl reports an error
	  - MDS now enforces user permissions (602707)
	  - lprocfs cleanup fixed, but not yet enabled (614157)
	  - fixed infinite server hang, should a client not respond to an AST
	  - avoid going into recovery if user calls readlink() with a buffer
	    that's too small (613941)
	  - AST RPCs no longer require replies (614867) -- this may be changed
	  - don't crash server if client sends an IOV that's too big (611336)
	  - fixed lock conversion deadlock (611892)
	  - fixed the following of symlinks (614622)
	* recovery: the server can remove locks from a client that dies, other
	  clients can make progress
	* more extN patch fixes
	* compile-time configurable ptlrpc buffer allocations
	* documentation
	  - collaborative read cache document
	  - Lustre Lite Performance CDR document-in-progress

2002-09-20  Andreas Dilger  <adilger@clusterfs.com>
	* version v0_5_12
	* bug fix
	  - fix typo in patch-2.4.18

2002-09-20  Andreas Dilger  <adilger@clusterfs.com>
	* version v0_5_11
	* bug fixes
	  - clear ptlrpc request each time in handle_incoming_request()
	  - unlink of files now destroys the object on the OST

2002-09-19  Peter Braam  <braam@clusterfs.com>
	* version 0_5_10
	* add hard link support
	* change obdfile creation method
	* kernel patch changed

2002-09-19  Peter Braam  <braam@clusterfs.com>
	* version 0_5_9
	* bug fix
	  - stack overflow bug in extN fixed

2002-09-18  Andreas Dilger  <adilger@clusterfs.com>
	* version 0_5_8
	* documentation updates
	  - add man pages for config tools
	  - update tests/README to describe testing with new config tools
	  - finish metadata API descriptions
	* bug fixes and cleanups
	  - statfs workaround for 16TB limit
	  - LOV stripe allocation improved, can stripe on subset of OSTs
	  - LOV file size/IO offset was wrong for files > 4GB in size
	  - object EA data was being dropped, caused files to be unreadable
	  - memory overflow with non-LOV OST caused memory corruption
	  - fixed regression tests to work with new config tools, obdfilter
	  - fixed bug when directory size became larger than 1 block
	  - fixed bug (for single client case) when PWD was deleted
	  - invalidate local directory pages when doing intent-based ops
	  - avoid LDLM oops when lock callback contained bad data

2002-09-09  Andreas Dilger  <adilger@clusterfs.com>
	* version 0_5_7
	* documentation updates
	* bug fixes and cleanups
	  - configuration tools
	  - LOV
	  - imports/exports
	  - 64-bit compile warnings
	  - 64-bit internal statfs data
	  - many more
	* test_brw on persistent OST devices
	* MDS recovery
	* lprocfs (disabled)

2002-09-04  Andreas Dilger  <adilger@clusterfs.com>
	* version 0_5_6
	* documentation updates
	* bug fixes and cleanups
	* configuration tools

2002-08-30  Peter J. Braam  <braam@clusterfs.com>

	* version v0_5_5
	* many small fixes to 0_5_4
	* io/network handling
	* thinkos in MDS operations

2002-08-24  Peter J. Braam  <braam@clusterfs.com>

	* version v0_5_4
	* crucial basic fixes to 0.5.3
	* IOR, Iozone work over Elan
	* EOF locks added

2002-08-07  Phil Schwan  <phil@clusterfs.com>
	* version 0_5_3, our first alpha
	* we use the new Portals iovs
	* documentation updates
	* bug fixes and cleanups
	* small changes in the DLM wire protocol

2002-07-25  Peter J. Braam  <braam@clusterfs.com>
	* version 0_5_1 with some initial stability,
	* locking on MD and file I/O.
	* documentation updates
	* several bug fixes since 0.5.0
	* small changes in wire protocol

2002-07-18  Phil Schwan  <phil@clusterfs.com>
	* version v0_4_5
	* delivered as Lustre Light Alpha
	* fixed a crash after handling invalid MDS requests
	* fixed directory pages for architectures with non-4k pages sizes

2002-07-11  Andreas Dilger  <adilger@clusterfs.com>
	* release version v0_4_4
	* Moves TCP acceptor to be on port 2432 (unused Coda port) instead
	  of 1234.
	* Fixes a number of interruption problems with OST operations.
	* Update documentation for portals header changes
	* Move all wire protocol structs/defines to lustre_idl.h
	* Fixes symlink length bug.
	* Add tcpdump to repository.

2002-07-05  Andreas Dilger  <adilger@clusterfs.com>
	* release version v0_4_3
	* Fixes statfs for inodes on extN.
	* Fixes bug in runtests which would delete /etc/hosts.
	* Use 64-bit object IDs wherever possible (not into VFS though)
	  Remove ost_get_info, which is unused by lustre, and out of date.

2002-07-03  Peter Braam  <braam@clusterfs.com>
	* release version v0_4_2   Fixes a lookup error (type not passed)
	* move forward to head of Portals
	* move forward to latest Lustre kernel

2002-06-25  Peter Braam  <braam@clusterfs.com>
	* release version v0_4_1.  Hopefully stable on single node use.
